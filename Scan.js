local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v80 = v2(v0(v30, 16));
			if v19 then
				local v89 = 0;
				local v90;
				while true do
					if (v89 == 1) then
						return v90;
					end
					if (v89 == 0) then
						v90 = v5(v80, v19);
						v19 = nil;
						v89 = 1;
					end
				end
			else
				return v80;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v81 = (v31 / (((1070 - (68 + 997)) - 3) ^ (v32 - (2 - 1)))) % ((3 - 1) ^ (((v33 - (1 + 0)) - (v32 - (1 + 0))) + (2 - (1271 - (226 + 1044)))));
			return v81 - (v81 % (4 - 3));
		else
			local v82 = (879 - (282 + 595)) ^ (v32 - (620 - (555 + 64)));
			return (((v31 % (v82 + v82)) >= v82) and (1 + 0)) or (931 - (857 + 74));
		end
	end
	local function v21()
		local v34 = v1(v16, v18, v18);
		v18 = v18 + 1;
		return v34;
	end
	local function v22()
		local v35, v36 = v1(v16, v18, v18 + (119 - (32 + 85)));
		v18 = v18 + 2 + 0;
		return (v36 * (57 + 199)) + v35;
	end
	local function v23()
		local v37, v38, v39, v40 = v1(v16, v18, v18 + (960 - (892 + 65)));
		v18 = v18 + (9 - 5);
		return (v40 * (16777566 - (87 + 263))) + (v39 * (121138 - 55602)) + (v38 * (469 - 213)) + v37;
	end
	local function v24()
		local v41 = 180 - (67 + 113);
		local v42;
		local v43;
		local v44;
		local v45;
		local v46;
		local v47;
		while true do
			if (v41 == (2 + 0)) then
				v46 = v20(v43, 51 - 30, 10 + 13 + 8);
				v47 = ((v20(v43, 127 - 95) == (953 - (802 + 150))) and -(2 - 1)) or (1 - 0);
				v41 = 3 + 0;
			end
			if (v41 == (998 - (915 + 82))) then
				v44 = (6 - 4) - 1;
				v45 = (v20(v43, 1 + (1747 - (760 + 987)), 20) * ((774 - (201 + 571)) ^ ((1932 - (1789 + 124)) + 13))) + v42;
				v41 = 8 - (772 - (745 + 21));
			end
			if (v41 == (2 + 1)) then
				if (v46 == (0 - 0)) then
					if (v45 == (1187 - (1069 + 118))) then
						return v47 * (0 - 0);
					else
						v46 = 860 - (814 + 45);
						v44 = 0 - 0;
					end
				elseif (v46 == (356 + 1691)) then
					return ((v45 == (0 + 0)) and (v47 * (((1 + 0) - 0) / (0 + (0 - 0))))) or (v47 * NaN);
				end
				return v8(v47, v46 - (1817 - 794)) * (v44 + (v45 / ((793 - ((1443 - 1075) + 423)) ^ (1475 - (630 + 7 + 786)))));
			end
			if (v41 == (0 - (0 + 0))) then
				v42 = v23();
				v43 = v23();
				v41 = 19 - (10 + 8);
			end
		end
	end
	local function v25(v48)
		local v49;
		if not v48 then
			v48 = v23();
			if (v48 == (1055 - (87 + 968))) then
				return "";
			end
		end
		v49 = v3(v16, v18, (v18 + v48) - (4 - 3));
		v18 = v18 + v48;
		local v50 = {};
		for v64 = 1 + 0, #v49 do
			v50[v64] = v2(v1(v3(v49, v64, v64)));
		end
		return v6(v50);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v51 = (function()
			return 1763 - (454 + 1309);
		end)();
		local v52 = (function()
			return;
		end)();
		local v53 = (function()
			return;
		end)();
		local v54 = (function()
			return;
		end)();
		local v55 = (function()
			return;
		end)();
		local v56 = (function()
			return;
		end)();
		local v57 = (function()
			return;
		end)();
		while true do
			if (v51 == (603 - (268 + 335))) then
				local v86 = (function()
					return 0 + 0;
				end)();
				local v87 = (function()
					return;
				end)();
				while true do
					if (0 ~= v86) then
					else
						v87 = (function()
							return 0 - 0;
						end)();
						while true do
							if (v87 == 0) then
								v52 = (function()
									return {};
								end)();
								v53 = (function()
									return {};
								end)();
								v87 = (function()
									return 1;
								end)();
							end
							if (v87 ~= 2) then
							else
								v51 = (function()
									return #" ";
								end)();
								break;
							end
							if ((573 - (426 + 146)) ~= v87) then
							else
								v54 = (function()
									return {};
								end)();
								v55 = (function()
									return {v52,v53,nil,v54};
								end)();
								v87 = (function()
									return 2 - 0;
								end)();
							end
						end
						break;
					end
				end
			end
			if (v51 == 2) then
				for v91 = #":", v23() do
					local v92 = (function()
						return v21();
					end)();
					if (v20(v92, #"[", #"~") == (0 - 0)) then
						local v99 = (function()
							return 285 - (134 + 151);
						end)();
						local v100 = (function()
							return;
						end)();
						local v101 = (function()
							return;
						end)();
						local v102 = (function()
							return;
						end)();
						while true do
							if (1 ~= v99) then
							else
								local v109 = (function()
									return 0;
								end)();
								local v110 = (function()
									return;
								end)();
								while true do
									if (v109 == (1456 - (282 + 1174))) then
										v110 = (function()
											return 1665 - (970 + 695);
										end)();
										while true do
											if (v110 == (812 - (569 + 242))) then
												v99 = (function()
													return 3 - 1;
												end)();
												break;
											end
											if (v110 == (1990 - (582 + 1408))) then
												v102 = (function()
													return {v22(),v22(),nil,nil};
												end)();
												if (v100 == (0 - 0)) then
													local v120 = (function()
														return 0 - 0;
													end)();
													local v121 = (function()
														return;
													end)();
													while true do
														if (v120 == (1824 - (1195 + 629))) then
															v121 = (function()
																return 0 - 0;
															end)();
															while true do
																if (v121 ~= (0 - 0)) then
																else
																	v102[#"-19"] = (function()
																		return v22();
																	end)();
																	v102[#"0313"] = (function()
																		return v22();
																	end)();
																	break;
																end
															end
															break;
														end
													end
												elseif (v100 == #":") then
													v102[#"asd"] = (function()
														return v23();
													end)();
												elseif (v100 == (2 + 0)) then
													v102[#"xnx"] = (function()
														return v23() - (2 ^ (257 - (187 + 54)));
													end)();
												elseif (v100 ~= #"91(") then
												else
													local v5074 = (function()
														return 780 - (162 + 618);
													end)();
													while true do
														if (v5074 ~= (0 + 0)) then
														else
															v102[#"91("] = (function()
																return v23() - ((1502 - (1408 + 92)) ^ (12 + 4));
															end)();
															v102[#"0836"] = (function()
																return v22();
															end)();
															break;
														end
													end
												end
												v110 = (function()
													return 1 + 0;
												end)();
											end
										end
										break;
									end
								end
							end
							if ((6 - 3) == v99) then
								if (v20(v101, #"91(", #"-19") ~= #".") then
								else
									v102[#"?id="] = (function()
										return v57[v102[#"xnxx"]];
									end)();
								end
								v52[v91] = (function()
									return v102;
								end)();
								break;
							end
							if ((0 - 0) == v99) then
								local v112 = (function()
									return 0;
								end)();
								while true do
									if (v112 == (1172 - (418 + 753))) then
										v99 = (function()
											return 1 + 0;
										end)();
										break;
									end
									if (v112 ~= (0 + 0)) then
									else
										v100 = (function()
											return v20(v92, 1638 - (1373 + 263), #"19(");
										end)();
										v101 = (function()
											return v20(v92, #".dev", 1 + 5);
										end)();
										v112 = (function()
											return 1001 - (451 + 549);
										end)();
									end
								end
							end
							if (v99 == (1 + 1)) then
								if (v20(v101, #"/", #"}") == #">") then
									v102[2] = (function()
										return v57[v102[1 + 1]];
									end)();
								end
								if (v20(v101, 2 - 0, 2 - 0) ~= #"\\") then
								else
									v102[#"91("] = (function()
										return v57[v102[#"asd"]];
									end)();
								end
								v99 = (function()
									return 3;
								end)();
							end
						end
					end
				end
				for v93 = #".", v23() do
					v53[v93 - #"/"] = (function()
						return v28();
					end)();
				end
				return v55;
			end
			if (v51 == #">") then
				local v88 = (function()
					return 1384 - (746 + 638);
				end)();
				while true do
					if (v88 == 1) then
						for v104 = #":", v56 do
							local v105 = (function()
								return 1322 - (1249 + 73);
							end)();
							local v106 = (function()
								return;
							end)();
							local v107 = (function()
								return;
							end)();
							local v108 = (function()
								return;
							end)();
							while true do
								if ((0 + 0) ~= v105) then
								else
									local v113 = (function()
										return 1145 - (466 + 679);
									end)();
									while true do
										if (v113 == (1 - 0)) then
											v105 = (function()
												return 1;
											end)();
											break;
										end
										if (v113 ~= (0 - 0)) then
										else
											v106 = (function()
												return 0;
											end)();
											v107 = (function()
												return nil;
											end)();
											v113 = (function()
												return 342 - (218 + 123);
											end)();
										end
									end
								end
								if (v105 == (1582 - (1535 + 46))) then
									v108 = (function()
										return nil;
									end)();
									while true do
										if (v106 == 0) then
											local v117 = (function()
												return 0;
											end)();
											local v118 = (function()
												return;
											end)();
											while true do
												if (v117 ~= (1900 - (106 + 1794))) then
												else
													v118 = (function()
														return 0 + 0;
													end)();
													while true do
														if (v118 ~= (0 + 0)) then
														else
															v107 = (function()
																return v21();
															end)();
															v108 = (function()
																return nil;
															end)();
															v118 = (function()
																return 1 + 0;
															end)();
														end
														if (v118 ~= (561 - (306 + 254))) then
														else
															v106 = (function()
																return #".";
															end)();
															break;
														end
													end
													break;
												end
											end
										end
										if (#"!" ~= v106) then
										else
											if (v107 == #"/") then
												v108 = (function()
													return v21() ~= 0;
												end)();
											elseif (v107 == (5 - 3)) then
												v108 = (function()
													return v24();
												end)();
											elseif (v107 == #"91(") then
												v108 = (function()
													return v25();
												end)();
											end
											v57[v104] = (function()
												return v108;
											end)();
											break;
										end
									end
									break;
								end
							end
						end
						v55[#"gha"] = (function()
							return v21();
						end)();
						v88 = (function()
							return 1 + 1;
						end)();
					end
					if (v88 ~= (0 - 0)) then
					else
						v56 = (function()
							return v23();
						end)();
						v57 = (function()
							return {};
						end)();
						v88 = (function()
							return 585 - (57 + 527);
						end)();
					end
					if (v88 ~= (1469 - (899 + 568))) then
					else
						v51 = (function()
							return 2 + 0;
						end)();
						break;
					end
				end
			end
		end
	end
	local function v29(v58, v59, v60)
		local v61 = v58[1 + 0];
		local v62 = v58[(9 - 6) - 1];
		local v63 = v58[3];
		return function(...)
			local v66 = v61;
			local v67 = v62;
			local v68 = v63;
			local v69 = v27;
			local v70 = 2 - 1;
			local v71 = -(167 - (122 + 44));
			local v72 = {};
			local v73 = {...};
			local v74 = v12("#", ...) - (3 - 2);
			local v75 = {};
			local v76 = {};
			for v83 = 0, v74 do
				if (v83 >= v68) then
					v72[v83 - v68] = v73[v83 + 1 + (0 - 0)];
				else
					v76[v83] = v73[v83 + 1 + 0];
				end
			end
			local v77 = (v74 - v68) + ((953 - (864 + 88)) - (1079 - (662 + 417)));
			local v78;
			local v79;
			while true do
				v78 = v66[v70];
				v79 = v78[(1511 - (898 + 547)) - (30 + 23 + 12)];
				if (v79 <= (147 + 66)) then
					if (v79 <= (1363 - (1043 + 214))) then
						if (v79 <= (196 - (362 - 218))) then
							if (v79 <= (1237 - (323 + 889))) then
								if (v79 <= (31 - 19)) then
									if ((4863 > 1107) and (v79 <= (585 - (361 + 219)))) then
										if ((v79 <= 2) or (4247 < 3145)) then
											if ((v79 <= (320 - (53 + 267))) or (4426 >= 4984)) then
												v76[v78[(1 - 0) + 1]] = v76[v78[1 + 2]] * v76[v78[4]];
											elseif (v79 > (414 - (15 + 398))) then
												local v1017;
												local v1018, v1019;
												local v1020;
												v76[v78[2]] = v59[v78[985 - (18 + 964)]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[7 - 5]] = v76[v78[2 + 1]];
												v70 = v70 + (1154 - (482 + 671)) + (588 - (158 + 430));
												v78 = v66[v70];
												v76[v78[852 - (16 + 4 + 830)]] = v76[v78[3 + (1755 - (764 + 991))]] + v78[130 - (76 + 40 + 10)];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[740 - (542 + 196)]] = v76[v78[6 - 3]][v78[2 + 2]];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v1020 = v78[1 + 1];
												v1018, v1019 = v69(v76[v1020](v13(v76, v1020 + (2 - 1), v78[7 - 4])));
												v71 = (v1019 + v1020) - 1;
												v1017 = 1551 - (1126 + 425);
												for v4221 = v1020, v71 do
													v1017 = v1017 + (1653 - (1489 + 163));
													v76[v4221] = v1018[v1017];
												end
												v70 = v70 + (406 - (118 + 287));
												v78 = v66[v70];
												v1020 = v78[7 - 5];
												v76[v1020] = v76[v1020](v13(v76, v1020 + (1122 - (118 + 1003)), v71));
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v76[v78[379 - (142 + 235)]][v76[v78[13 - 10]]] = v76[v78[1 + 3]];
												v70 = v70 + (978 - (553 + 424));
												v78 = v66[v70];
												v76[v78[3 - 1]] = v76[v78[3 + 0]] + v78[4 + 0];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[1 + 1]] = v76[v78[2 + 1]][v76[v78[4]]];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v76[v78[5 - 3]] = v76[v78[3]][v78[8 - 4]];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[9 - 7]] = v76[v78[756 - (239 + 514)]][v76[v78[2 + 2]]];
												v70 = v70 + (1330 - (797 + 532));
												v78 = v66[v70];
												v76[v78[2 + 0]] = v76[v78[2 + 1]][v78[9 - 5]];
												v70 = v70 + (1203 - (373 + 829));
												v78 = v66[v70];
												v76[v78[733 - (476 + 255)]] = v76[v78[1133 - (369 + 761)]][v78[3 + 1]];
												v70 = v70 + ((1 + 0) - 0);
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[5 - 2]][v76[v78[4]]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[240 - (64 + 174)]][v76[v78[1 + 2]]] = v76[v78[5 - 1]];
												v70 = v70 + (337 - (144 + 192));
												v78 = v66[v70];
												v76[v78[218 - (42 + 105 + 69)]] = v76[v78[3 + 0]] + v78[4 + 0];
												v70 = v70 + 1 + (0 - 0);
												v78 = v66[v70];
												v76[v78[1506 - (363 + 1141)]] = v76[v78[1583 - ((2012 - 829) + 397)]] + v78[(163 - (137 + 15)) - 7];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[2 + 0]] = v76[v78[1978 - (1913 + 62)]][v76[v78[3 + 1]]];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v76[v78[1935 - (565 + 1368)]] = v76[v78[11 - 8]][v78[1665 - (1477 + 184)]];
												v70 = v70 + (1 - 0);
												v78 = v66[v70];
												v76[v78[2 + 0]] = v76[v78[859 - (564 + 292)]][v78[(30 - (11 + 13)) - (8 - 6)]];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v76[v78[308 - ((947 - (668 + 35)) + 28 + 32)]]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v76[v78[3 + 0 + 0]]] = v76[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[479 - (41 + 435)]] + v78[1005 - (938 + 63)];
												v70 = v70 + (1573 - (736 + 836)) + 0;
												v78 = v66[v70];
												v76[v78[1127 - (936 + 189)]] = v76[v78[1 + 2]] + v78[1617 - (1565 + 48)];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2 + 0]] = v76[v78[1141 - (782 + 356)]][v76[v78[4]]];
												v70 = v70 + (268 - (176 + 91));
												v78 = v66[v70];
												v76[v78[4 - 2]] = v76[v78[4 - 1]][v78[1096 - (975 + 117)]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[1877 - (157 + 1718)]] = v76[v78[3 + 0]][v78[14 - 10]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[(16 - 10) - 4]][v76[v78[3]]] = v76[v78[1022 - ((1676 - 979) + (857 - (185 + 351)))]];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v76[v78[3 - (221 - (21 + 199))]] = v78[6 - 3];
											else
												v76[v78[(19 - (17 + 1)) + 1]] = v76[v78[5 - 2]][v78[10 - 6]];
												v70 = v70 + (1228 - (322 + 905));
												v78 = v66[v70];
												v76[v78[613 - (602 + 9)]] = v76[v78[3]][v78[1193 - (449 + 740)]];
												v70 = v70 + (873 - (826 + 46));
												v78 = v66[v70];
												v76[v78[949 - ((1313 - (1060 + 8)) + (2556 - (762 + 1092)))]][v76[v78[9 - 6]]] = v76[v78[2 + (4 - 2)]];
												v70 = v70 + (1899 - (260 + 1638));
												v78 = v66[v70];
												v76[v78[442 - ((1249 - (504 + 363)) + 58)]] = v76[v78[9 - 6]] + v78[(1407 - (604 + 799)) + 0];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[3 - 1]] = v76[v78[8 - 5]][v76[v78[1209 - (902 + 303)]]];
												v70 = v70 + (1 - 0);
												v78 = v66[v70];
												v76[v78[(7 - 3) - (2 + 0)]] = v78[1 + 2];
											end
										elseif (v79 <= 3) then
											for v970 = v78[1692 - (1121 + 569)], v78[3] do
												v76[v970] = nil;
											end
											v70 = v70 + (215 - (22 + 192));
											v78 = v66[v70];
											v76[v78[685 - (483 + (766 - (361 + 205)))]] = v76[v78[(1135 + 331) - (1404 + 59)]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[2 - 0]] = v76[v78[768 - (468 + 297)]];
											v70 = v70 + (563 - (334 + 228));
											v78 = v66[v70];
											for v972 = v78[6 - 4], v78[6 - 3] do
												v76[v972] = nil;
											end
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[1 + 2]][v78[240 - (141 + 95)]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[4 - 2]] = v59[v78[3]];
											v70 = v70 + ((2 + 0) - (1742 - (714 + 1027)));
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[8 - 5]][v78[4]];
											v70 = v70 + 1 + 0 + 0;
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[4 - 1]][v76[v78[4]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v76[v78[3]]] = v76[v78[9 - 5]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2 + (0 - 0)]] = v76[v78[2 + 1]] + v78[167 - ((142 - 50) + 71)];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2 - 0]] = v76[v78[768 - (203 + 371 + 191)]][v76[v78[4 + 0]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[7 - 4]][v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[3]][v78[853 - (254 + 595)]];
											v70 = v70 + (127 - (55 + 71));
											v78 = v66[v70];
											v76[v78[2 - 0]] = v76[v78[3]][v76[v78[1794 - (573 + 1217)]]];
											v70 = v70 + ((8 - 6) - 1);
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[4 - 1]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[942 - (714 + 225)]][v76[v78[11 - 7]]];
											v70 = v70 + (1 - (0 + 0));
											v78 = v66[v70];
											v76[v78[1 + 1]][v76[v78[3 - 0]]] = v76[v78[810 - (118 + 688)]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[50 - (25 + 15 + 8)]] = v78[1 + 2];
										elseif (v79 == 4) then
											local v1079 = 1886 - (927 + 959);
											while true do
												if (v1079 == (0 - 0)) then
													v76[v78[351 - (103 + 246)]] = v59[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v1079 = 733 - (16 + 716);
												end
												if ((5 - 2) == v1079) then
													v76[v78[99 - (11 + 86)]] = v76[v78[(22 - 16) - 3]][v76[v78[289 - ((522 - 347) + 110)]]];
													v70 = v70 + (2 - 1);
													v78 = v66[v70];
													v1079 = 19 - 15;
												end
												if (v1079 == (1798 - (503 + 1293))) then
													v76[v78[(3 + 2) - 3]] = v76[v78[(8 - 5) + 0]][v78[4]];
													v70 = v70 + (1062 - (810 + 251));
													v78 = v66[v70];
													v1079 = 3 + 0;
												end
												if (v1079 == (2 + 2 + 1)) then
													do
														return;
													end
													break;
												end
												if (v1079 == 1) then
													v76[v78[2]] = v59[v78[3 + 0]];
													v70 = v70 + (534 - (43 + 490));
													v78 = v66[v70];
													v1079 = 2;
												end
												if (v1079 == (737 - (711 + 22))) then
													do
														return v76[v78[7 - 5]];
													end
													v70 = v70 + 1;
													v78 = v66[v70];
													v1079 = 864 - (240 + 619);
												end
											end
										else
											local v1080;
											v1080 = v78[1 + 1];
											v76[v1080] = v76[v1080]();
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[3]];
											v70 = v70 + (1745 - (1344 + 400));
											v78 = v66[v70];
											v76[v78[407 - (255 + 150)]] = v59[v78[3 + 0]];
											v70 = v70 + 1 + (0 - 0);
											v78 = v66[v70];
											v76[v78[8 - 6]] = v76[v78[(2 + 7) - 6]];
											v70 = v70 + (1740 - (404 + 1335));
											v78 = v66[v70];
											v76[v78[408 - (183 + 223)]] = v78[3 - 0];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[1 + 1]] = #v76[v78[1365 - (1015 + 347)]];
											v70 = v70 + (338 - (10 + 327));
											v78 = v66[v70];
											v76[v78[2 + 0]] = v78[3];
											v70 = v70 + (339 - (118 + 220));
											v78 = v66[v70];
											v76[v78[2]] = #v76[v78[1 + (1881 - (409 + 1470))]];
											v70 = v70 + (450 - (108 + 341));
											v78 = v66[v70];
											v1080 = v78[1 + 1];
											v76[v1080] = v76[v1080](v13(v76, v1080 + (4 - 3), v78[1496 - (711 + 782)]));
											v70 = v70 + 1;
											v78 = v66[v70];
											if (v76[v78[3 - 1]] ~= v78[473 - ((1750 - (898 + 582)) + (227 - (18 + 10)))]) then
												v70 = v70 + 1 + 0;
											else
												v70 = v78[3];
											end
										end
									elseif (v79 <= (1827 - (580 + 90 + 1149))) then
										if ((1198 > 1160) and (v79 <= (17 - 11))) then
											local v149;
											v76[v78[2 + 0]] = v59[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v149 = v78[1 + 1];
											v76[v149] = v76[v149]();
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[4 - 2]] = v76[v78[2 + 1]] - v78[(3822 - 2651) - (645 + 522)];
											v70 = v70 + (1791 - (1010 + 780));
											v78 = v66[v70];
											do
												return v76[v78[2]];
											end
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											do
												return;
											end
										elseif ((1664 < 3750) and (v79 > (33 - 26))) then
											if (not v76[v78[5 - 3]] or (2835 == 3134)) then
												v70 = v70 + (1837 - (1045 + 791));
											else
												v70 = v78[7 - 4];
											end
										else
											v76[v78[2 - 0]] = v76[v78[3]][v78[509 - (351 + 154)]];
										end
									elseif ((v79 <= (1584 - (1281 + 291 + 2))) or (3259 == 4360)) then
										if (v79 > 9) then
											local v1097 = 266 - (28 + 238);
											local v1098;
											local v1099;
											local v1100;
											local v1101;
											local v1102;
											while true do
												if (v1097 == (10 - 5)) then
													v1098 = 1559 - (1381 + (710 - (406 + 126)));
													for v7423 = v1102, v71 do
														local v7424 = 0 + 0;
														while true do
															if (v7424 == (0 + 0)) then
																v1098 = v1098 + 1 + (0 - 0);
																v76[v7423] = v1099[v1098];
																break;
															end
														end
													end
													v70 = v70 + (3 - 2);
													v1097 = 4 + 2;
												end
												if (v1097 == 3) then
													for v7425 = v1102, v71 do
														local v7426 = 470 - (381 + 89);
														while true do
															if (v7426 == (0 + 0)) then
																v1101 = v72[v7425 - v1102];
																v76[v7425] = v1101;
																break;
															end
														end
													end
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v1097 = 4;
												end
												if (v1097 == (0 - 0)) then
													v1098 = nil;
													v1099, v1100 = nil;
													v1101 = nil;
													v1097 = 1157 - (1074 + (1674 - (851 + 741)));
												end
												if (v1097 == (1 - 0)) then
													v1102 = nil;
													v76[v78[604 - (462 + 140)]] = v78[1787 - (214 + 1570)];
													v70 = v70 + (1456 - (990 + 465));
													v1097 = (801 - (136 + 664)) + 1;
												end
												if (v1097 == 2) then
													v78 = v66[v70];
													v1102 = v78[2];
													v71 = (v1102 + v77) - (1 + 0);
													v1097 = 3 + 0;
												end
												if ((1115 <= 4125) and (v1097 == (23 - 17))) then
													v78 = v66[v70];
													v1102 = v78[1728 - ((2966 - (763 + 535)) + 58)];
													do
														return v13(v76, v1102, v71);
													end
													v1097 = 633 - (512 + 114);
												end
												if (v1097 == 4) then
													v1102 = v78[5 - 3];
													v1099, v1100 = v69(v76[v1102](v13(v76, v1102 + (1 - 0), v71)));
													v71 = (v1100 + v1102) - (3 - 2);
													v1097 = 5;
												end
												if (v1097 == (4 + (10 - 7))) then
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													do
														return;
													end
													break;
												end
											end
										else
											v76[v78[2 + 0]] = v76[v78[10 - 7]][v78[4]];
											v70 = v70 + (1995 - (109 + 1885));
											v78 = v66[v70];
											v76[v78[1471 - (1269 + (409 - 209))]][v76[v78[5 - 2]]] = v76[v78[819 - (98 + 717)]];
											v70 = v70 + ((430 + 397) - (802 + 24));
											v78 = v66[v70];
											v76[v78[2 - 0]] = v76[v78[5 - 2]] + v78[4];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[3]][v76[v78[4 + 0]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[1 + 2]][v78[4]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[(2 + 4) - 4]] = v76[v78[3]][v78[2 + 2]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2 + 0]][v76[v78[3 + (0 - 0)]]] = v76[v78[2 + 2]];
											v70 = v70 + (1434 - (797 + 636));
											v78 = v66[v70];
											v76[v78[9 - 7]] = v78[1622 - (1427 + 192)];
										end
									elseif (v79 == (4 + 7)) then
										v76[v78[4 - (594 - (487 + 105))]] = v76[v78[3 + (0 - 0)]][v78[2 + 2]];
										v70 = v70 + (327 - ((669 - 477) + 134));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v76[v78[1280 - (316 + 960)]]];
										v70 = v70 + (2 - 1) + 0 + 0;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[(1 + 6) - (11 - 6)]] = v76[v78[554 - (83 + 468)]] * v76[v78[1810 - (1202 + (1131 - 527))]];
										v70 = v70 + (4 - 3);
										v78 = v66[v70];
										v76[v78[2 - 0]][v76[v78[8 - 5]]] = v76[v78[329 - (45 + (795 - (171 + 344)))]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 + 0 + 0]] = v76[v78[2 + 1]] + v78[3 + 1];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[1 + (451 - (188 + 261))];
									else
										v76[v78[2]] = v76[v78[5 - 2]][v78[4]];
										v70 = v70 + (1912 - (340 + 1571));
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[3]][v76[v78[1776 - (458 + 1275 + 39)]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[(2526 - 1489) - (125 + (1130 - (24 + 197)))]][v78[1952 - (1096 + 852)]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[2 + 0 + 1]][v76[v78[4]]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2 + 0 + 0]][v76[v78[8 - 5]]] = v76[v78[4]];
										v70 = v70 + (513 - (409 + 103));
										v78 = v66[v70];
										v76[v78[238 - ((101 - 55) + 190)]] = v76[v78[98 - ((71 - 20) + 44)]] + v78[2 + 2];
										v70 = v70 + (1318 - (1114 + 203));
										v78 = v66[v70];
										v76[v78[728 - (228 + 498)]] = v76[v78[1 + 2]][v76[v78[(1125 - (768 + 354)) + 1]]];
										v70 = v70 + (664 - (174 + 489));
										v78 = v66[v70];
										v76[v78[(16 - 11) - (1 + 2)]] = v76[v78[3]][v78[1909 - (830 + 1075)]];
									end
								elseif (v79 <= (542 - (303 + 221))) then
									if (v79 <= (1284 - (231 + 1038))) then
										if (v79 <= 13) then
											local v156;
											v156 = v78[2 + 0 + 0];
											v76[v156] = v76[v156]();
											v70 = v70 + ((944 + 219) - (171 + 991));
											v78 = v66[v70];
											v76[v78[8 - 6]][v76[v78[(227 - (34 + 186)) - 4]]] = v76[v78[(15 - 6) - 5]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[(17 - 11) - 4]] = v59[v78[8 - 5]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[4 - 1]][v78[12 - 8]];
											v70 = v70 + (1249 - (111 + 1137));
											v78 = v66[v70];
											v76[v78[(74 + 86) - (91 + 67)]] = #v76[v78[8 - 5]];
										elseif (v79 == 14) then
											local v1146 = 0 + 0 + 0;
											while true do
												if (5 == v1146) then
													v70 = v70 + (524 - (423 + 100));
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[1 + 2]] + v78[(24 - 14) - 6];
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[774 - (326 + 445)]][v76[v78[17 - 13]]];
													v70 = v70 + (2 - 1);
													v78 = v66[v70];
													v1146 = 13 - 7;
												end
												if ((572 <= 1376) and (v1146 == (712 - (530 + 181)))) then
													v78 = v66[v70];
													v76[v78[883 - (614 + 249 + 18)]] = v76[v78[35 - (19 + (244 - (53 + 178)))]][v76[v78[6 - 2]]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[4 - (3 - 1)]][v76[v78[(33 - 25) - 5]]] = v76[v78[4]];
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v76[v78[3 - 1]] = v76[v78[6 - (14 - 11)]] + v78[1816 - (1293 + 519)];
													v1146 = 3 - 1;
												end
												if (((9 - 5) == v1146) or (1450 == 712)) then
													v78 = v66[v70];
													v76[v78[3 - 1]] = v76[v78[3]][v78[4]];
													v70 = v70 + ((4 - 0) - 3);
													v78 = v66[v70];
													v76[v78[4 - 2]] = v76[v78[2 + 1]][v76[v78[1 + 3]]];
													v70 = v70 + (2 - 1);
													v78 = v66[v70];
													v76[v78[1 + 1]][v76[v78[1 + 2]]] = v76[v78[3 + 1 + 0]];
													v1146 = 1101 - (709 + 387);
												end
												if ((v1146 == 3) or (545 > 824)) then
													v76[v78[1860 - (673 + (1644 - (343 + 116)))]] = v76[v78[8 - 5]][v78[12 - 8]];
													v70 = v70 + (1 - 0);
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3 + 0]][v78[4]];
													v70 = v70 + 1 + 0 + 0;
													v78 = v66[v70];
													v76[v78[(3 - 1) - 0]] = v76[v78[1 + 2]][v76[v78[4]]];
													v70 = v70 + (1 - (0 - 0));
													v1146 = 7 - 3;
												end
												if ((4443 >= 500) and (v1146 == (1882 - (446 + 1434)))) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[1286 - (1040 + 243)]] + v78[11 - 7];
													v70 = v70 + (1848 - (559 + 1288));
													v78 = v66[v70];
													v76[v78[(3921 - (1830 + 158)) - (609 + 1322)]] = v76[v78[457 - (13 + 441)]][v76[v78[4]]];
													v70 = v70 + (3 - 2);
													v78 = v66[v70];
													v1146 = 3;
												end
												if (v1146 == (15 - 9)) then
													v76[v78[9 - 7]] = v76[v78[1 + 2]][v78[14 - 10]];
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v76[v78[1 + 1]] = v59[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[5 - 3]] = v76[v78[3]][v78[3 + 1]];
													v70 = v70 + (1 - 0);
													v1146 = 5 + 2;
												end
												if (v1146 == 7) then
													v78 = v66[v70];
													v76[v78[2 + 0]] = v76[v78[3 + 0]][v76[v78[4 + 0]]];
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v76[v78[2]][v76[v78[3]]] = v76[v78[437 - (153 + 280)]];
													v70 = v70 + (2 - 1);
													v78 = v66[v70];
													v76[v78[2]] = v78[3 + 0];
													break;
												end
												if (v1146 == (0 + 0)) then
													v76[v78[2 + 0]] = v76[v78[3 + 0]][v78[4]];
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v76[v78[2 - 0]] = v59[v78[3]];
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v76[v78[669 - (89 + 578)]] = v76[v78[3 + 0]][v78[8 - 4]];
													v70 = v70 + (1050 - (572 + 477));
													v1146 = 1 + 0;
												end
											end
										else
											v76[v78[2 + 0]] = v76[v78[1 + 2]][v78[4]];
											v70 = v70 + (87 - (84 + 2));
											v78 = v66[v70];
											v76[v78[2 - 0]] = v76[v78[3 + 0]][v76[v78[4]]];
											v70 = v70 + (843 - (497 + 345));
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[1 + 2]][v78[1337 - (605 + 728)]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[3 - 1]] = v76[v78[1 + 2]][v76[v78[14 - 10]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3 + 0]][v78[10 - 6]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[491 - (457 + 32)]] = v76[v78[2 + 1]][v76[v78[4]]];
											v70 = v70 + (1403 - (832 + 570));
											v78 = v66[v70];
											v76[v78[2]][v76[v78[3 + 0]]] = v76[v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[6 - 4]] = v76[v78[3]] + v78[4];
										end
									elseif (v79 <= (8 + 8)) then
										local v167;
										v167 = v78[798 - (588 + 208)];
										v76[v167] = v76[v167](v13(v76, v167 + 1, v78[8 - 5]));
										v70 = v70 + (1801 - (884 + 916));
										v78 = v66[v70];
										v76[v78[2]][v78[6 - 3]] = v76[v78[3 + 1]];
										v70 = v70 + (654 - (232 + 421));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[1892 - (1569 + 320)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v78[9 - 6];
										v70 = v70 + (606 - (316 + 289));
										v78 = v66[v70];
										v76[v78[5 - 3]] = v78[3];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v167 = v78[1455 - (666 + 787)];
										v76[v167] = v76[v167](v13(v76, v167 + (426 - (360 + 65)), v78[3]));
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]][v78[257 - (79 + 175)]] = v76[v78[5 - 1]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[5 - 2]];
										v70 = v70 + (900 - (503 + 396));
										v78 = v66[v70];
										v76[v78[183 - (92 + 89)]] = v78[5 - 2];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v78[2 + 1];
									elseif (v79 > (66 - 49)) then
										local v1163 = 0;
										while true do
											if (v1163 == (1 + 0)) then
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v76[v78[2 + 0]] = v76[v78[2 + 1]][v78[12 - 8]];
												v70 = v70 + 1 + 0;
												v1163 = 2 - 0;
											end
											if (v1163 == (1247 - (485 + 759))) then
												v76[v78[4 - 2]][v76[v78[3]]] = v76[v78[4]];
												v70 = v70 + (1190 - (442 + 747));
												v78 = v66[v70];
												v76[v78[1137 - (832 + 303)]] = v76[v78[949 - (88 + 858)]] + v78[2 + 2];
												v1163 = 4;
											end
											if (0 == v1163) then
												v76[v78[2 + 0]] = v76[v78[1 + 2]][v76[v78[793 - (766 + 23)]]];
												v70 = v70 + (4 - 3);
												v78 = v66[v70];
												v76[v78[2 - 0]] = v76[v78[7 - 4]][v78[13 - 9]];
												v1163 = 1;
											end
											if ((1413 >= 457) and (v1163 == (1077 - (1036 + 37)))) then
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[3 - 1]] = v76[v78[3 + 0]] + v78[4];
												v70 = v70 + (1481 - (641 + 839));
												v1163 = 918 - (910 + 3);
											end
											if (v1163 == (12 - 7)) then
												v78 = v66[v70];
												v76[v78[1686 - (1466 + 218)]] = v78[2 + 1];
												v70 = v70 + (1149 - (556 + 592));
												v78 = v66[v70];
												v1163 = 3 + 3;
											end
											if (v1163 == (810 - (329 + 479))) then
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[857 - (174 + 680)]][v76[v78[4]]];
												v70 = v70 + (3 - 2);
												v78 = v66[v70];
												v1163 = 5 - 2;
											end
											if ((v1163 == (5 + 1)) or (2854 > 4483)) then
												v70 = v78[742 - (396 + 343)];
												break;
											end
										end
									else
										v76[v78[1 + 1]] = v76[v78[3]][v78[1481 - (29 + 1448)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1391 - (135 + 1254)]] = v59[v78[11 - 8]];
										v70 = v70 + (4 - 3);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[2 + 1]][v78[4]];
										v70 = v70 + (1528 - (389 + 1138));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v76[v78[578 - (102 + 472)]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 + 0]][v76[v78[3]]] = v76[v78[4 + 0]];
										v70 = v70 + (1546 - (320 + 1225));
										v78 = v66[v70];
										v76[v78[2 - 0]] = v78[3];
									end
								elseif (v79 <= (13 + 8)) then
									if ((3245 >= 860) and (v79 <= (1483 - (157 + 1307)))) then
										v76[v78[1861 - (821 + 1038)]] = v76[v78[3]][v78[9 - 5]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[3 - 1]] = v76[v78[3]][v76[v78[2 + 2]]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[2]][v76[v78[1029 - (834 + 192)]]] = v76[v78[1 + 3]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[4 - 1]] + v78[4];
										v70 = v70 + (305 - (300 + 4));
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[3]] + v78[10 - 6];
										v70 = v70 + (363 - (112 + 250));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[2 + 1]][v76[v78[9 - 5]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v78[2 + 1];
									elseif ((v79 == (15 + 5)) or (3115 == 556)) then
										v76[v78[1 + 1]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[1417 - (1001 + 413)]][v78[8 - 4]];
										v70 = v70 + (883 - (244 + 638));
										v78 = v66[v70];
										v76[v78[695 - (627 + 66)]][v76[v78[8 - 5]]] = v76[v78[606 - (512 + 90)]];
										v70 = v70 + (1907 - (1665 + 241));
										v78 = v66[v70];
										v76[v78[719 - (373 + 344)]] = v76[v78[3]] + v78[2 + 2];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v78[4 - 1];
									else
										local v1186 = 0;
										local v1187;
										local v1188;
										local v1189;
										local v1190;
										while true do
											if ((1744 < 2157) and (v1186 == 6)) then
												v70 = v70 + (1100 - (35 + 1064));
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[3 + 1]];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v76[v78[1 + 1]] = v76[v78[3]][v76[v78[1240 - (298 + 938)]]];
												v1186 = 1266 - (233 + 1026);
											end
											if ((1668 - (636 + 1030)) == v1186) then
												v76[v78[2]] = v76[v78[3]][v78[3 + 1]];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v1190 = v78[1 + 1];
												v1188, v1189 = v69(v76[v1190](v13(v76, v1190 + 1 + 0, v78[224 - (55 + 166)])));
												v71 = (v1189 + v1190) - (1 + 0);
												v1186 = 1 + 2;
											end
											if (v1186 == (34 - 25)) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[299 - (36 + 261)]] = v78[3];
												v70 = v70 + (1 - 0);
												v78 = v66[v70];
												v70 = v78[1371 - (34 + 1334)];
												break;
											end
											if ((1588 == 1588) and (v1186 == (4 + 4))) then
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[1285 - (1035 + 248)]] = v76[v78[24 - (20 + 1)]][v76[v78[3 + 1]]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[321 - (134 + 185)]][v76[v78[1136 - (549 + 584)]]] = v76[v78[689 - (314 + 371)]];
												v1186 = 30 - 21;
											end
											if ((4950 == 4950) and (v1186 == (975 - (478 + 490)))) then
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[1174 - (786 + 386)]] = v76[v78[9 - 6]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[1381 - (1055 + 324)]] = v76[v78[1343 - (1093 + 247)]][v78[4 + 0]];
												v1186 = 1 + 7;
											end
											if (v1186 == (11 - 8)) then
												v1187 = 0;
												for v7427 = v1190, v71 do
													v1187 = v1187 + (3 - 2);
													v76[v7427] = v1188[v1187];
												end
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v1190 = v78[2];
												v76[v1190] = v76[v1190](v13(v76, v1190 + (2 - 1), v71));
												v1186 = 2 + 2;
											end
											if (v1186 == (15 - 11)) then
												v70 = v70 + (3 - 2);
												v78 = v66[v70];
												v76[v78[2 + 0]][v76[v78[3]]] = v76[v78[9 - 5]];
												v70 = v70 + (689 - (364 + 324));
												v78 = v66[v70];
												v76[v78[5 - 3]] = v76[v78[6 - 3]] + v78[2 + 2];
												v1186 = 5;
											end
											if (v1186 == 5) then
												v70 = v70 + (4 - 3);
												v78 = v66[v70];
												v76[v78[2 - 0]] = v76[v78[8 - 5]] + v78[1272 - (1249 + 19)];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[7 - 5]] = v76[v78[1089 - (686 + 400)]][v76[v78[4 + 0]]];
												v1186 = 235 - (73 + 156);
											end
											if (v1186 == (1 + 0)) then
												v76[v78[813 - (721 + 90)]] = v76[v78[1 + 2]];
												v70 = v70 + (3 - 2);
												v78 = v66[v70];
												v76[v78[472 - (224 + 246)]] = v76[v78[4 - 1]] + v78[4];
												v70 = v70 + (1 - 0);
												v78 = v66[v70];
												v1186 = 2;
											end
											if (v1186 == 0) then
												v1187 = nil;
												v1188, v1189 = nil;
												v1190 = nil;
												v76[v78[1 + 1]] = v59[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1186 = 1 + 0;
											end
										end
									end
								elseif ((v79 <= (17 + 6)) or (1650 < 142)) then
									if (v79 == 22) then
										local v1191 = 0 - 0;
										local v1192;
										local v1193;
										while true do
											if (v1191 == (0 - 0)) then
												v1192 = v78[515 - (203 + 310)];
												v1193 = v76[v1192];
												v1191 = 1994 - (1238 + 755);
											end
											if ((v1191 == (1 + 0)) or (95 > 2237)) then
												for v7430 = v1192 + 1, v78[1537 - (709 + 825)] do
													v7(v1193, v76[v7430]);
												end
												break;
											end
										end
									else
										v76[v78[2]] = v76[v78[4 - 1]][v78[5 - 1]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[866 - (196 + 668)]] = v76[v78[11 - 8]][v76[v78[7 - 3]]];
										v70 = v70 + (834 - (171 + 662));
										v78 = v66[v70];
										v76[v78[95 - (4 + 89)]] = v76[v78[10 - 7]][v78[2 + 2]];
										v70 = v70 + (4 - 3);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[2 + 1]][v76[v78[1490 - (35 + 1451)]]];
										v70 = v70 + (1454 - (28 + 1425));
										v78 = v66[v70];
										v76[v78[1995 - (941 + 1052)]][v76[v78[3 + 0]]] = v76[v78[4]];
										v70 = v70 + (1515 - (822 + 692));
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[2 + 1]] + v78[301 - (45 + 252)];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[2 + 1]][v76[v78[4]]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + (434 - (114 + 319));
										v78 = v66[v70];
										v76[v78[2 - 0]] = v59[v78[3 - 0]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[4 - 1]][v78[8 - 4]];
									end
								elseif (v79 == 24) then
									v76[v78[1965 - (556 + 1407)]] = v76[v78[3]][v78[1210 - (741 + 465)]];
									v70 = v70 + (466 - (170 + 295));
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3 + 0]][v76[v78[9 - 5]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = #v76[v78[3]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1232 - (957 + 273)]][v76[v78[1 + 2]]] = v76[v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v70 = v78[11 - 8];
								else
									v76[v78[2]] = v76[v78[7 - 4]][v76[v78[11 - 7]]];
									v70 = v70 + (4 - 3);
									v78 = v66[v70];
									v76[v78[1782 - (389 + 1391)]] = v76[v78[2 + 1]][v78[1 + 3]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[953 - (783 + 168)]] = v76[v78[3]][v78[13 - 9]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[313 - (309 + 2)]] = v76[v78[3]][v76[v78[12 - 8]]];
									v70 = v70 + (1213 - (1090 + 122));
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[9 - 6]][v78[3 + 1]];
									v70 = v70 + (1119 - (628 + 490));
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[7 - 4]][v76[v78[18 - 14]]];
									v70 = v70 + (775 - (431 + 343));
									v78 = v66[v70];
									v76[v78[3 - 1]][v76[v78[8 - 5]]] = v76[v78[4 + 0]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1 + 2]] + v78[1699 - (556 + 1139)];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[17 - (6 + 9)]] = v76[v78[1 + 2]] + v78[3 + 1];
									v70 = v70 + (170 - (28 + 141));
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[3 - 0]] + v78[4];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1319 - (486 + 831)]] = v78[7 - 4];
								end
							elseif (v79 <= (133 - 95)) then
								if ((v79 <= (6 + 25)) or (2564 < 2355)) then
									if (v79 <= (88 - 60)) then
										if (v79 <= (1289 - (668 + 595))) then
											v76[v78[2 + 0]] = v78[3] ^ v76[v78[1 + 3]];
										elseif (v79 == (73 - 46)) then
											v76[v78[292 - (23 + 267)]] = v76[v78[1947 - (1129 + 815)]][v78[391 - (371 + 16)]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[1752 - (1326 + 424)]] = v76[v78[5 - 2]][v76[v78[14 - 10]]];
											v70 = v70 + (119 - (88 + 30));
											v78 = v66[v70];
											v76[v78[773 - (720 + 51)]][v76[v78[6 - 3]]] = v76[v78[1780 - (421 + 1355)]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[3]] + v78[1087 - (286 + 797)];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
										else
											v76[v78[2]] = v76[v78[10 - 7]][v78[4]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[441 - (397 + 42)]] = v76[v78[1 + 2]][v76[v78[804 - (24 + 776)]]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[788 - (222 + 563)]][v78[8 - 4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[192 - (23 + 167)]] = v76[v78[1801 - (690 + 1108)]][v76[v78[2 + 2]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[851 - (40 + 808)]][v76[v78[1 + 3]]];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[2]][v76[v78[3 + 0]]] = v76[v78[3 + 1]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[574 - (47 + 524)]] + v78[3 + 1];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[5 - 3]] = v76[v78[4 - 1]][v76[v78[8 - 4]]];
											v70 = v70 + (1727 - (1165 + 561));
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[9 - 6]][v78[2 + 2]];
											v70 = v70 + (480 - (341 + 138));
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[5 - 2]][v78[330 - (89 + 237)]];
										end
									elseif (v79 <= 29) then
										local v198 = 0 - 0;
										local v199;
										local v200;
										local v201;
										while true do
											if (v198 == (0 - 0)) then
												v199 = v67[v78[884 - (581 + 300)]];
												v200 = nil;
												v198 = 1221 - (855 + 365);
											end
											if ((4547 >= 1578) and (v198 == (2 - 1))) then
												v201 = {};
												v200 = v10({}, {__index=function(v4994, v4995)
													local v4996 = v201[v4995];
													return v4996[1 + 0][v4996[1237 - (1030 + 205)]];
												end,__newindex=function(v4997, v4998, v4999)
													local v5000 = v201[v4998];
													v5000[1 + 0][v5000[2 + 0]] = v4999;
												end});
												v198 = 288 - (156 + 130);
											end
											if (((4 - 2) == v198) or (2999 == 2870)) then
												for v5002 = 1 - 0, v78[7 - 3] do
													v70 = v70 + 1 + 0;
													local v5003 = v66[v70];
													if ((1195 < 2413) and (v5003[1 + 0] == (229 - (10 + 59)))) then
														v201[v5002 - (1 + 0)] = {v76,v5003[1166 - (671 + 492)]};
													else
														v201[v5002 - (1 + 0)] = {v59,v5003[3 + 0]};
													end
													v75[#v75 + (1946 - (1036 + 909))] = v201;
												end
												v76[v78[2 + 0]] = v29(v199, v200, v60);
												break;
											end
										end
									elseif (v79 > (50 - 20)) then
										local v1262;
										v76[v78[205 - (11 + 192)]] = v76[v78[2 + 1]];
										v70 = v70 + (176 - (135 + 40));
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[2 + 1]] - v78[8 - 4];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v1262 = v78[178 - (50 + 126)];
										v76[v1262] = v76[v1262](v13(v76, v1262 + (2 - 1), v78[3]));
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1415 - (1233 + 180)]] = v76[v78[972 - (522 + 447)]] / v78[1425 - (107 + 1314)];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[8 - 5]] + v76[v78[2 + 2]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[11 - 8]] * v76[v78[1914 - (716 + 1194)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										do
											return v76[v78[1 + 1]];
										end
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[506 - (74 + 429)];
									else
										local v1273 = 0 - 0;
										while true do
											if (v1273 == (1 + 1)) then
												v76[v78[4 - 2]][v76[v78[3 + 0]]] = v76[v78[12 - 8]];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v1273 = 3;
											end
											if (v1273 == 3) then
												v76[v78[435 - (279 + 154)]] = v78[781 - (454 + 324)];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v1273 = 4;
											end
											if (v1273 == (17 - (12 + 5))) then
												v76[v78[2 + 0]] = v76[v78[3]][v76[v78[10 - 6]]];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v1273 = 1094 - (277 + 816);
											end
											if (v1273 == (17 - 13)) then
												v70 = v78[1186 - (1058 + 125)];
												break;
											end
											if (v1273 == (1 + 0)) then
												v76[v78[2]] = v76[v78[978 - (815 + 160)]] + v78[17 - 13];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v1273 = 1 + 1;
											end
										end
									end
								elseif (v79 <= (99 - 65)) then
									if (v79 <= 32) then
										v76[v78[1900 - (41 + 1857)]] = v76[v78[1896 - (1222 + 671)]][v78[4]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[1185 - (229 + 953)]][v78[1778 - (1111 + 663)]];
										v70 = v70 + (1580 - (874 + 705));
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[3 + 0]][v76[v78[7 - 3]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1 + 1]][v76[v78[682 - (642 + 37)]]] = v76[v78[1 + 3]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[7 - 4]] + v78[458 - (233 + 221)];
									elseif ((v79 > (76 - 43)) or (4824 <= 3852)) then
										v76[v78[2 + 0]] = v76[v78[1544 - (718 + 823)]] * v78[4];
									else
										local v1275;
										local v1276, v1277;
										local v1278;
										v76[v78[2 + 0]] = v59[v78[808 - (266 + 539)]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[1227 - (636 + 589)]] = v76[v78[6 - 3]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[2 + 1]] + v78[4];
										v70 = v70 + (1016 - (657 + 358));
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[3]] + v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[3]][v78[1191 - (1151 + 36)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1278 = v78[2 + 0];
										v1276, v1277 = v69(v76[v1278](v13(v76, v1278 + 1 + 0, v78[8 - 5])));
										v71 = (v1277 + v1278) - 1;
										v1275 = 1832 - (1552 + 280);
										for v4226 = v1278, v71 do
											v1275 = v1275 + (835 - (64 + 770));
											v76[v4226] = v1276[v1275];
										end
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v1278 = v78[4 - 2];
										v76[v1278] = v76[v1278](v13(v76, v1278 + 1 + 0, v71));
										v70 = v70 + (1244 - (157 + 1086));
										v78 = v66[v70];
										v76[v78[3 - 1]][v76[v78[13 - 10]]] = v76[v78[4]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3 - 0]] + v78[823 - (599 + 220)];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[1933 - (1813 + 118)]] = v76[v78[3 + 0]] + v78[1221 - (841 + 376)];
									end
								elseif ((v79 <= (49 - 13)) or (4123 == 4532)) then
									if (v79 > 35) then
										v76[v78[2]] = v76[v78[1 + 2]][v76[v78[4]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[862 - (464 + 395)]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[2 + 1]][v78[841 - (467 + 370)]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2 + 0]][v76[v78[10 - 7]]] = v76[v78[1 + 3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[6 - 3];
									else
										local v1302 = 0;
										while true do
											if (v1302 == 8) then
												v76[v78[522 - (150 + 370)]] = v78[1285 - (74 + 1208)];
												break;
											end
											if ((v1302 == (2 - 1)) or (3021 < 2137)) then
												v76[v78[9 - 7]] = v76[v78[3 + 0]][v76[v78[394 - (14 + 376)]]];
												v70 = v70 + (1 - 0);
												v78 = v66[v70];
												v1302 = 2 + 0;
											end
											if (v1302 == 7) then
												v76[v78[2 + 0]] = v76[v78[3 + 0]] + v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1302 = 23 - 15;
											end
											if ((2869 < 4180) and (v1302 == (5 + 1))) then
												v76[v78[80 - (23 + 55)]][v76[v78[6 - 3]]] = v76[v78[3 + 1]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1302 = 7 + 0;
											end
											if (v1302 == (2 - 0)) then
												v76[v78[1 + 1]] = v76[v78[904 - (652 + 249)]] + v78[10 - 6];
												v70 = v70 + (1869 - (708 + 1160));
												v78 = v66[v70];
												v1302 = 8 - 5;
											end
											if ((4735 >= 3266) and ((9 - 4) == v1302)) then
												v76[v78[29 - (10 + 17)]] = v76[v78[3]][v76[v78[4]]];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v1302 = 6;
											end
											if ((v1302 == (1732 - (1400 + 332))) or (4097 <= 1186)) then
												v76[v78[3 - 1]] = v76[v78[1911 - (242 + 1666)]][v78[4]];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v1302 = 1 + 0;
											end
											if (v1302 == 4) then
												v76[v78[2 + 0]] = v76[v78[3]][v78[944 - (850 + 90)]];
												v70 = v70 + (1 - 0);
												v78 = v66[v70];
												v1302 = 1395 - (360 + 1030);
											end
											if (v1302 == (3 + 0)) then
												v76[v78[2]][v76[v78[7 - 4]]] = v76[v78[5 - 1]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1302 = 1665 - (909 + 752);
											end
										end
									end
								elseif (v79 > (1260 - (109 + 1114))) then
									v76[v78[2]] = v76[v78[5 - 2]][v78[2 + 2]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[244 - (6 + 236)]] = v76[v78[2 + 1]][v76[v78[4 + 0]]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[3 - 1]] = v76[v78[1136 - (1076 + 57)]][v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[691 - (579 + 110)]] = v76[v78[1 + 2]][v76[v78[4]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]][v76[v78[410 - (174 + 233)]]] = v76[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[5 - 3]] = v76[v78[3]] + v78[6 - 2];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1176 - (663 + 511)]] = v78[3 + 0];
								else
									local v1317 = 0;
									local v1318;
									while true do
										if ((v1317 == (0 + 0)) or (2729 >= 4096)) then
											v1318 = v78[2];
											do
												return v13(v76, v1318, v71);
											end
											break;
										end
									end
								end
							elseif (v79 <= (138 - 93)) then
								if (v79 <= (25 + 16)) then
									if (v79 <= (91 - 52)) then
										v76[v78[4 - 2]] = v76[v78[3]][v76[v78[2 + 2]]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[1 + 2]][v78[726 - (478 + 244)]];
										v70 = v70 + (518 - (440 + 77));
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[10 - 7]][v78[1560 - (655 + 901)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[3]][v76[v78[3 + 1]]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + (1446 - (695 + 750));
										v78 = v66[v70];
										v76[v78[6 - 4]] = v76[v78[3]][v76[v78[4]]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[7 - 5]][v76[v78[354 - (285 + 66)]]] = v76[v78[8 - 4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1312 - (682 + 628)]] = v76[v78[1 + 2]] + v78[303 - (176 + 123)];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3 + 0]][v76[v78[273 - (239 + 30)]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[4 - 1]][v78[12 - 8]];
										v70 = v70 + (316 - (306 + 9));
										v78 = v66[v70];
										v76[v78[6 - 4]] = v76[v78[1 + 2]][v78[3 + 1]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[3]][v76[v78[4]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[8 - 5]][v78[1379 - (1140 + 235)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[1 + 2]][v76[v78[56 - (33 + 19)]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[8 - 5]][v76[v78[2 + 2]]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2 + 0]][v76[v78[692 - (586 + 103)]]] = v76[v78[1 + 3]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[1490 - (1309 + 179)]] = v78[5 - 2];
									elseif (v79 == (18 + 22)) then
										local v1319 = 0;
										local v1320;
										while true do
											if ((v1319 == (5 - 3)) or (4405 <= 1243)) then
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[3 - 1]] = v59[v78[5 - 2]];
												v70 = v70 + (610 - (295 + 314));
												v1319 = 6 - 3;
											end
											if (v1319 == 3) then
												v78 = v66[v70];
												v76[v78[1964 - (1300 + 662)]] = v76[v78[9 - 6]];
												v70 = v70 + (1756 - (1178 + 577));
												v78 = v66[v70];
												v1319 = 3 + 1;
											end
											if (v1319 == (0 - 0)) then
												v1320 = nil;
												v76[v78[1407 - (851 + 554)]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1319 = 1 + 0;
											end
											if ((2 - 1) == v1319) then
												for v7433 = v78[3 - 1], v78[305 - (115 + 187)] do
													v76[v7433] = nil;
												end
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[2 + 0]] = v59[v78[11 - 8]];
												v1319 = 2;
											end
											if (v1319 == (1165 - (160 + 1001))) then
												v76[v78[2 + 0]] = v78[3 + 0];
												v70 = v70 + (1 - 0);
												v78 = v66[v70];
												v1320 = v78[360 - (237 + 121)];
												v1319 = 5;
											end
											if (v1319 == 6) then
												v70 = v70 + (898 - (525 + 372));
												v78 = v66[v70];
												v76[v78[3 - 1]] = v76[v78[3]][v78[12 - 8]];
												break;
											end
											if (v1319 == (147 - (96 + 46))) then
												v76[v1320] = v76[v1320](v13(v76, v1320 + (778 - (643 + 134)), v78[2 + 1]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[4 - 2]] = v59[v78[11 - 8]];
												v1319 = 6 + 0;
											end
										end
									else
										local v1321 = 0;
										while true do
											if (v1321 == (1 - 0)) then
												v76[v78[3 - 1]] = v76[v78[722 - (316 + 403)]][v78[3 + 1]];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v1321 = 1 + 1;
											end
											if ((734 <= 2172) and (v1321 == (0 - 0))) then
												v76[v78[2 + 0]] = v76[v78[1 + 2]][v76[v78[13 - 9]]];
												v70 = v70 + (4 - 3);
												v78 = v66[v70];
												v1321 = 1 - 0;
											end
											if (v1321 == (1 + 3)) then
												v76[v78[2]] = v76[v78[3]] + v78[7 - 3];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v1321 = 14 - 9;
											end
											if ((v1321 == (19 - (12 + 5))) or (4495 < 153)) then
												v76[v78[7 - 5]] = v76[v78[3]][v78[8 - 4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1321 = 3;
											end
											if (v1321 == (10 - 5)) then
												v76[v78[4 - 2]] = v78[1 + 2];
												break;
											end
											if ((1976 - (1656 + 317)) == v1321) then
												v76[v78[2 + 0]][v76[v78[3 + 0]]] = v76[v78[10 - 6]];
												v70 = v70 + (4 - 3);
												v78 = v66[v70];
												v1321 = 358 - (5 + 349);
											end
										end
									end
								elseif ((2667 < 3781) and (v79 <= 43)) then
									if (v79 == (199 - 157)) then
										local v1322;
										local v1323, v1324;
										local v1325;
										v76[v78[2]] = v76[v78[1274 - (266 + 1005)]][v78[3 + 1]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[1699 - (561 + 1135)]][v76[v78[5 - 1]]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[2]] = v59[v78[1069 - (507 + 559)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[9 - 6]];
										v70 = v70 + (389 - (212 + 176));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[908 - (250 + 655)]] + v78[10 - 6];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[4 - 1]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1325 = v78[1958 - (1869 + 87)];
										v1323, v1324 = v69(v76[v1325](v13(v76, v1325 + (3 - 2), v78[1904 - (484 + 1417)])));
										v71 = (v1324 + v1325) - (2 - 1);
										v1322 = 0 - 0;
										for v4229 = v1325, v71 do
											local v4230 = 773 - (48 + 725);
											while true do
												if ((v4230 == (0 - 0)) or (351 > 3503)) then
													v1322 = v1322 + (2 - 1);
													v76[v4229] = v1323[v1322];
													break;
												end
											end
										end
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v1325 = v78[4 - 2];
										v76[v1325] = v76[v1325](v13(v76, v1325 + 1 + 0, v71));
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[855 - (152 + 701)]][v76[v78[1314 - (430 + 881)]]] = v76[v78[2 + 2]];
										v70 = v70 + (896 - (557 + 338));
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[8 - 5]] + v78[13 - 9];
									elseif ((4334 > 1062) and (v76[v78[2]] == v78[10 - 6])) then
										v70 = v70 + (2 - 1);
									else
										v70 = v78[804 - (499 + 302)];
									end
								elseif ((v79 > (910 - (39 + 827))) or (4352 <= 3559)) then
									local v1341 = 0 - 0;
									local v1342;
									local v1343;
									local v1344;
									local v1345;
									local v1346;
									while true do
										if (v1341 == (11 - 6)) then
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v1346 = v78[2 - 0];
											v1344, v1345 = v69(v76[v1346](v13(v76, v1346 + 1, v71)));
											v71 = (v1345 + v1346) - (1 + 0);
											v1343 = 0 - 0;
											v1341 = 1 + 5;
										end
										if (v1341 == (9 - 3)) then
											for v7437 = v1346, v71 do
												v1343 = v1343 + 1;
												v76[v7437] = v1344[v1343];
											end
											v70 = v70 + (105 - (103 + 1));
											v78 = v66[v70];
											v1346 = v78[556 - (475 + 79)];
											v1342 = v76[v1346];
											for v7440 = v1346 + (2 - 1), v71 do
												v7(v1342, v76[v7440]);
											end
											break;
										end
										if (v1341 == (9 - 6)) then
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[3 + 0]] + v78[4];
											v70 = v70 + (1504 - (1395 + 108));
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[8 - 5]];
											v70 = v70 + (1205 - (7 + 1197));
											v1341 = 2 + 2;
										end
										if ((v1341 == (0 + 0)) or (3685 <= 2244)) then
											v1342 = nil;
											v1343 = nil;
											v1344, v1345 = nil;
											v1346 = nil;
											v76[v78[321 - (27 + 292)]] = {};
											v70 = v70 + 1;
											v1341 = 2 - 1;
										end
										if ((v1341 == 2) or (3590 < 716)) then
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3 - 0]];
											v70 = v70 + (4 - 3);
											v78 = v66[v70];
											v76[v78[3 - 1]] = v76[v78[5 - 2]] + v78[143 - (43 + 96)];
											v70 = v70 + (4 - 3);
											v1341 = 6 - 3;
										end
										if ((3740 >= 7) and (4 == v1341)) then
											v78 = v66[v70];
											v1346 = v78[2 + 0];
											v1344, v1345 = v69(v76[v1346](v13(v76, v1346 + 1 + 0, v78[5 - 2])));
											v71 = (v1345 + v1346) - (1 + 0);
											v1343 = 0 - 0;
											for v7441 = v1346, v71 do
												local v7442 = 0 + 0;
												while true do
													if ((v7442 == (0 + 0)) or (393 == 1933)) then
														v1343 = v1343 + (1752 - (1414 + 337));
														v76[v7441] = v1344[v1343];
														break;
													end
												end
											end
											v1341 = 5;
										end
										if (v1341 == 1) then
											v78 = v66[v70];
											v76[v78[1942 - (1642 + 298)]] = v76[v78[7 - 4]][v76[v78[11 - 7]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v59[v78[3]];
											v70 = v70 + 1;
											v1341 = 5 - 3;
										end
									end
								else
									v76[v78[1 + 1]] = v76[v78[3]] + v78[4 + 0];
									v70 = v70 + (973 - (357 + 615));
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3]] + v78[9 - 5];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[6 - 3]][v76[v78[4 + 0]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v70 = v78[1304 - (384 + 917)];
								end
							elseif (v79 <= 48) then
								if (v79 <= 46) then
									local v237;
									local v238;
									local v239;
									v76[v78[699 - (128 + 569)]] = v76[v78[1546 - (1407 + 136)]] + v76[v78[1891 - (687 + 1200)]];
									v70 = v70 + (1711 - (556 + 1154));
									v78 = v66[v70];
									v76[v78[6 - 4]] = v76[v78[98 - (9 + 86)]] - v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[423 - (275 + 146)]] = v78[1 + 2];
									v70 = v70 + (65 - (29 + 35));
									v78 = v66[v70];
									v76[v78[8 - 6]] = v76[v78[8 - 5]];
									v70 = v70 + (4 - 3);
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[1015 - (53 + 959)]];
									v70 = v70 + (409 - (312 + 96));
									v78 = v66[v70];
									v76[v78[2]] = v78[4 - 1];
									v70 = v70 + (286 - (147 + 138));
									v78 = v66[v70];
									v239 = v78[2];
									v238 = v76[v239];
									v237 = v76[v239 + (901 - (813 + 86))];
									if (v237 > (0 + 0)) then
										if (v238 > v76[v239 + 1]) then
											v70 = v78[4 - 1];
										else
											v76[v239 + (495 - (18 + 474))] = v238;
										end
									elseif (v238 < v76[v239 + 1 + 0]) then
										v70 = v78[3];
									else
										v76[v239 + (9 - 6)] = v238;
									end
								elseif (v79 == (1133 - (860 + 226))) then
									if (v78[305 - (121 + 182)] ~= v76[v78[4]]) then
										v70 = v70 + 1 + 0;
									else
										v70 = v78[1243 - (988 + 252)];
									end
								else
									local v1354 = 0;
									local v1355;
									local v1356;
									local v1357;
									local v1358;
									while true do
										if (v1354 == (1 + 2)) then
											v76[v78[2]] = v76[v78[1 + 2]];
											v70 = v70 + (1971 - (49 + 1921));
											v78 = v66[v70];
											v76[v78[892 - (223 + 667)]] = v76[v78[55 - (51 + 1)]] + v78[6 - 2];
											v1354 = 8 - 4;
										end
										if ((3509 == 3509) and (9 == v1354)) then
											v70 = v70 + (1126 - (146 + 979));
											v78 = v66[v70];
											v70 = v78[1 + 2];
											break;
										end
										if ((610 - (311 + 294)) == v1354) then
											v78 = v66[v70];
											v1358 = v78[2];
											v1356, v1357 = v69(v76[v1358](v13(v76, v1358 + (2 - 1), v78[2 + 1])));
											v71 = (v1357 + v1358) - (1444 - (496 + 947));
											v1354 = 1364 - (1233 + 125);
										end
										if ((1012 < 4059) and (v1354 == (2 + 2))) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[1648 - (963 + 682)]][v78[4]];
											v70 = v70 + 1 + 0;
											v1354 = 5;
										end
										if ((2189 == 2189) and ((1512 - (504 + 1000)) == v1354)) then
											v76[v78[2]][v76[v78[3 + 0]]] = v76[v78[4 + 0]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2 - 0]] = v78[3 + 0];
											v1354 = 9;
										end
										if (v1354 == 2) then
											v78 = v66[v70];
											v76[v78[2 + 0]] = v59[v78[185 - (156 + 26)]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1354 = 2 + 1;
										end
										if (v1354 == (0 - 0)) then
											v1355 = nil;
											v1356, v1357 = nil;
											v1358 = nil;
											v76[v78[166 - (149 + 15)]] = v76[v78[3]][v78[4]];
											v1354 = 961 - (890 + 70);
										end
										if (v1354 == 7) then
											v1358 = v78[119 - (39 + 78)];
											v76[v1358] = v76[v1358](v13(v76, v1358 + 1, v71));
											v70 = v70 + (483 - (14 + 468));
											v78 = v66[v70];
											v1354 = 17 - 9;
										end
										if ((16 - 10) == v1354) then
											v1355 = 0 + 0;
											for v7443 = v1358, v71 do
												local v7444 = 0 + 0;
												while true do
													if (v7444 == 0) then
														v1355 = v1355 + 1;
														v76[v7443] = v1356[v1355];
														break;
													end
												end
											end
											v70 = v70 + 1;
											v78 = v66[v70];
											v1354 = 7;
										end
										if (v1354 == (1 + 0)) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[1 + 2]][v76[v78[7 - 3]]];
											v70 = v70 + 1 + 0;
											v1354 = 2;
										end
									end
								end
							elseif (v79 <= (175 - 125)) then
								if (v79 == (2 + 47)) then
									v76[v78[53 - (12 + 39)]][v78[3 + 0]] = v76[v78[12 - 8]];
								else
									v76[v78[6 - 4]] = v76[v78[1 + 2]][v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]][v76[v78[7 - 4]]] = v76[v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[9 - 7]] = v76[v78[3]] + v78[1714 - (1596 + 114)];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[715 - (164 + 549)]] = v76[v78[1441 - (1059 + 379)]][v76[v78[4 - 0]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[394 - (145 + 247)]] = v78[3 + 0];
								end
							elseif (v79 == 51) then
								if ((2335 >= 1123) and (v78[1 + 1] < v76[v78[4]])) then
									v70 = v78[3];
								else
									v70 = v70 + (2 - 1);
								end
							elseif (v76[v78[1 + 1]] or (2326 <= 1483)) then
								v70 = v70 + 1;
							else
								v70 = v78[3];
							end
						elseif ((3438 < 3553) and (v79 <= (69 + 10))) then
							if (v79 <= 65) then
								if (v79 <= (93 - 35)) then
									if (v79 <= (775 - (254 + 466))) then
										if (v79 <= (613 - (544 + 16))) then
											local v254;
											local v255, v256;
											local v257;
											v76[v78[5 - 3]] = v76[v78[631 - (294 + 334)]][v76[v78[257 - (236 + 17)]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2 + 0]] = v59[v78[3]];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[14 - 11]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[797 - (413 + 381)]] + v78[1 + 3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[3 - 1]] = v76[v78[7 - 4]][v78[1974 - (582 + 1388)]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v257 = v78[2 + 0];
											v255, v256 = v69(v76[v257](v13(v76, v257 + (365 - (326 + 38)), v78[8 - 5])));
											v71 = (v256 + v257) - (1 - 0);
											v254 = 620 - (47 + 573);
											for v974 = v257, v71 do
												v254 = v254 + 1 + 0;
												v76[v974] = v255[v254];
											end
											v70 = v70 + 1;
											v78 = v66[v70];
											v257 = v78[2];
											v76[v257] = v76[v257](v13(v76, v257 + (4 - 3), v71));
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[1666 - (1269 + 395)]][v76[v78[3]]] = v76[v78[496 - (76 + 416)]];
											v70 = v70 + (444 - (319 + 124));
											v78 = v66[v70];
											v76[v78[4 - 2]] = v76[v78[1010 - (564 + 443)]] + v78[4];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[460 - (337 + 121)]] = v76[v78[3]][v76[v78[11 - 7]]];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[2]] = v78[1914 - (1261 + 650)];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v70 = v78[3];
										elseif (v79 == (85 - 31)) then
											local v1373 = 1817 - (772 + 1045);
											while true do
												if (v1373 == (1 + 6)) then
													v76[v78[146 - (102 + 42)]][v76[v78[3]]] = v76[v78[1848 - (1524 + 320)]];
													v70 = v70 + (1271 - (1049 + 221));
													v78 = v66[v70];
													v1373 = 164 - (18 + 138);
												end
												if (v1373 == 9) then
													v76[v78[4 - 2]] = v76[v78[1105 - (67 + 1035)]][v76[v78[352 - (136 + 212)]]];
													break;
												end
												if (v1373 == 6) then
													v76[v78[8 - 6]] = v76[v78[3]][v76[v78[4 + 0]]];
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v1373 = 1611 - (240 + 1364);
												end
												if ((3524 >= 3361) and ((1085 - (1050 + 32)) == v1373)) then
													v76[v78[2]] = v76[v78[10 - 7]][v76[v78[3 + 1]]];
													v70 = v70 + (1056 - (331 + 724));
													v78 = v66[v70];
													v1373 = 4;
												end
												if (v1373 == (1 + 1)) then
													v76[v78[2]] = v76[v78[647 - (269 + 375)]][v78[729 - (267 + 458)]];
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v1373 = 3;
												end
												if ((v1373 == (9 - 4)) or (3929 == 4570)) then
													v76[v78[820 - (667 + 151)]] = v76[v78[3]][v76[v78[4]]];
													v70 = v70 + (1498 - (1410 + 87));
													v78 = v66[v70];
													v1373 = 1903 - (1504 + 393);
												end
												if ((1560 >= 1462) and (v1373 == (21 - 13))) then
													v76[v78[2]] = v76[v78[3]] + v78[10 - 6];
													v70 = v70 + (797 - (461 + 335));
													v78 = v66[v70];
													v1373 = 2 + 7;
												end
												if (v1373 == 1) then
													v76[v78[1763 - (1730 + 31)]] = v76[v78[3]][v78[1671 - (728 + 939)]];
													v70 = v70 + (3 - 2);
													v78 = v66[v70];
													v1373 = 3 - 1;
												end
												if (v1373 == 4) then
													v76[v78[4 - 2]] = v76[v78[1071 - (138 + 930)]][v78[4 + 0]];
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v1373 = 5 + 0;
												end
												if (v1373 == (0 - 0)) then
													v76[v78[1768 - (459 + 1307)]] = v76[v78[1873 - (474 + 1396)]][v76[v78[6 - 2]]];
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v1373 = 1;
												end
											end
										else
											local v1374;
											v76[v78[1 + 1]] = v76[v78[8 - 5]][v76[v78[1 + 3]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[9 - 6]][v78[17 - 13]];
											v70 = v70 + (592 - (562 + 29));
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3 + 0]][v76[v78[1423 - (374 + 1045)]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[5 - 3]] = v76[v78[641 - (448 + 190)]] + v78[2 + 2];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[11 - 8]][v76[v78[12 - 8]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1374 = v78[1496 - (1307 + 187)];
											v76[v1374](v76[v1374 + (3 - 2)]);
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[2]] = v78[8 - 5];
										end
									elseif (v79 <= (739 - (232 + 451))) then
										local v277 = 0 + 0;
										while true do
											if (v277 == (3 + 0)) then
												v70 = v78[567 - (510 + 54)];
												break;
											end
											if ((v277 == (0 - 0)) or (2029 == 4270)) then
												v76[v78[38 - (13 + 23)]] = v76[v78[3]][v78[7 - 3]];
												v70 = v70 + (1 - 0);
												v78 = v66[v70];
												v76[v78[3 - 1]] = v76[v78[1091 - (830 + 258)]][v78[4]];
												v277 = 3 - 2;
											end
											if ((v277 == (2 + 0)) or (2710 == 475)) then
												v78 = v66[v70];
												v76[v78[2 + 0]] = v78[1444 - (860 + 581)];
												v70 = v70 + (3 - 2);
												v78 = v66[v70];
												v277 = 3 + 0;
											end
											if (v277 == (242 - (237 + 4))) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[4 - 2]][v76[v78[3]]] = v76[v78[9 - 5]];
												v70 = v70 + (1 - 0);
												v277 = 2;
											end
										end
									elseif (v79 == (47 + 10)) then
										local v1386;
										v76[v78[2 + 0]] = v59[v78[11 - 8]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[2 + 1]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1428 - (85 + 1341)]] = v78[4 - 1];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v78[375 - (45 + 327)];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v1386 = v78[504 - (444 + 58)];
										v76[v1386] = v76[v1386](v13(v76, v1386 + 1 + 0, v78[1 + 2]));
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[1735 - (64 + 1668)]] * v78[1977 - (1227 + 746)];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[5 - 2]] + v76[v78[498 - (415 + 79)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[493 - (142 + 349)]] = v78[2 + 1];
									else
										local v1400;
										local v1401;
										local v1402;
										v76[v78[2 - 0]] = {};
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v60[v78[3 + 0]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[2]] = {};
										v70 = v70 + (1865 - (1710 + 154));
										v78 = v66[v70];
										v76[v78[320 - (200 + 118)]][v78[2 + 1]] = v78[6 - 2];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2 + 0]][v78[3 + 0]] = v78[3 + 1];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[4 - 2]][v78[1253 - (363 + 887)]] = v78[6 - 2];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v76[v78[4]];
										v70 = v70 + (4 - 3);
										v78 = v66[v70];
										v76[v78[1 + 1]] = v78[6 - 3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]] = #v76[v78[3]];
										v70 = v70 + (1665 - (674 + 990));
										v78 = v66[v70];
										v76[v78[1 + 1]] = v78[2 + 1];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v1402 = v78[1057 - (507 + 548)];
										v1401 = v76[v1402];
										v1400 = v76[v1402 + (839 - (289 + 548))];
										if ((v1400 > (1818 - (821 + 997))) or (1507 == 4969)) then
											if (v1401 > v76[v1402 + (256 - (195 + 60))]) then
												v70 = v78[3];
											else
												v76[v1402 + 1 + 2] = v1401;
											end
										elseif (v1401 < v76[v1402 + (1502 - (251 + 1250))]) then
											v70 = v78[8 - 5];
										else
											v76[v1402 + 3 + 0] = v1401;
										end
									end
								elseif (v79 <= (1093 - (809 + 223))) then
									if (v79 <= (85 - 26)) then
										local v278;
										v278 = v78[5 - 3];
										v76[v278] = v76[v278]();
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[6 - 4]] = v76[v78[3 + 0]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v59[v78[620 - (14 + 603)]];
										v70 = v70 + (130 - (118 + 11));
										v78 = v66[v70];
										v278 = v78[1 + 1];
										v76[v278] = v76[v278]();
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[952 - (551 + 398)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v78[3 + 0];
									elseif (v79 > (223 - 163)) then
										local v1421 = 0 - 0;
										while true do
											if ((3794 >= 2664) and (v1421 == (3 + 5))) then
												v76[v78[7 - 5]] = v76[v78[1 + 2]][v78[4]];
												v70 = v70 + (90 - (40 + 49));
												v78 = v66[v70];
												v1421 = 9;
											end
											if (v1421 == (15 - 11)) then
												v76[v78[2]][v76[v78[3]]] = v76[v78[4]];
												v70 = v70 + (491 - (99 + 391));
												v78 = v66[v70];
												v1421 = 5 + 0;
											end
											if ((v1421 == (0 - 0)) or (2803 >= 4691)) then
												v76[v78[4 - 2]] = v76[v78[3 + 0]][v78[4]];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v1421 = 1605 - (1032 + 572);
											end
											if (v1421 == (424 - (203 + 214))) then
												v76[v78[1819 - (568 + 1249)]] = v76[v78[3]][v76[v78[4 + 0]]];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v1421 = 30 - 22;
											end
											if (v1421 == 1) then
												v76[v78[1308 - (913 + 393)]] = v76[v78[3]][v76[v78[11 - 7]]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1421 = 2;
											end
											if (v1421 == (6 - 1)) then
												v76[v78[412 - (269 + 141)]] = v76[v78[3]] + v78[8 - 4];
												v70 = v70 + (1982 - (362 + 1619));
												v78 = v66[v70];
												v1421 = 6;
											end
											if ((3405 >= 1913) and ((1628 - (950 + 675)) == v1421)) then
												v76[v78[1 + 1]] = v76[v78[1182 - (216 + 963)]][v76[v78[1291 - (485 + 802)]]];
												v70 = v70 + (560 - (432 + 127));
												v78 = v66[v70];
												v1421 = 1077 - (1065 + 8);
											end
											if (v1421 == (4 + 2)) then
												v76[v78[1603 - (635 + 966)]] = v76[v78[3 + 0]] + v78[46 - (5 + 37)];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v1421 = 3 + 4;
											end
											if (v1421 == (2 - 0)) then
												v76[v78[1 + 1]] = v76[v78[3]][v78[4]];
												v70 = v70 + (1 - 0);
												v78 = v66[v70];
												v1421 = 3;
											end
											if ((85 <= 953) and ((34 - 25) == v1421)) then
												v76[v78[3 - 1]] = v76[v78[7 - 4]][v78[3 + 1]];
												break;
											end
										end
									elseif (v76[v78[531 - (318 + 211)]] > v78[19 - 15]) then
										v70 = v70 + 1;
									else
										v70 = v78[1590 - (963 + 624)];
									end
								elseif (v79 <= (27 + 36)) then
									if ((1282 <= 2113) and (v79 == (908 - (518 + 328)))) then
										v76[v78[2]] = v59[v78[6 - 3]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[319 - (301 + 16)]] = v76[v78[8 - 5]][v78[11 - 7]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[2 + 1]][v76[v78[8 - 4]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]][v76[v78[1 + 2]]] = v76[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[6 - 4]] = v76[v78[1 + 2]] + v78[1023 - (829 + 190)];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[2 - 0]] = v78[3 - 0];
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[7 - 4];
									else
										v76[v78[1 + 1]] = v76[v78[1 + 2]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v59[v78[3 + 0]];
										v70 = v70 + (614 - (520 + 93));
										v78 = v66[v70];
										v76[v78[278 - (259 + 17)]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[10 - 7]][v76[v78[595 - (396 + 195)]]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[2]][v76[v78[1764 - (440 + 1321)]]] = v76[v78[1833 - (1059 + 770)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[9 - 7]] = v76[v78[548 - (424 + 121)]] + v78[1 + 3];
										v70 = v70 + (1348 - (641 + 706));
										v78 = v66[v70];
										v76[v78[1 + 1]] = v78[443 - (249 + 191)];
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[3];
									end
								elseif ((4675 == 4675) and (v79 == 64)) then
									local v1448 = 0 - 0;
									while true do
										if ((2 + 1) == v1448) then
											v76[v78[7 - 5]][v76[v78[430 - (183 + 244)]]] = v76[v78[1 + 3]];
											v70 = v70 + (731 - (434 + 296));
											v78 = v66[v70];
											v76[v78[2]] = v78[9 - 6];
											break;
										end
										if ((v1448 == (513 - (169 + 343))) or (4087 < 776)) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[4 - 1]][v78[11 - 7]];
											v70 = v70 + 1 + 0;
											v1448 = 5 - 3;
										end
										if ((v1448 == (1125 - (651 + 472))) or (667 >= 1770)) then
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[3]][v76[v78[2 + 2]]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v1448 = 486 - (397 + 86);
										end
										if ((v1448 == (876 - (423 + 453))) or (798 >= 1480)) then
											v76[v78[1 + 1]] = v76[v78[1 + 2]][v78[4 + 0]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2]] = v59[v78[3 + 0]];
											v1448 = 1191 - (50 + 1140);
										end
									end
								else
									local v1449;
									local v1450, v1451;
									local v1452;
									v76[v78[2 + 0]] = v76[v78[2 + 1]][v76[v78[1 + 3]]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2 + 0]] = v59[v78[3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[599 - (157 + 439)]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]] + v78[12 - 8];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[920 - (782 + 136)]] = v76[v78[3]][v78[4]];
									v70 = v70 + (856 - (112 + 743));
									v78 = v66[v70];
									v1452 = v78[1173 - (1026 + 145)];
									v1450, v1451 = v69(v76[v1452](v13(v76, v1452 + 1, v78[3])));
									v71 = (v1451 + v1452) - (1 + 0);
									v1449 = 718 - (493 + 225);
									for v4243 = v1452, v71 do
										local v4244 = 0 - 0;
										while true do
											if ((v4244 == 0) or (3645 < 488)) then
												v1449 = v1449 + 1 + 0;
												v76[v4243] = v1450[v1449];
												break;
											end
										end
									end
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v1452 = v78[1 + 1];
									v76[v1452] = v76[v1452](v13(v76, v1452 + 1, v71));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[5 - 3]][v76[v78[1 + 2]]] = v76[v78[6 - 2]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1597 - (210 + 1385)]] = v76[v78[1692 - (1201 + 488)]] + v78[3 + 1];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2 - 0]] = v76[v78[588 - (352 + 233)]] + v78[9 - 5];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[8 - 5]][v76[v78[4]]];
									v70 = v70 + (575 - (489 + 85));
									v78 = v66[v70];
									v76[v78[1503 - (277 + 1224)]] = v76[v78[3]][v78[1497 - (663 + 830)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[3]][v76[v78[879 - (461 + 414)]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[1 + 2]][v78[4 + 0]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[252 - (172 + 78)]] = v76[v78[4 - 1]][v78[2 + 2]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[2 + 1]][v76[v78[6 - 2]]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[1 + 1]][v76[v78[2 + 1]]] = v76[v78[2 + 2]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[1 + 2]] + v78[4];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[449 - (133 + 314)]] = v76[v78[1 + 2]][v76[v78[4]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[215 - (199 + 14)]] = v76[v78[10 - 7]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1551 - (647 + 902)]] = v76[v78[8 - 5]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[235 - (85 + 148)]] = v76[v78[1292 - (426 + 863)]][v76[v78[4]]];
									v70 = v70 + (4 - 3);
									v78 = v66[v70];
									v76[v78[1656 - (873 + 781)]][v76[v78[3]]] = v76[v78[4 - 0]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[7 - 4]] + v78[2 + 2];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[7 - 5]] = v78[3 - 0];
								end
							elseif (v79 <= (213 - 141)) then
								if (v79 <= (2015 - (414 + 1533))) then
									if (v79 <= (58 + 8)) then
										v76[v78[557 - (443 + 112)]] = v76[v78[1482 - (888 + 591)]] + v78[10 - 6];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[11 - 8]][v76[v78[2 + 2]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[5 - 2]][v78[6 - 2]];
										v70 = v70 + (1679 - (136 + 1542));
										v78 = v66[v70];
										v76[v78[6 - 4]] = v59[v78[3 + 0]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[3 + 1]];
										v70 = v70 + (487 - (68 + 418));
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[5 - 2]][v76[v78[4 + 0]]];
										v70 = v70 + (1093 - (770 + 322));
										v78 = v66[v70];
										v76[v78[1 + 1]][v76[v78[1 + 2]]] = v76[v78[1 + 3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[5 - 2]] + v78[10 - 6];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[2 + 0]] = v78[3];
									elseif (v79 == 67) then
										v76[v78[2 - 0]] = v59[v78[2 + 1]];
									else
										local v1494;
										local v1495;
										local v1496;
										v76[v78[2 + 0]] = v76[v78[3 + 0]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[7 - 5]] = v78[3 - 0];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[9 - 7]] = #v76[v78[9 - 6]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[9 - 7]] = v78[834 - (762 + 69)];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1496 = v78[6 - 4];
										v1495 = v76[v1496];
										v1494 = v76[v1496 + 2 + 0];
										if (v1494 > (0 + 0)) then
											if (v1495 > v76[v1496 + (2 - 1)]) then
												v70 = v78[3];
											else
												v76[v1496 + 1 + 2] = v1495;
											end
										elseif ((v1495 < v76[v1496 + 1]) or (2073 <= 694)) then
											v70 = v78[1 + 2];
										else
											v76[v1496 + (11 - 8)] = v1495;
										end
									end
								elseif (v79 <= 70) then
									if (v79 > 69) then
										local v1507 = 157 - (8 + 149);
										while true do
											if ((v1507 == (1322 - (1199 + 121))) or (2579 < 1699)) then
												v78 = v66[v70];
												v76[v78[3 - 1]][v76[v78[3]]] = v76[v78[8 - 4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1507 = 2 + 1;
											end
											if (v1507 == (3 - 2)) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[6 - 3]][v78[4 + 0]];
												v70 = v70 + (1808 - (518 + 1289));
												v1507 = 2 - 0;
											end
											if ((2120 > 1802) and (v1507 == (1 + 3))) then
												v70 = v70 + (1 - 0);
												v78 = v66[v70];
												v76[v78[2 + 0]] = v76[v78[472 - (304 + 165)]][v76[v78[4]]];
												v70 = v70 + 1 + 0;
												v1507 = 165 - (54 + 106);
											end
											if ((4429 >= 903) and (v1507 == (1972 - (1618 + 351)))) then
												v76[v78[2 + 0]] = v76[v78[3]] + v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[1018 - (10 + 1006)]] = v76[v78[3]] + v78[2 + 2];
												v1507 = 1 + 3;
											end
											if (v1507 == 5) then
												v78 = v66[v70];
												v76[v78[2]] = v78[9 - 6];
												break;
											end
											if ((3914 == 3914) and (v1507 == (1033 - (912 + 121)))) then
												v76[v78[1 + 1]] = v76[v78[3]][v76[v78[1293 - (1140 + 149)]]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2 + 0]] = v76[v78[3 - 0]][v78[1 + 3]];
												v1507 = 3 - 2;
											end
										end
									else
										local v1508 = 0 - 0;
										local v1509;
										local v1510;
										local v1511;
										local v1512;
										while true do
											if (v1508 == (1 + 2)) then
												v76[v78[2]] = v59[v78[3]];
												v70 = v70 + (3 - 2);
												v78 = v66[v70];
												v76[v78[188 - (165 + 21)]] = v76[v78[114 - (61 + 50)]];
												v1508 = 4;
											end
											if ((4188 < 4840) and (v1508 == (1 + 0))) then
												v70 = v70 + (4 - 3);
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + (1 - 0);
												v1508 = 1 + 1;
											end
											if (v1508 == (1462 - (1295 + 165))) then
												v78 = v66[v70];
												v76[v78[1 + 1]] = v76[v78[2 + 1]][v76[v78[1401 - (819 + 578)]]];
												v70 = v70 + (1403 - (331 + 1071));
												v78 = v66[v70];
												v1508 = 746 - (588 + 155);
											end
											if (5 == v1508) then
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]] + v78[4];
												v70 = v70 + (1283 - (546 + 736));
												v78 = v66[v70];
												v1508 = 1943 - (1834 + 103);
											end
											if (v1508 == (4 + 2)) then
												v76[v78[5 - 3]] = v76[v78[1769 - (1536 + 230)]][v78[495 - (128 + 363)]];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v1512 = v78[2];
												v1508 = 17 - 10;
											end
											if ((3 + 5) == v1508) then
												v70 = v70 + (1 - 0);
												v78 = v66[v70];
												v1512 = v78[2];
												v76[v1512] = v76[v1512](v13(v76, v1512 + (2 - 1), v71));
												break;
											end
											if (v1508 == (9 - 5)) then
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[1012 - (615 + 394)]] + v78[4 + 0];
												v70 = v70 + 1 + 0;
												v1508 = 15 - 10;
											end
											if (v1508 == (31 - 24)) then
												v1510, v1511 = v69(v76[v1512](v13(v76, v1512 + (652 - (59 + 592)), v78[6 - 3])));
												v71 = (v1511 + v1512) - (1 - 0);
												v1509 = 0 + 0;
												for v7455 = v1512, v71 do
													local v7456 = 171 - (70 + 101);
													while true do
														if ((0 - 0) == v7456) then
															v1509 = v1509 + 1 + 0;
															v76[v7455] = v1510[v1509];
															break;
														end
													end
												end
												v1508 = 20 - 12;
											end
											if (v1508 == (241 - (123 + 118))) then
												v1509 = nil;
												v1510, v1511 = nil;
												v1512 = nil;
												v76[v78[1 + 1]] = v76[v78[1 + 2]][v76[v78[4]]];
												v1508 = 1400 - (653 + 746);
											end
										end
									end
								elseif (v79 == (132 - 61)) then
									v76[v78[2 - 0]] = v76[v78[7 - 4]][v76[v78[2 + 2]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3 + 0]][v78[1 + 3]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[3]][v76[v78[4 + 0]]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1237 - (885 + 349)]][v78[4 + 0]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[8 - 5]][v78[972 - (915 + 53)]];
									v70 = v70 + (802 - (768 + 33));
									v78 = v66[v70];
									v76[v78[7 - 5]] = v76[v78[5 - 2]][v76[v78[332 - (287 + 41)]]];
									v70 = v70 + (848 - (638 + 209));
									v78 = v66[v70];
									v76[v78[2]][v76[v78[2 + 1]]] = v76[v78[1690 - (96 + 1590)]];
									v70 = v70 + (1673 - (741 + 931));
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[8 - 5]] + v78[18 - 14];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
								else
									local v1529 = 0;
									while true do
										if (v1529 == (2 + 1)) then
											v76[v78[1 + 1]] = v78[11 - 8];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v70 = v78[2 + 1];
											break;
										end
										if (v1529 == (0 - 0)) then
											v76[v78[2 + 0]] = v59[v78[3]];
											v70 = v70 + (495 - (64 + 430));
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[366 - (106 + 257)]][v78[4]];
											v1529 = 1 + 0;
										end
										if ((1880 <= 4191) and (v1529 == (723 - (496 + 225)))) then
											v78 = v66[v70];
											v76[v78[3 - 1]][v76[v78[14 - 11]]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1529 = 3;
										end
										if ((v1529 == 1) or (991 <= 936)) then
											v70 = v70 + (1659 - (256 + 1402));
											v78 = v66[v70];
											v76[v78[1901 - (30 + 1869)]] = v76[v78[3]][v76[v78[1373 - (213 + 1156)]]];
											v70 = v70 + (189 - (96 + 92));
											v1529 = 1 + 1;
										end
									end
								end
							elseif (v79 <= (974 - (142 + 757))) then
								if (v79 <= (60 + 13)) then
									local v307 = 0 + 0;
									while true do
										if ((4661 >= 3413) and (v307 == (79 - (32 + 47)))) then
											v76[v78[1979 - (1053 + 924)]] = v76[v78[3 + 0]][v78[6 - 2]];
											v70 = v70 + (1649 - (685 + 963));
											v78 = v66[v70];
											v76[v78[3 - 1]] = v76[v78[3]][v78[6 - 2]];
											v307 = 1710 - (541 + 1168);
										end
										if (2 == v307) then
											v78 = v66[v70];
											v76[v78[1599 - (645 + 952)]][v76[v78[841 - (669 + 169)]]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v307 = 10 - 7;
										end
										if (v307 == 3) then
											v70 = v78[6 - 3];
											break;
										end
										if ((3639 > 1100) and (v307 == (1 + 0))) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[767 - (181 + 584)]] = v76[v78[1398 - (665 + 730)]][v76[v78[11 - 7]]];
											v70 = v70 + (1 - 0);
											v307 = 1352 - (540 + 810);
										end
									end
								elseif ((v79 == 74) or (2411 > 3093)) then
									local v1530 = 0 - 0;
									while true do
										if (v1530 == (21 - 13)) then
											v76[v78[2 + 0]] = v60[v78[206 - (166 + 37)]];
											v70 = v70 + (1882 - (22 + 1859));
											v78 = v66[v70];
											v1530 = 1781 - (843 + 929);
										end
										if (v1530 == (265 - (30 + 232))) then
											v76[v78[5 - 3]] = v76[v78[780 - (55 + 722)]][v78[4]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v1530 = 1679 - (78 + 1597);
										end
										if ((v1530 == (2 + 5)) or (4023 == 1015)) then
											v76[v78[2 + 0]] = v76[v78[3]][v78[4 + 0]];
											v70 = v70 + (550 - (305 + 244));
											v78 = v66[v70];
											v1530 = 8 + 0;
										end
										if ((107 - (95 + 10)) == v1530) then
											v76[v78[2 + 0]] = v76[v78[3]][v76[v78[12 - 8]]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v1530 = 765 - (592 + 170);
										end
										if (6 == v1530) then
											v76[v78[2]] = v76[v78[3]][v76[v78[13 - 9]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1530 = 17 - 10;
										end
										if (v1530 == (1 + 0)) then
											v76[v78[2]] = v76[v78[2 + 1]][v78[4]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v1530 = 1 + 1;
										end
										if ((2979 < 4139) and (v1530 == 9)) then
											v76[v78[3 - 1]] = v76[v78[510 - (353 + 154)]][v78[5 - 1]];
											break;
										end
										if (v1530 == (4 - 0)) then
											v76[v78[2 + 0]] = v60[v78[3 + 0]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v1530 = 6 - 1;
										end
										if (v1530 == (0 - 0)) then
											v76[v78[4 - 2]] = v60[v78[89 - (7 + 79)]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v1530 = 1;
										end
										if (v1530 == (186 - (24 + 157))) then
											v76[v78[2]] = v76[v78[3]][v78[7 - 3]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v1530 = 2 + 4;
										end
									end
								else
									v76[v78[4 - 2]] = v76[v78[383 - (262 + 118)]][v78[1087 - (1038 + 45)]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[232 - (19 + 211)]] = v76[v78[116 - (88 + 25)]][v78[9 - 5]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]][v76[v78[1039 - (1007 + 29)]]] = v76[v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[14 - 11]] + v78[1 + 3];
									v70 = v70 + (812 - (340 + 471));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[7 - 4]][v76[v78[593 - (276 + 313)]]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[2 + 0]] = v78[2 + 1];
								end
							elseif (v79 <= (8 + 69)) then
								if (v79 == 76) then
									v76[v78[2]] = v76[v78[1975 - (495 + 1477)]] - v78[11 - 7];
								else
									local v1543 = 0 + 0;
									local v1544;
									while true do
										if ((406 - (342 + 61)) == v1543) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[167 - (4 + 161)]] = v78[2 + 1];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v1543 = 4;
										end
										if ((v1543 == (15 - 9)) or (1410 > 4658)) then
											v76[v78[499 - (322 + 175)]] = v76[v78[566 - (173 + 390)]];
											break;
										end
										if ((v1543 == (1 + 1)) or (1401 == 2454)) then
											v78 = v66[v70];
											v76[v78[316 - (203 + 111)]][v78[3]] = v76[v78[1 + 3]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[8 - 5]];
											v1543 = 3 + 0;
										end
										if (v1543 == (710 - (57 + 649))) then
											v76[v78[2]] = v78[387 - (328 + 56)];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v1544 = v78[2];
											v76[v1544] = v76[v1544](v13(v76, v1544 + (513 - (433 + 79)), v78[1 + 2]));
											v1543 = 5;
										end
										if (v1543 == 5) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2]][v78[9 - 6]] = v76[v78[18 - 14]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v1543 = 6 + 0;
										end
										if (v1543 == (1037 - (562 + 474))) then
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v1544 = v78[3 - 1];
											v76[v1544] = v76[v1544](v13(v76, v1544 + (906 - (76 + 829)), v78[1676 - (1506 + 167)]));
											v70 = v70 + (1 - 0);
											v1543 = 2;
										end
										if ((4515 > 1744) and ((266 - (58 + 208)) == v1543)) then
											v1544 = nil;
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[2 + 1];
											v1543 = 1 + 0;
										end
									end
								end
							elseif ((v79 > (45 + 33)) or (4835 < 3468)) then
								local v1545;
								local v1546, v1547;
								local v1548;
								v76[v78[7 - 5]] = v76[v78[340 - (258 + 79)]][v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[3 - 1]] = v76[v78[1473 - (1219 + 251)]][v76[v78[1675 - (1231 + 440)]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[60 - (34 + 24)]] = v59[v78[2 + 1]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[9 - 6]] + v78[4];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[6 - 4]] = v76[v78[3]][v78[8 - 4]];
								v70 = v70 + (1590 - (877 + 712));
								v78 = v66[v70];
								v1548 = v78[2];
								v1546, v1547 = v69(v76[v1548](v13(v76, v1548 + 1 + 0, v78[757 - (242 + 512)])));
								v71 = (v1547 + v1548) - (1 - 0);
								v1545 = 627 - (92 + 535);
								for v4257 = v1548, v71 do
									v1545 = v1545 + 1;
									v76[v4257] = v1546[v1545];
								end
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v1548 = v78[3 - 1];
								v76[v1548] = v76[v1548](v13(v76, v1548 + 1 + 0, v71));
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[7 - 5]][v76[v78[3 + 0]]] = v76[v78[3 + 1]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1 + 2]] + v78[7 - 3];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]][v76[v78[1789 - (1476 + 309)]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1286 - (299 + 985)]] = v76[v78[1 + 2]][v78[12 - 8]];
								v70 = v70 + (94 - (86 + 7));
								v78 = v66[v70];
								v76[v78[8 - 6]] = v76[v78[1 + 2]][v76[v78[884 - (672 + 208)]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[134 - (14 + 118)]] = v76[v78[3]][v78[449 - (339 + 106)]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[1398 - (440 + 955)]][v78[4 + 0]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[3 - 1]] = v76[v78[1 + 2]][v76[v78[9 - 5]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]][v76[v78[356 - (260 + 93)]]] = v76[v78[4 + 0]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[3 - 1]] = v76[v78[1977 - (1181 + 793)]] + v78[2 + 2];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[309 - (105 + 202)]] = v76[v78[3]][v76[v78[4 + 0]]];
								v70 = v70 + (811 - (352 + 458));
								v78 = v66[v70];
								v76[v78[7 - 5]] = v78[7 - 4];
							else
								local v1581 = v78[2 + 0];
								v76[v1581] = v76[v1581]();
							end
						elseif (v79 <= (268 - 176)) then
							if (v79 <= (1034 - (438 + 511))) then
								if (v79 <= 82) then
									if (v79 <= (1463 - (1262 + 121))) then
										local v308;
										local v309, v310;
										local v311;
										v76[v78[2]] = v76[v78[3]][v76[v78[4]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1070 - (728 + 340)]] = v76[v78[1793 - (816 + 974)]][v78[12 - 8]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[7 - 5]] = v76[v78[3]][v76[v78[343 - (163 + 176)]]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[9 - 7]] = v59[v78[1 + 2]];
										v70 = v70 + (1811 - (1564 + 246));
										v78 = v66[v70];
										v76[v78[347 - (124 + 221)]] = v76[v78[3 + 0]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[453 - (115 + 336)]] = v76[v78[3]] + v78[8 - 4];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[48 - (45 + 1)]] = v76[v78[1 + 2]];
										v70 = v70 + (1991 - (1282 + 708));
										v78 = v66[v70];
										v311 = v78[1214 - (583 + 629)];
										v309, v310 = v69(v76[v311](v13(v76, v311 + 1 + 0, v78[7 - 4])));
										v71 = (v310 + v311) - (1 + 0);
										v308 = 1170 - (943 + 227);
										for v977 = v311, v71 do
											local v978 = 0 + 0;
											while true do
												if (v978 == (1631 - (1539 + 92))) then
													v308 = v308 + 1;
													v76[v977] = v309[v308];
													break;
												end
											end
										end
										v70 = v70 + 1;
										v78 = v66[v70];
										v311 = v78[1948 - (706 + 1240)];
										v76[v311] = v76[v311](v13(v76, v311 + (259 - (81 + 177)), v71));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[5 - 3]][v76[v78[260 - (212 + 45)]]] = v76[v78[13 - 9]];
										v70 = v70 + (1947 - (708 + 1238));
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[3]] + v78[4];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1669 - (586 + 1081)]] = v76[v78[3]] + v78[515 - (348 + 163)];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[282 - (215 + 65)]] = v76[v78[3]][v76[v78[4]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[1862 - (1541 + 318)]][v78[4 + 0]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v59[v78[1753 - (1036 + 714)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[2 + 1]][v78[4]];
										v70 = v70 + (1281 - (883 + 397));
										v78 = v66[v70];
										v76[v78[592 - (563 + 27)]] = v76[v78[11 - 8]][v76[v78[1990 - (1369 + 617)]]];
										v70 = v70 + (1488 - (85 + 1402));
										v78 = v66[v70];
										v76[v78[1 + 1]][v76[v78[3]]] = v76[v78[9 - 5]];
										v70 = v70 + (404 - (274 + 129));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[220 - (12 + 205)]] + v78[4 + 0];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[7 - 5]] = v76[v78[3 + 0]][v76[v78[4]]];
										v70 = v70 + (385 - (27 + 357));
										v78 = v66[v70];
										v76[v78[482 - (91 + 389)]] = v76[v78[300 - (90 + 207)]][v78[4]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[863 - (706 + 155)]] = v59[v78[1798 - (730 + 1065)]];
										v70 = v70 + (1564 - (1339 + 224));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[2 + 1]][v78[4 + 0]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[3]][v76[v78[847 - (268 + 575)]]];
										v70 = v70 + (1295 - (919 + 375));
										v78 = v66[v70];
										v76[v78[5 - 3]][v76[v78[3]]] = v76[v78[4]];
										v70 = v70 + (972 - (180 + 791));
										v78 = v66[v70];
										v76[v78[1807 - (323 + 1482)]] = v76[v78[1921 - (1177 + 741)]] + v78[1 + 3];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[6 - 3]][v76[v78[1 + 3]]];
										v70 = v70 + (110 - (96 + 13));
										v78 = v66[v70];
										v76[v78[1923 - (962 + 959)]] = v76[v78[7 - 4]][v78[1 + 3]];
										v70 = v70 + (1352 - (461 + 890));
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[11 - 8]][v78[247 - (19 + 224)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[200 - (37 + 161)]] = v76[v78[2 + 1]][v76[v78[2 + 2]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[63 - (60 + 1)]][v76[v78[926 - (826 + 97)]]] = v76[v78[4 + 0]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[6 - 4]] = v76[v78[5 - 2]] + v78[689 - (375 + 310)];
										v70 = v70 + (2000 - (1864 + 135));
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[3]][v76[v78[1 + 3]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[7 - 4]][v78[1135 - (314 + 817)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[216 - (32 + 182)]] = v76[v78[3 + 0]][v78[13 - 9]];
										v70 = v70 + (66 - (39 + 26));
										v78 = v66[v70];
										v76[v78[146 - (54 + 90)]] = v76[v78[3]][v76[v78[202 - (45 + 153)]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]] = #v76[v78[555 - (457 + 95)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]][v76[v78[6 - 3]]] = v76[v78[9 - 5]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[2 + 1]] + v78[4];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[3]] + v78[752 - (485 + 263)];
										v70 = v70 + (708 - (575 + 132));
										v78 = v66[v70];
										v76[v78[863 - (750 + 111)]] = v76[v78[1013 - (445 + 565)]][v76[v78[4 + 0]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[312 - (189 + 121)]] = v76[v78[3]][v78[1 + 3]];
										v70 = v70 + (1348 - (634 + 713));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[541 - (493 + 45)]][v76[v78[972 - (493 + 475)]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[786 - (158 + 626)]] = v76[v78[3]][v78[2 + 2]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[1 + 2]][v76[v78[1095 - (1035 + 56)]]];
										v70 = v70 + (960 - (114 + 845));
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[7 - 4]] % v76[v78[4 + 0]];
										v70 = v70 + (1050 - (179 + 870));
										v78 = v66[v70];
										v76[v78[2 - 0]][v76[v78[3]]] = v76[v78[882 - (827 + 51)]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[476 - (95 + 378)]] + v78[1 + 3];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v76[v78[4]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[1014 - (334 + 677)]][v78[14 - 10]];
										v70 = v70 + (1057 - (1049 + 7));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[13 - 10]][v78[7 - 3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[2 + 2]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[3 - 1]] = v76[v78[2 + 1]][v76[v78[1424 - (1004 + 416)]]];
										v70 = v70 + (1958 - (1621 + 336));
										v78 = v66[v70];
										v76[v78[1941 - (337 + 1602)]] = v76[v78[3]] + v76[v78[4]];
										v70 = v70 + (1518 - (1014 + 503));
										v78 = v66[v70];
										v76[v78[2]][v76[v78[1018 - (446 + 569)]]] = v76[v78[1 + 3]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[3]] + v78[7 - 3];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[507 - (223 + 282)]] = v76[v78[1 + 2]][v76[v78[5 - 1]]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[672 - (623 + 47)]] = v76[v78[48 - (32 + 13)]][v78[3 + 1]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1803 - (1070 + 731)]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1406 - (1257 + 147)]] = v76[v78[2 + 1]][v76[v78[4]]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[135 - (98 + 35)]] = #v76[v78[2 + 1]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[6 - 4]][v76[v78[3 + 0]]] = v76[v78[4 + 0]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[2 + 1]] + v78[561 - (395 + 162)];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1943 - (816 + 1125)]] = v76[v78[3 - 0]][v76[v78[1152 - (701 + 447)]]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[1344 - (391 + 950)]][v78[10 - 6]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[3 + 0]][v78[4]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[7 - 5]] = v76[v78[1525 - (251 + 1271)]][v76[v78[4 + 0]]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[4 - 1]][v78[1263 - (1147 + 112)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v76[v78[7 - 3]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[699 - (335 + 362)]] = v76[v78[3]] % v76[v78[4 + 0]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v76[v78[3]]] = v76[v78[5 - 1]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[7 - 5]] = v76[v78[14 - 11]] + v78[11 - 7];
										v70 = v70 + (567 - (237 + 329));
										v78 = v66[v70];
										v76[v78[7 - 5]] = v76[v78[2 + 1]][v76[v78[3 + 1]]];
										v70 = v70 + (1125 - (408 + 716));
										v78 = v66[v70];
										v76[v78[7 - 5]] = v76[v78[3]][v78[825 - (344 + 477)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[1764 - (1188 + 573)]][v78[10 - 6]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[6 - 4]] = v76[v78[3 - 0]][v78[9 - 5]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1531 - (508 + 1021)]] = v76[v78[3 + 0]][v76[v78[1170 - (228 + 938)]]];
										v70 = v70 + (686 - (332 + 353));
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[7 - 4]] + v76[v78[4]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 + 0]][v76[v78[11 - 8]]] = v76[v78[4]];
									elseif (v79 > (504 - (18 + 405))) then
										v76[v78[2]] = v59[v78[2 + 1]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[981 - (194 + 784)]][v78[4]];
										v70 = v70 + (1771 - (694 + 1076));
										v78 = v66[v70];
										v76[v78[1906 - (122 + 1782)]] = v76[v78[3 + 0]][v76[v78[4 + 0]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 + 0]][v76[v78[3]]] = v76[v78[11 - 7]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v70 = v78[1973 - (214 + 1756)];
									else
										local v1593 = 0;
										while true do
											if ((v1593 == (4 - 3)) or (1459 > 1794)) then
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[1 + 1]] = v76[v78[3]][v76[v78[4]]];
												v70 = v70 + (586 - (217 + 368));
												v1593 = 2;
											end
											if ((3783 >= 595) and (v1593 == (5 - 3))) then
												v78 = v66[v70];
												v76[v78[2 + 0]] = v76[v78[3 + 0]][v78[1 + 3]];
												v70 = v70 + (890 - (844 + 45));
												v78 = v66[v70];
												v1593 = 287 - (242 + 42);
											end
											if ((v1593 == (0 - 0)) or (4717 <= 4521)) then
												v76[v78[4 - 2]] = v76[v78[1203 - (132 + 1068)]][v78[5 - 1]];
												v70 = v70 + (1624 - (214 + 1409));
												v78 = v66[v70];
												v76[v78[2 + 0]] = v76[v78[3]][v78[1638 - (497 + 1137)]];
												v1593 = 1;
											end
											if (v1593 == (943 - (9 + 931))) then
												v76[v78[291 - (181 + 108)]] = v76[v78[2 + 1]][v76[v78[4]]];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v76[v78[5 - 3]] = v76[v78[1 + 2]][v76[v78[3 + 1]]];
												v1593 = 480 - (296 + 180);
											end
											if (v1593 == (1407 - (1183 + 220))) then
												v70 = v70 + (1266 - (1037 + 228));
												v78 = v66[v70];
												v76[v78[2 - 0]][v76[v78[3]]] = v76[v78[4]];
												v70 = v70 + (2 - 1);
												v1593 = 17 - 12;
											end
											if (v1593 == (740 - (527 + 207))) then
												v76[v78[2]] = v76[v78[530 - (187 + 340)]] + v78[1874 - (1298 + 572)];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v76[v78[174 - (144 + 26)]]];
												break;
											end
											if (v1593 == (12 - 7)) then
												v78 = v66[v70];
												v76[v78[4 - 2]] = v76[v78[2 + 1]] + v78[10 - 6];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v1593 = 6;
											end
										end
									end
								elseif (v79 <= (402 - 319)) then
									local v415;
									local v416;
									local v417, v418;
									local v419;
									v76[v78[2 + 0]] = v76[v78[3 - 0]] + v78[4 + 0];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = {};
									v70 = v70 + (203 - (5 + 197));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[689 - (339 + 347)]][v76[v78[8 - 4]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[6 - 4]] = v76[v78[379 - (365 + 11)]] + v78[4 + 0];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[927 - (837 + 87)]][v76[v78[6 - 2]]];
									v70 = v70 + (1671 - (837 + 833));
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[1390 - (356 + 1031)]][v76[v78[2 + 2]]];
									v70 = v70 + (1647 - (73 + 1573));
									v78 = v66[v70];
									v419 = v78[1390 - (1307 + 81)];
									v417, v418 = v69(v76[v419](v13(v76, v419 + (235 - (7 + 227)), v78[3])));
									v71 = (v418 + v419) - (1 - 0);
									v416 = 166 - (90 + 76);
									for v979 = v419, v71 do
										v416 = v416 + (3 - 2);
										v76[v979] = v417[v416];
									end
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v419 = v78[2];
									v415 = v76[v419];
									for v982 = v419 + 1 + 0, v71 do
										v7(v415, v76[v982]);
									end
								elseif (v79 > (70 + 14)) then
									local v1594 = v78[7 - 5];
									v76[v1594] = v76[v1594](v13(v76, v1594 + (261 - (197 + 63)), v78[1 + 2]));
								else
									do
										return;
									end
								end
							elseif (v79 <= (21 + 67)) then
								if ((4919 > 4069) and (v79 <= (45 + 41))) then
									local v432 = 0 + 0;
									while true do
										if (v432 == (2 - 0)) then
											v76[v78[1371 - (618 + 751)]] = v76[v78[3]][v78[3 + 1]];
											v70 = v70 + (1911 - (206 + 1704));
											v78 = v66[v70];
											v432 = 4 - 1;
										end
										if (v432 == 5) then
											v76[v78[3 - 1]] = v78[2 + 1];
											break;
										end
										if (v432 == (1276 - (155 + 1120))) then
											v76[v78[1508 - (396 + 1110)]] = v59[v78[3]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v432 = 2;
										end
										if ((2896 > 2876) and (v432 == 0)) then
											v76[v78[1 + 1]] = v76[v78[3 + 0]][v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v432 = 977 - (230 + 746);
										end
										if ((2189 >= 2067) and (v432 == (605 - (473 + 128)))) then
											v76[v78[50 - (39 + 9)]][v76[v78[269 - (38 + 228)]]] = v76[v78[6 - 2]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v432 = 478 - (106 + 367);
										end
										if (v432 == (1 + 2)) then
											v76[v78[1864 - (354 + 1508)]] = v76[v78[3]][v76[v78[12 - 8]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v432 = 3 + 1;
										end
									end
								elseif (v79 > 87) then
									local v1596;
									local v1597;
									v76[v78[2 - 0]] = v76[v78[1247 - (334 + 910)]];
									v70 = v70 + (896 - (92 + 803));
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[1184 - (1035 + 146)]];
									v70 = v70 + (617 - (230 + 386));
									v78 = v66[v70];
									v1597 = v78[2 + 0];
									v76[v1597] = v76[v1597]();
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1512 - (353 + 1157)]] = {};
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1117 - (53 + 1061)]];
									v70 = v70 + (1636 - (1568 + 67));
									v78 = v66[v70];
									v1597 = v78[1 + 1];
									v76[v1597] = v76[v1597](v13(v76, v1597 + 1 + 0, v78[7 - 4]));
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v1597 = v78[4 - 2];
									v71 = (v1597 + v77) - (1 + 0);
									for v4277 = v1597, v71 do
										v1596 = v72[v4277 - v1597];
										v76[v4277] = v1596;
									end
									v70 = v70 + 1;
									v78 = v66[v70];
									v1597 = v78[1214 - (615 + 597)];
									do
										return v76[v1597](v13(v76, v1597 + 1 + 0, v71));
									end
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v1597 = v78[2 + 0];
									do
										return v13(v76, v1597, v71);
									end
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									do
										return;
									end
								else
									v76[v78[2 + 0]] = v76[v78[3]][v76[v78[4]]];
									v70 = v70 + (1900 - (1056 + 843));
									v78 = v66[v70];
									v76[v78[3 - 1]] = v76[v78[3]][v78[4]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[5 - 3]] = v76[v78[2 + 1]][v78[1980 - (286 + 1690)]];
									v70 = v70 + (912 - (98 + 813));
									v78 = v66[v70];
									v76[v78[1 + 1]][v76[v78[7 - 4]]] = v76[v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[509 - (263 + 244)]] = v78[3 + 0];
								end
							elseif (v79 <= (1777 - (1502 + 185))) then
								if ((4678 >= 4363) and (v79 > (17 + 72))) then
									v76[v78[9 - 7]] = v76[v78[3]][v78[10 - 6]];
									v70 = v70 + (1528 - (629 + 898));
									v78 = v66[v70];
									v76[v78[5 - 3]] = v76[v78[7 - 4]][v76[v78[369 - (12 + 353)]]];
									v70 = v70 + (1912 - (1680 + 231));
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[2 + 1]][v78[1153 - (212 + 937)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1064 - (111 + 951)]] = v76[v78[1 + 2]] / v76[v78[4]];
									v70 = v70 + (28 - (18 + 9));
									v78 = v66[v70];
									v76[v78[2]][v76[v78[3]]] = v76[v78[1 + 3]];
									v70 = v70 + (535 - (31 + 503));
									v78 = v66[v70];
									v70 = v78[1635 - (595 + 1037)];
								elseif (v76[v78[1446 - (189 + 1255)]] == v76[v78[2 + 2]]) then
									v70 = v70 + (1 - 0);
								else
									v70 = v78[3];
								end
							elseif (v79 == (1370 - (1170 + 109))) then
								local v1633 = v78[1819 - (348 + 1469)];
								v76[v1633] = v76[v1633](v76[v1633 + (1290 - (1115 + 174))]);
							else
								v76[v78[2]] = v76[v78[7 - 4]][v76[v78[4]]];
								v70 = v70 + (1015 - (85 + 929));
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[1870 - (1151 + 716)]][v78[2 + 2]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1706 - (95 + 1609)]] = v76[v78[10 - 7]][v78[762 - (364 + 394)]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[1 + 2]][v76[v78[4 + 0]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]][v76[v78[2 + 1]]] = v76[v78[2 + 2]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1 + 2]] + v78[960 - (719 + 237)];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]][v76[v78[4]]];
							end
						elseif (v79 <= 99) then
							if (v79 <= (79 + 16)) then
								if (v79 <= (230 - 137)) then
									v76[v78[2]] = v76[v78[8 - 5]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[1994 - (761 + 1230)]][v76[v78[197 - (80 + 113)]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[1 + 2]][v78[15 - 11]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1 + 2]][v76[v78[1 + 3]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1245 - (965 + 278)]] = v76[v78[1732 - (1391 + 338)]][v76[v78[4]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[4 - 2]][v76[v78[3 + 0]]] = v76[v78[4]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v70 = v78[1 + 2];
								elseif (v79 > (1502 - (496 + 912))) then
									v76[v78[2]] = v76[v78[9 - 6]][v78[1 + 3]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[1332 - (1190 + 140)]] = v76[v78[2 + 1]][v76[v78[722 - (317 + 401)]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[951 - (303 + 646)]][v76[v78[10 - 7]]] = v76[v78[1736 - (1675 + 57)]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[7 - 4]] + v78[4];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[979 - (338 + 639)]] = v76[v78[382 - (320 + 59)]][v76[v78[4]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[735 - (628 + 104)]][v78[4]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1894 - (439 + 1452)]][v78[4]];
									v70 = v70 + (1948 - (105 + 1842));
									v78 = v66[v70];
									v76[v78[2]][v76[v78[3]]] = v76[v78[4]];
									v70 = v70 + (4 - 3);
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[14 - 11]] + v78[1 + 3];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[2 + 1]][v76[v78[1168 - (274 + 890)]]];
								else
									v76[v78[2 + 0]] = v76[v78[3 + 0]][v78[2 + 2]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3 - 0]][v78[823 - (731 + 88)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[1 + 2]][v76[v78[5 - 1]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[5 - 3]] = v76[v78[3]] + v76[v78[11 - 7]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2]][v76[v78[3 + 0]]] = v76[v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v70 = v78[1 + 2];
								end
							elseif (v79 <= (66 + 31)) then
								if (v79 == 96) then
									local v1672 = 0;
									while true do
										if (v1672 == (161 - (139 + 19))) then
											v76[v78[2]] = v76[v78[3]] + v78[1 + 3];
											v70 = v70 + (1994 - (1687 + 306));
											v78 = v66[v70];
											v1672 = 14 - 10;
										end
										if ((v1672 == (1155 - (1018 + 136))) or (4357 < 2223)) then
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v1672 = 8 - 6;
										end
										if (v1672 == 0) then
											v76[v78[817 - (117 + 698)]] = v76[v78[484 - (305 + 176)]][v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v1672 = 1 + 0;
										end
										if ((1133 <= 2724) and (v1672 == 6)) then
											v76[v78[2]] = v78[3];
											break;
										end
										if (v1672 == (2 - 0)) then
											v76[v78[2 + 0]][v76[v78[5 - 2]]] = v76[v78[8 - 4]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v1672 = 263 - (159 + 101);
										end
										if (v1672 == (24 - 19)) then
											v76[v78[2]] = v76[v78[10 - 7]][v76[v78[2 + 2]]];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v1672 = 6;
										end
										if ((7 - 3) == v1672) then
											v76[v78[1 + 1]] = v76[v78[269 - (112 + 154)]] + v78[9 - 5];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1672 = 5;
										end
									end
								else
									local v1673 = v78[33 - (21 + 10)];
									v76[v1673](v13(v76, v1673 + (1720 - (531 + 1188)), v71));
								end
							elseif ((3993 >= 657) and (v79 == (84 + 14))) then
								local v1674 = 663 - (96 + 567);
								local v1675;
								while true do
									if ((3084 > 266) and (v1674 == (7 - 1))) then
										v76[v1675] = v76[v1675](v13(v76, v1675 + 1 + 0, v78[10 - 7]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1697 - (867 + 828)]][v78[3]] = v76[v78[8 - 4]];
										v1674 = 25 - 18;
									end
									if (v1674 == 5) then
										v76[v78[2]] = v78[6 - 3];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v1675 = v78[1 + 1];
										v1674 = 10 - 4;
									end
									if (v1674 == (771 - (134 + 637))) then
										v1675 = nil;
										v76[v78[2]] = v78[1 + 2];
										v70 = v70 + (1158 - (775 + 382));
										v78 = v66[v70];
										v1674 = 1 - 0;
									end
									if (v1674 == (609 - (45 + 562))) then
										v76[v1675] = v76[v1675](v13(v76, v1675 + (863 - (545 + 317)), v78[3 - 0]));
										v70 = v70 + (1027 - (763 + 263));
										v78 = v66[v70];
										v76[v78[1 + 1]][v78[3]] = v76[v78[4]];
										v1674 = 3;
									end
									if (v1674 == (1751 - (512 + 1238))) then
										v76[v78[1596 - (272 + 1322)]] = v78[5 - 2];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1675 = v78[2];
										v1674 = 1248 - (533 + 713);
									end
									if (v1674 == (31 - (14 + 14))) then
										v70 = v70 + (826 - (499 + 326));
										v78 = v66[v70];
										v76[v78[3 - 1]] = v76[v78[427 - (104 + 320)]];
										v70 = v70 + (1998 - (1929 + 68));
										v1674 = 4;
									end
									if (v1674 == (1330 - (1206 + 117))) then
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[3]];
										break;
									end
									if (v1674 == 4) then
										v78 = v66[v70];
										v76[v78[1594 - (683 + 909)]] = v78[9 - 6];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v1674 = 782 - (772 + 5);
									end
								end
							else
								local v1676 = 1427 - (19 + 1408);
								while true do
									if ((290 - (134 + 154)) == v1676) then
										v76[v78[2 - 0]] = v76[v78[9 - 6]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1676 = 3;
									end
									if (((1 + 0) == v1676) or (3967 == 944)) then
										v76[v78[2]] = v76[v78[3 + 0]][v78[206 - (10 + 192)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1676 = 49 - (13 + 34);
									end
									if (v1676 == (1289 - (342 + 947))) then
										v76[v78[2]] = v76[v78[3]][v76[v78[16 - 12]]];
										v70 = v70 + (1709 - (119 + 1589));
										v78 = v66[v70];
										v1676 = 1;
									end
									if (v1676 == (6 - 3)) then
										v76[v78[2 - 0]][v76[v78[555 - (545 + 7)]]] = v76[v78[10 - 6]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1676 = 4;
									end
									if (v1676 == (2 + 2)) then
										v76[v78[1705 - (494 + 1209)]] = v78[7 - 4];
										break;
									end
								end
							end
						elseif ((1184 == 1184) and (v79 <= 102)) then
							if (v79 <= 100) then
								local v446;
								local v447, v448;
								local v449;
								v76[v78[1000 - (197 + 801)]] = v59[v78[5 - 2]];
								v70 = v70 + (4 - 3);
								v78 = v66[v70];
								v76[v78[956 - (919 + 35)]] = v76[v78[3 + 0]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[469 - (369 + 98)]] = v78[1118 - (400 + 715)];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v449 = v78[1 + 1];
								v447, v448 = v69(v76[v449](v13(v76, v449 + (1326 - (744 + 581)), v78[2 + 1])));
								v71 = (v448 + v449) - (1623 - (653 + 969));
								v446 = 0 - 0;
								for v983 = v449, v71 do
									local v984 = 1631 - (12 + 1619);
									while true do
										if (v984 == 0) then
											v446 = v446 + (164 - (103 + 60));
											v76[v983] = v447[v446];
											break;
										end
									end
								end
								v70 = v70 + (4 - 3);
								v78 = v66[v70];
								v449 = v78[2];
								v76[v449] = v76[v449](v13(v76, v449 + (4 - 3), v71));
								v70 = v70 + (4 - 3);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1665 - (710 + 952)]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1870 - (555 + 1313)]] = v59[v78[3 + 0]];
								v70 = v70 + 1;
								v78 = v66[v70];
								if ((3087 < 4928) and v76[v78[2 + 0]]) then
									v70 = v70 + 1 + 0;
								else
									v70 = v78[1471 - (1261 + 207)];
								end
							elseif (v79 == (353 - (245 + 7))) then
								local v1678 = 747 - (212 + 535);
								while true do
									if (2 == v1678) then
										v78 = v66[v70];
										v76[v78[9 - 7]] = v76[v78[1479 - (905 + 571)]][v78[18 - 14]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1678 = 3 - 0;
									end
									if (v1678 == (15 - 11)) then
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[1466 - (522 + 941)]][v76[v78[1515 - (292 + 1219)]]];
										v70 = v70 + (1113 - (787 + 325));
										v1678 = 15 - 10;
									end
									if (v1678 == 3) then
										v76[v78[2 + 0]][v76[v78[6 - 3]]] = v76[v78[4]];
										v70 = v70 + (535 - (424 + 110));
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[3]] + v78[3 + 1];
										v1678 = 1 + 3;
									end
									if (5 == v1678) then
										v78 = v66[v70];
										v76[v78[314 - (33 + 279)]] = v76[v78[1 + 2]][v78[1357 - (1338 + 15)]];
										v70 = v70 + (1424 - (528 + 895));
										v78 = v66[v70];
										v1678 = 6;
									end
									if (v1678 == 0) then
										v76[v78[1 + 1]] = v76[v78[3]] + v78[1928 - (1606 + 318)];
										v70 = v70 + (1820 - (298 + 1521));
										v78 = v66[v70];
										v76[v78[8 - 6]] = v76[v78[3]][v76[v78[314 - (154 + 156)]]];
										v1678 = 1;
									end
									if ((v1678 == (22 - 16)) or (1955 < 1389)) then
										v76[v78[3 - 1]] = v76[v78[3]][v76[v78[1119 - (712 + 403)]]];
										v70 = v70 + (451 - (168 + 282));
										v78 = v66[v70];
										v76[v78[3 - 1]] = v59[v78[3 + 0]];
										break;
									end
									if ((v1678 == 1) or (4751 == 288)) then
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[1 + 2]][v78[4]];
										v70 = v70 + (2 - 1);
										v1678 = 1453 - (1242 + 209);
									end
								end
							else
								local v1679;
								local v1680, v1681;
								local v1682;
								v76[v78[681 - (20 + 659)]] = v76[v78[2 + 1]] + v78[4];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[4 - 1]][v76[v78[7 - 3]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[621 - (427 + 192)]] = v76[v78[3]][v78[8 - 4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[1950 - (1427 + 520)]][v76[v78[3 + 1]]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[2 + 0]] = v59[v78[1235 - (712 + 520)]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[1348 - (565 + 781)]] = v76[v78[568 - (35 + 530)]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[6 - 4]] = v76[v78[1381 - (1330 + 48)]] + v78[4];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[4 - 1]][v78[17 - 13]];
								v70 = v70 + (1170 - (854 + 315));
								v78 = v66[v70];
								v1682 = v78[6 - 4];
								v1680, v1681 = v69(v76[v1682](v13(v76, v1682 + 1, v78[1 + 2])));
								v71 = (v1681 + v1682) - 1;
								v1679 = 44 - (31 + 13);
								for v4280 = v1682, v71 do
									v1679 = v1679 + (1 - 0);
									v76[v4280] = v1680[v1679];
								end
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v1682 = v78[2 + 0];
								v76[v1682] = v76[v1682](v13(v76, v1682 + (564 - (281 + 282)), v71));
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2 + 0]][v76[v78[3]]] = v76[v78[953 - (216 + 733)]];
								v70 = v70 + (1848 - (137 + 1710));
								v78 = v66[v70];
								v76[v78[5 - 3]] = v78[3];
								v70 = v70 + (539 - (100 + 438));
								v78 = v66[v70];
								v70 = v78[1368 - (205 + 1160)];
							end
						elseif (v79 <= 104) then
							if (v79 > (70 + 33)) then
								v76[v78[2 + 0]] = v78[3] / v78[1309 - (535 + 770)];
							else
								local v1706 = 0 + 0;
								while true do
									if (v1706 == (2 + 0)) then
										v78 = v66[v70];
										v76[v78[1996 - (211 + 1783)]] = v76[v78[1 + 2]][v76[v78[1433 - (1236 + 193)]]];
										v70 = v70 + (911 - (793 + 117));
										v78 = v66[v70];
										v1706 = 1895 - (1607 + 285);
									end
									if ((3741 > 1954) and (v1706 == 0)) then
										v76[v78[2]] = v76[v78[863 - (747 + 113)]][v78[1980 - (80 + 1896)]];
										v70 = v70 + (4 - 3);
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[3 + 0]][v76[v78[9 - 5]]];
										v1706 = 1;
									end
									if ((v1706 == (1 + 0)) or (4241 <= 3420)) then
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[2 + 1]][v78[2 + 2]];
										v70 = v70 + (2 - 1);
										v1706 = 456 - (246 + 208);
									end
									if (v1706 == 3) then
										v76[v78[1894 - (614 + 1278)]][v76[v78[2 + 1]]] = v76[v78[318 - (249 + 65)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[6 - 3];
										break;
									end
								end
							end
						elseif (v79 > (1380 - (726 + 549))) then
							local v1707;
							local v1708, v1709;
							local v1710;
							v76[v78[2]] = v59[v78[3 + 0]];
							v70 = v70 + (1425 - (916 + 508));
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[3]];
							v70 = v70 + (3 - 2);
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[3]] + v78[4];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[325 - (140 + 183)]] = v76[v78[3]][v78[4]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v1710 = v78[566 - (297 + 267)];
							v1708, v1709 = v69(v76[v1710](v13(v76, v1710 + 1 + 0, v78[345 - (37 + 305)])));
							v71 = (v1709 + v1710) - (1267 - (323 + 943));
							v1707 = 0;
							for v4283 = v1710, v71 do
								local v4284 = 0;
								while true do
									if ((177 < 4821) and (v4284 == (0 + 0))) then
										v1707 = v1707 + (1 - 0);
										v76[v4283] = v1708[v1707];
										break;
									end
								end
							end
							v70 = v70 + (1536 - (394 + 1141));
							v78 = v66[v70];
							v1710 = v78[2 + 0];
							v76[v1710] = v76[v1710](v13(v76, v1710 + 1 + 0, v71));
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2 - 0]][v76[v78[3 - 0]]] = v76[v78[4]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[3]] + v78[4];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 + 0]] = v78[3];
						else
							local v1724 = 529 - (87 + 442);
							local v1725;
							local v1726;
							local v1727;
							local v1728;
							while true do
								if ((807 - (13 + 792)) == v1724) then
									for v7459 = v1725, v71 do
										v1728 = v1728 + 1 + 0;
										v76[v7459] = v1726[v1728];
									end
									break;
								end
								if ((v1724 == (0 + 0)) or (307 > 4114)) then
									v1725 = v78[2 + 0];
									v1726, v1727 = v69(v76[v1725](v13(v76, v1725 + 1, v71)));
									v1724 = 1866 - (1231 + 634);
								end
								if (v1724 == (1767 - (1362 + 404))) then
									v71 = (v1727 + v1725) - (2 - 1);
									v1728 = 0;
									v1724 = 2 + 0;
								end
							end
						end
					elseif (v79 <= (446 - 287)) then
						if (v79 <= 132) then
							if (v79 <= (1135 - (660 + 356))) then
								if ((3879 >= 2127) and (v79 <= (160 - 48))) then
									if (v79 <= (99 + 10)) then
										if ((1574 >= 1507) and (v79 <= (2057 - (1111 + 839)))) then
											local v464 = 951 - (496 + 455);
											while true do
												if (v464 == (698 - (66 + 632))) then
													v76[v78[2 - 0]] = v76[v78[1139 - (441 + 695)]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[5 - 3]] = v76[v78[5 - 2]][v76[v78[19 - 15]]];
													v464 = 1 + 0;
												end
												if (v464 == (1842 - (286 + 1552))) then
													v70 = v70 + (1278 - (1016 + 261));
													v78 = v66[v70];
													v76[v78[1322 - (708 + 612)]] = v76[v78[3]] + v78[4];
													v70 = v70 + (2 - 1);
													v464 = 5;
												end
												if ((1416 < 3845) and ((2 + 1) == v464)) then
													v76[v78[381 - (113 + 266)]] = v76[v78[1173 - (979 + 191)]][v76[v78[6 - 2]]];
													v70 = v70 + (1736 - (339 + 1396));
													v78 = v66[v70];
													v76[v78[1 + 1]][v76[v78[3 + 0]]] = v76[v78[7 - 3]];
													v464 = 4 + 0;
												end
												if ((1 + 1) == v464) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[351 - (187 + 160)]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v464 = 6 - 3;
												end
												if ((17 - 12) == v464) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[1 + 2]][v76[v78[12 - 8]]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v464 = 1 + 5;
												end
												if (v464 == (1 + 0)) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[3 - 1]] = v76[v78[331 - (56 + 272)]][v78[3 + 1]];
													v70 = v70 + 1;
													v464 = 2 + 0;
												end
												if (v464 == (14 - 8)) then
													v76[v78[2 + 0]] = v78[643 - (455 + 185)];
													break;
												end
											end
										elseif (v79 > 108) then
											local v1729 = 0;
											while true do
												if (v1729 == (789 - (757 + 31))) then
													v76[v78[2001 - (762 + 1237)]] = v59[v78[5 - 2]];
													v70 = v70 + (270 - (265 + 4));
													v78 = v66[v70];
													v1729 = 4 - 2;
												end
												if ((3 + 1) == v1729) then
													v76[v78[3 - 1]][v76[v78[8 - 5]]] = v76[v78[1 + 3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v1729 = 13 - 8;
												end
												if (v1729 == (10 - 5)) then
													v76[v78[3 - 1]] = v78[1737 - (1691 + 43)];
													break;
												end
												if (v1729 == 3) then
													v76[v78[2]] = v76[v78[3 + 0]][v76[v78[12 - 8]]];
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v1729 = 14 - 10;
												end
												if (v1729 == (176 - (127 + 49))) then
													v76[v78[1682 - (281 + 1399)]] = v76[v78[1662 - (184 + 1475)]][v78[4 - 0]];
													v70 = v70 + (2 - 1);
													v78 = v66[v70];
													v1729 = 2 - 1;
												end
												if (v1729 == (2 + 0)) then
													v76[v78[2 + 0]] = v76[v78[1294 - (260 + 1031)]][v78[4]];
													v70 = v70 + (1178 - (313 + 864));
													v78 = v66[v70];
													v1729 = 695 - (655 + 37);
												end
											end
										else
											local v1730;
											local v1731;
											local v1732;
											v76[v78[2 + 0]] = #v76[v78[4 - 1]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v59[v78[6 - 3]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v1732 = v78[2 + 0];
											v76[v1732] = v76[v1732]();
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[772 - (383 + 387)]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1732 = v78[1 + 1];
											v1731 = v76[v1732];
											v1730 = v76[v1732 + 1 + 1];
											if ((4462 <= 4930) and (v1730 > (0 - 0))) then
												if (v1731 > v76[v1732 + 1 + 0]) then
													v70 = v78[1 + 2];
												else
													v76[v1732 + 3] = v1731;
												end
											elseif (v1731 < v76[v1732 + (511 - (304 + 206))]) then
												v70 = v78[3];
											else
												v76[v1732 + 3] = v1731;
											end
										end
									elseif ((4991 >= 4050) and (v79 <= 110)) then
										local v465 = 225 - (182 + 43);
										while true do
											if (v465 == (778 - (264 + 511))) then
												v76[v78[1 + 1]][v76[v78[6 - 3]]] = v76[v78[985 - (128 + 853)]];
												v70 = v70 + (1703 - (1635 + 67));
												v78 = v66[v70];
												v76[v78[1 + 1]] = v76[v78[2 + 1]] + v78[4];
												v465 = 201 - (131 + 66);
											end
											if ((4612 >= 1236) and (v465 == 2)) then
												v78 = v66[v70];
												v76[v78[6 - 4]] = v76[v78[14 - 11]][v76[v78[4]]];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v465 = 3;
											end
											if (v465 == (1 + 0)) then
												v70 = v70 + (1 - 0);
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[6 - 2]];
												v70 = v70 + 1;
												v465 = 1607 - (306 + 1299);
											end
											if ((362 < 4273) and (v465 == 4)) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[1 + 1]] = v78[7 - 4];
												break;
											end
											if ((v465 == (789 - (671 + 118))) or (3670 >= 4697)) then
												v76[v78[7 - 5]] = v76[v78[79 - (73 + 3)]][v76[v78[11 - 7]]];
												v70 = v70 + (4 - 3);
												v78 = v66[v70];
												v76[v78[4 - 2]] = v76[v78[1758 - (1668 + 87)]][v78[4]];
												v465 = 1 + 0;
											end
										end
									elseif (v79 > (2010 - (296 + 1603))) then
										local v1743;
										local v1744;
										local v1745;
										local v1746;
										local v1747;
										local v1748;
										local v1749;
										v76[v78[108 - (79 + 27)]] = v76[v78[3 + 0]];
										v70 = v70 + (1008 - (700 + 307));
										v78 = v66[v70];
										v76[v78[2 + 0]] = v78[1802 - (1477 + 322)];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[3 + 0]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1749 = v78[2];
										v76[v1749] = v76[v1749]();
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v1749 = v78[2 + 0];
										v71 = (v1749 + v77) - (4 - 3);
										for v4326 = v1749, v71 do
											local v4327 = 0 - 0;
											while true do
												if ((v4327 == (0 + 0)) or (269 >= 4996)) then
													v1748 = v72[v4326 - v1749];
													v76[v4326] = v1748;
													break;
												end
											end
										end
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v1749 = v78[2 - 0];
										do
											return v76[v1749](v13(v76, v1749 + (1 - 0), v71));
										end
										v70 = v70 + 1;
										v78 = v66[v70];
										v1749 = v78[1788 - (20 + 1766)];
										do
											return v13(v76, v1749, v71);
										end
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v1749 = v78[2];
										v1747 = {};
										for v4328 = 810 - (88 + 721), #v75 do
											v1746 = v75[v4328];
											for v5019 = 0, #v1746 do
												local v5020 = 0 + 0;
												while true do
													if (v5020 == (0 + 0)) then
														v1745 = v1746[v5019];
														v1744 = v1745[1];
														v5020 = 1;
													end
													if (v5020 == (1 + 0)) then
														v1743 = v1745[2];
														if (((v1744 == v76) and (v1743 >= v1749)) or (1690 == 310)) then
															v1747[v1743] = v1744[v1743];
															v1745[1 + 0] = v1747;
														end
														break;
													end
												end
											end
										end
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										do
											return;
										end
									else
										v76[v78[3 - 1]] = v76[v78[440 - (93 + 344)]][v76[v78[1217 - (960 + 253)]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[8 - 5]][v78[4]];
										v70 = v70 + (1417 - (74 + 1342));
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[477 - (33 + 441)]][v78[11 - 7]];
										v70 = v70 + (1420 - (64 + 1355));
										v78 = v66[v70];
										v76[v78[2 - 0]][v76[v78[14 - (5 + 6)]]] = v76[v78[4]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[449 - (369 + 77)]] + v78[1 + 3];
										v70 = v70 + (739 - (438 + 300));
										v78 = v66[v70];
										v76[v78[2]] = v78[297 - (50 + 244)];
									end
								elseif (v79 <= 115) then
									if ((v79 <= (1314 - (95 + 1106))) or (3454 == 4628)) then
										local v466;
										local v467, v468;
										local v469;
										v76[v78[3 - 1]] = v76[v78[14 - 11]][v76[v78[1900 - (1741 + 155)]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v59[v78[8 - 5]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[5 - 2]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[2 + 1]] + v78[9 - 5];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[1779 - (1263 + 514)]] = v76[v78[500 - (73 + 424)]][v78[10 - 6]];
										v70 = v70 + (309 - (93 + 215));
										v78 = v66[v70];
										v469 = v78[6 - 4];
										v467, v468 = v69(v76[v469](v13(v76, v469 + (1936 - (1756 + 179)), v78[1682 - (550 + 1129)])));
										v71 = (v468 + v469) - 1;
										v466 = 107 - (57 + 50);
										for v985 = v469, v71 do
											v466 = v466 + (630 - (30 + 599));
											v76[v985] = v467[v466];
										end
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v469 = v78[2];
										v76[v469](v13(v76, v469 + (1 - 0), v71));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[920 - (794 + 124)]] = v76[v78[1 + 2]] + v78[4];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[3 - 1]] = v76[v78[3]][v76[v78[1931 - (1299 + 628)]]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										do
											return;
										end
									elseif (v79 == 114) then
										v76[v78[5 - 3]] = v59[v78[3 + 0]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[1447 - (335 + 1110)]] = v76[v78[3 + 0]][v78[13 - 9]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[334 - (268 + 64)]] = v76[v78[2 + 1]][v76[v78[1282 - (243 + 1035)]]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[2]][v76[v78[13 - 10]]] = v76[v78[16 - 12]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[2 + 1]] + v78[4 + 0];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[103 - (90 + 10)]] + v78[4];
										v70 = v70 + (805 - (209 + 595));
										v78 = v66[v70];
										v76[v78[807 - (603 + 202)]] = v76[v78[2 + 1]][v76[v78[12 - 8]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[8 - 5]][v78[1 + 3]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[8 - 6]] = v59[v78[282 - (174 + 105)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[6 - 4]] = v76[v78[916 - (532 + 381)]][v78[4 + 0]];
										v70 = v70 + (840 - (137 + 702));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v76[v78[10 - 6]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]][v76[v78[10 - 7]]] = v76[v78[1890 - (1819 + 67)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[1 + 2]] + v78[1361 - (259 + 1098)];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v78[1 + 2];
									else
										local v1795 = 0;
										while true do
											if (((0 - 0) == v1795) or (3493 < 212)) then
												v76[v78[1 + 1]] = v76[v78[3]][v76[v78[4]]];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v1795 = 4 - 3;
											end
											if (v1795 == 2) then
												v76[v78[2]] = v76[v78[1709 - (667 + 1039)]] + v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1795 = 3;
											end
											if (v1795 == (1022 - (274 + 745))) then
												v76[v78[2 + 0]] = v76[v78[2 + 1]] + v78[434 - (288 + 142)];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1795 = 1310 - (301 + 1005);
											end
											if (v1795 == (1 + 0)) then
												v76[v78[4 - 2]][v76[v78[3]]] = v76[v78[1877 - (674 + 1199)]];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v1795 = 2 + 0;
											end
											if (v1795 == (11 - 7)) then
												v76[v78[8 - 6]] = v78[1 + 2];
												v70 = v70 + (446 - (92 + 353));
												v78 = v66[v70];
												v1795 = 5 + 0;
											end
											if (v1795 == (12 - 7)) then
												v70 = v78[5 - 2];
												break;
											end
										end
									end
								elseif (v79 <= (332 - 215)) then
									if (v79 == 116) then
										v76[v78[2 + 0]] = v76[v78[3]][v78[6 - 2]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[12 - 9]][v78[4 + 0]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[267 - (34 + 231)]] = v76[v78[1320 - (930 + 387)]][v76[v78[4 + 0]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]][v76[v78[8 - 5]]] = v76[v78[701 - (389 + 308)]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[4 - 2]] = v78[8 - 5];
									else
										local v1807 = 0 + 0;
										local v1808;
										local v1809;
										local v1810;
										local v1811;
										while true do
											if (v1807 == 5) then
												v1811 = v78[324 - (125 + 197)];
												v76[v1811] = v76[v1811](v13(v76, v1811 + (998 - (339 + 658)), v71));
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v76[v78[3 - 1]][v76[v78[1351 - (743 + 605)]]] = v76[v78[4 + 0]];
												v1807 = 1 + 5;
											end
											if (v1807 == 7) then
												v76[v78[7 - 5]] = v76[v78[8 - 5]][v76[v78[3 + 1]]];
												break;
											end
											if (v1807 == (249 - (197 + 52))) then
												v1808 = nil;
												v1809, v1810 = nil;
												v1811 = nil;
												v76[v78[3 - 1]] = v59[v78[6 - 3]];
												v70 = v70 + 1 + 0;
												v1807 = 1 + 0;
											end
											if ((1 - 0) == v1807) then
												v78 = v66[v70];
												v76[v78[6 - 4]] = v76[v78[6 - 3]];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[2 - 0]] = v76[v78[1100 - (97 + 1000)]] + v78[14 - 10];
												v1807 = 1847 - (143 + 1702);
											end
											if (v1807 == (5 - 2)) then
												v76[v78[371 - (40 + 329)]] = v76[v78[3 + 0]][v78[2 + 2]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1811 = v78[2 - 0];
												v1809, v1810 = v69(v76[v1811](v13(v76, v1811 + 1 + 0, v78[68 - (9 + 56)])));
												v1807 = 588 - (531 + 53);
											end
											if (v1807 == (6 + 0)) then
												v70 = v70 + (774 - (89 + 684));
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3 + 0]] + v78[2 + 2];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v1807 = 11 - 4;
											end
											if (v1807 == 4) then
												v71 = (v1810 + v1811) - (1 + 0);
												v1808 = 0 + 0;
												for v7468 = v1811, v71 do
													v1808 = v1808 + (614 - (238 + 375));
													v76[v7468] = v1809[v1808];
												end
												v70 = v70 + 1;
												v78 = v66[v70];
												v1807 = 5 + 0;
											end
											if ((192 < 4721) and (v1807 == (2 - 0))) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2 + 0]] = v76[v78[8 - 5]] + v78[10 - 6];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1807 = 8 - 5;
											end
										end
									end
								elseif (v79 > (256 - 138)) then
									v76[v78[7 - 5]] = v76[v78[3 - 0]][v78[4 + 0]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[2 + 1]][v76[v78[466 - (428 + 34)]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1 + 1]][v76[v78[4 - 1]]] = v76[v78[4]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[921 - (223 + 695)]] + v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[6 - 4]] = v76[v78[514 - (329 + 182)]] + v78[1 + 3];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v78[1 + 2];
								else
									v70 = v78[2 + 1];
								end
							elseif (v79 <= (266 - 141)) then
								if (v79 <= (164 - 42)) then
									if (v79 <= (1320 - (177 + 1023))) then
										v76[v78[2]] = v76[v78[3]][v78[7 - 3]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[1468 - (120 + 1345)]][v76[v78[341 - (8 + 329)]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[127 - (19 + 106)]][v76[v78[10 - 7]]] = v76[v78[4]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[8 - 5]] + v78[10 - 6];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[3 - 1]] = v76[v78[1 + 2]] + v78[1507 - (957 + 546)];
										v70 = v70 + (4 - 3);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[2 + 1]][v76[v78[2 + 2]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[706 - (227 + 476)]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[3 - 1]] = v76[v78[3]][v78[6 - 2]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2]][v76[v78[3]]] = v76[v78[7 - 3]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[956 - (166 + 788)]] = v76[v78[989 - (21 + 965)]] + v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[698 - (127 + 569)]] = v76[v78[3 + 0]][v76[v78[2 + 2]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[4 - 1]][v78[3 + 1]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[1 + 2]][v78[1296 - (1162 + 130)]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2]][v76[v78[3 + 0]]] = v76[v78[4]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[939 - (889 + 47)]] + v78[4];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1266 - (1153 + 111)]] = v78[3 - 0];
									elseif ((v79 == (66 + 55)) or (3778 < 1624)) then
										local v1824 = v78[2 + 0];
										do
											return v76[v1824](v13(v76, v1824 + 1 + 0, v71));
										end
									else
										local v1825;
										local v1826, v1827;
										local v1828;
										v76[v78[1 + 1]] = v59[v78[1 + 2]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[98 - (23 + 73)]] = v76[v78[3]] + v78[289 - (26 + 259)];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[10 - 7]][v78[1633 - (1094 + 535)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v1828 = v78[2];
										v1826, v1827 = v69(v76[v1828](v13(v76, v1828 + (1877 - (1554 + 322)), v78[1428 - (989 + 436)])));
										v71 = (v1827 + v1828) - (1179 - (816 + 362));
										v1825 = 0 - 0;
										for v4330 = v1828, v71 do
											local v4331 = 0 - 0;
											while true do
												if (v4331 == (0 - 0)) then
													v1825 = v1825 + (1 - 0);
													v76[v4330] = v1826[v1825];
													break;
												end
											end
										end
										v70 = v70 + 1;
										v78 = v66[v70];
										v1828 = v78[2];
										v76[v1828](v13(v76, v1828 + 1, v71));
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[8 - 6]] = v76[v78[1 + 2]] + v78[767 - (86 + 677)];
									end
								elseif ((v79 <= (76 + 47)) or (299 <= 175)) then
									local v506;
									v76[v78[1 + 1]] = v76[v78[1029 - (263 + 763)]][v76[v78[2 + 2]]];
									v70 = v70 + (859 - (649 + 209));
									v78 = v66[v70];
									v76[v78[8 - 6]] = v76[v78[734 - (643 + 88)]] + v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1772 - (54 + 1715)]][v76[v78[15 - 11]]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v506 = v78[2];
									v76[v506] = v76[v506](v76[v506 + (1 - 0)]);
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 + 0]][v76[v78[1 + 2]]] = v76[v78[15 - 11]];
									v70 = v70 + (1384 - (132 + 1251));
									v78 = v66[v70];
									v70 = v78[3 + 0];
								elseif ((v79 > (306 - 182)) or (427 == 2174)) then
									if (v78[2 + 0] < v76[v78[462 - (185 + 273)]]) then
										v70 = v70 + 1;
									else
										v70 = v78[1 + 2];
									end
								else
									local v1839 = 0 - 0;
									while true do
										if (v1839 == (0 + 0)) then
											v76[v78[1226 - (361 + 863)]] = v78[8 - 5] ~= 0;
											v70 = v70 + 1;
											break;
										end
									end
								end
							elseif ((v79 <= (1455 - (443 + 884))) or (2221 == 4816)) then
								if (v79 <= (301 - 175)) then
									v76[v78[2]] = v76[v78[1 + 2]][v76[v78[5 - 1]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[6 - 3]][v78[751 - (16 + 731)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3 + 0]][v78[4]];
									v70 = v70 + (761 - (527 + 233));
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[6 - 3]][v76[v78[4 + 0]]];
									v70 = v70 + (1786 - (1107 + 678));
									v78 = v66[v70];
									v76[v78[2 + 0]][v76[v78[3 + 0]]] = v76[v78[54 - (4 + 46)]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[5 - 2]] + v78[4];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[3 - 1]] = v78[3];
								elseif (v79 > (203 - 76)) then
									v76[v78[1398 - (1262 + 134)]] = v76[v78[6 - 3]][v76[v78[1 + 3]]];
								elseif (v76[v78[2 + 0]] <= v76[v78[799 - (383 + 412)]]) then
									v70 = v70 + 1 + 0;
								else
									v70 = v78[1 + 2];
								end
							elseif ((v79 <= (60 + 70)) or (3086 == 637)) then
								if (v79 == (43 + 86)) then
									local v1842 = 0 + 0;
									while true do
										if (v1842 == (1 - 0)) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[5 - 3]] = v76[v78[3]][v76[v78[4 - 0]]];
											v70 = v70 + (2 - 1);
											v1842 = 1 + 1;
										end
										if (0 == v1842) then
											v76[v78[709 - (667 + 40)]] = v76[v78[1313 - (436 + 874)]][v76[v78[1610 - (762 + 844)]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2 - 0]] = v76[v78[6 - 3]][v78[1 + 3]];
											v1842 = 1 + 0;
										end
										if (v1842 == (478 - (209 + 267))) then
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[5 - 2]][v78[11 - 7]];
											v70 = v70 + (1712 - (1611 + 100));
											v78 = v66[v70];
											v1842 = 3 + 0;
										end
										if (v1842 == 4) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v70 = v78[3];
											break;
										end
										if (v1842 == (787 - (14 + 770))) then
											v76[v78[2]] = v76[v78[1787 - (1165 + 619)]][v76[v78[5 - 1]]];
											v70 = v70 + (382 - (229 + 152));
											v78 = v66[v70];
											v76[v78[2]][v76[v78[3]]] = v76[v78[198 - (107 + 87)]];
											v1842 = 6 - 2;
										end
									end
								else
									v76[v78[1 + 1]] = v29(v67[v78[3 + 0]], nil, v60);
								end
							elseif ((1200 <= 2705) and (v79 > 131)) then
								v76[v78[9 - 7]] = v76[v78[11 - 8]] + v78[4 + 0];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[16 - (13 + 1)]] = v76[v78[3 + 0]][v76[v78[3 + 1]]];
								v70 = v70 + (1059 - (987 + 71));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]][v78[4]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]][v76[v78[4 - 0]]];
								v70 = v70 + (700 - (514 + 185));
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3]][v78[7 - 3]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[7 - 5]] = v76[v78[1507 - (771 + 733)]][v78[4]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[3 - 1]][v76[v78[1170 - (407 + 760)]]] = v76[v78[3 + 1]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3 + 0]] + v78[1858 - (169 + 1685)];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v78[394 - (41 + 350)];
							else
								v76[v78[5 - 3]] = v76[v78[7 - 4]][v78[4]];
								v70 = v70 + (4 - 3);
								v78 = v66[v70];
								v76[v78[4 - 2]] = v76[v78[2 + 1]][v76[v78[891 - (790 + 97)]]];
								v70 = v70 + (4 - 3);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1 + 2]][v76[v78[2 + 2]]];
								v70 = v70 + (246 - (235 + 10));
								v78 = v66[v70];
								v76[v78[2 + 0]][v76[v78[5 - 2]]] = v76[v78[1187 - (887 + 296)]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1047 - (512 + 533)]] = v76[v78[1427 - (662 + 762)]] + v78[681 - (334 + 343)];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[6 - 4]] = v76[v78[492 - (198 + 291)]][v76[v78[1 + 3]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[576 - (141 + 433)]] = v76[v78[14 - 11]][v78[3 + 1]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[779 - (227 + 550)]] = v76[v78[3]][v76[v78[9 - 5]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								if not v76[v78[5 - 3]] then
									v70 = v70 + (104 - (72 + 31));
								else
									v70 = v78[351 - (89 + 259)];
								end
							end
						elseif (v79 <= (127 + 18)) then
							if (v79 <= (122 + 16)) then
								if ((3960 >= 1936) and (v79 <= 135)) then
									if (v79 <= 133) then
										local v529;
										local v530, v531;
										local v532;
										v76[v78[1 + 1]] = v76[v78[5 - 2]][v78[3 + 1]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[3 - 1]] = v76[v78[1406 - (1333 + 70)]][v76[v78[4]]];
										v70 = v70 + (1833 - (701 + 1131));
										v78 = v66[v70];
										v76[v78[129 - (55 + 72)]] = v59[v78[3]];
										v70 = v70 + (157 - (99 + 57));
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[2 + 1]];
										v70 = v70 + (1580 - (1243 + 336));
										v78 = v66[v70];
										v76[v78[1331 - (774 + 555)]] = v76[v78[2 + 1]] + v78[4];
										v70 = v70 + (800 - (150 + 649));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[2 + 1]] + v78[5 - 1];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[3 - 1]] = v76[v78[1987 - (1122 + 862)]][v78[7 - 3]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v532 = v78[3 - 1];
										v530, v531 = v69(v76[v532](v13(v76, v532 + 1 + 0, v78[1 + 2])));
										v71 = (v531 + v532) - (744 - (549 + 194));
										v529 = 0;
										for v988 = v532, v71 do
											v529 = v529 + 1 + 0;
											v76[v988] = v530[v529];
										end
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v532 = v78[1 + 1];
										v76[v532] = v76[v532](v13(v76, v532 + (1 - 0), v71));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v76[v78[3]]] = v76[v78[4]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[7 - 5]] = v76[v78[1706 - (453 + 1250)]] + v78[11 - 7];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[577 - (203 + 372)]] = v78[3];
									elseif (v79 > (7 + 127)) then
										local v1874 = 0 - 0;
										while true do
											if ((4889 > 2720) and (v1874 == (1382 - (978 + 404)))) then
												v76[v78[6 - 4]] = v76[v78[3 + 0]][v76[v78[322 - (56 + 262)]]];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v1874 = 115 - (108 + 6);
											end
											if (v1874 == (2 + 1)) then
												v76[v78[2 + 0]] = v76[v78[1955 - (653 + 1299)]] + v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1874 = 4 + 0;
											end
											if (v1874 == (1 + 1)) then
												v76[v78[4 - 2]] = v76[v78[1925 - (1042 + 880)]] + v78[1 + 3];
												v70 = v70 + (1003 - (16 + 986));
												v78 = v66[v70];
												v1874 = 3;
											end
											if (v1874 == (1223 - (700 + 518))) then
												v76[v78[2]] = v78[3];
												break;
											end
											if (v1874 == (3 - 2)) then
												v76[v78[2]][v76[v78[3 - 0]]] = v76[v78[1515 - (617 + 894)]];
												v70 = v70 + (1 - 0);
												v78 = v66[v70];
												v1874 = 460 - (271 + 187);
											end
											if (v1874 == (1588 - (731 + 853))) then
												v76[v78[6 - 4]] = v76[v78[1524 - (199 + 1322)]] + v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1874 = 9 - 4;
											end
										end
									else
										local v1875;
										local v1876, v1877;
										local v1878;
										v76[v78[2 + 0]] = v76[v78[1663 - (1291 + 369)]][v76[v78[4]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v59[v78[2 + 1]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[688 - (561 + 124)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[855 - (25 + 828)]] = v76[v78[7 - 4]] + v78[4];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[592 - (99 + 491)]] = v76[v78[3]] + v78[52 - (18 + 30)];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[3 - 1]] = v76[v78[3]][v78[5 - 1]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v1878 = v78[2];
										v1876, v1877 = v69(v76[v1878](v13(v76, v1878 + 1, v78[9 - 6])));
										v71 = (v1877 + v1878) - (733 - (501 + 231));
										v1875 = 0 + 0;
										for v4332 = v1878, v71 do
											v1875 = v1875 + (1699 - (470 + 1228));
											v76[v4332] = v1876[v1875];
										end
										v70 = v70 + 1;
										v78 = v66[v70];
										v1878 = v78[2];
										v76[v1878] = v76[v1878](v13(v76, v1878 + 1, v71));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]][v76[v78[2 + 1]]] = v76[v78[690 - (537 + 149)]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[5 - 2]] + v78[12 - 8];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[2 + 0]] = v78[3];
									end
								elseif ((619 == 619) and (v79 <= (47 + 89))) then
									v76[v78[2 + 0]] = v59[v78[3]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[1 + 2]][v78[3 + 1]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[582 - (134 + 445)]][v76[v78[7 - 3]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]][v76[v78[11 - 8]]] = v76[v78[264 - (36 + 224)]];
									v70 = v70 + (1861 - (1033 + 827));
									v78 = v66[v70];
									v76[v78[1848 - (1002 + 844)]] = v76[v78[1353 - (1126 + 224)]] + v78[4];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3]] + v78[13 - 9];
									v70 = v70 + (65 - (48 + 16));
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[14 - 11]][v76[v78[12 - 8]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1091 - (910 + 179)]] = v76[v78[3]][v78[7 - 3]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[1381 - (933 + 446)]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1526 - (248 + 1276)]] = v76[v78[3 + 0]][v76[v78[2 + 2]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[6 - 4]] = v76[v78[9 - 6]][v78[4]];
									v70 = v70 + (1546 - (151 + 1394));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[947 - (929 + 15)]][v76[v78[2000 - (1173 + 823)]]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2]][v76[v78[1779 - (482 + 1294)]]] = v76[v78[7 - 3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v78[1309 - (1125 + 181)];
								elseif ((221 == 221) and (v79 > (399 - 262))) then
									local v1895 = 0 + 0;
									while true do
										if ((3995 == 3995) and (v1895 == (8 - 3))) then
											v76[v78[2]] = v76[v78[3]] + v78[1193 - (626 + 563)];
											v70 = v70 + (1251 - (153 + 1097));
											v78 = v66[v70];
											v1895 = 6;
										end
										if (v1895 == (3 - 2)) then
											v76[v78[1 + 1]] = v76[v78[7 - 4]][v76[v78[3 + 1]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v1895 = 1 + 1;
										end
										if (v1895 == 2) then
											v76[v78[2 + 0]] = v76[v78[3 + 0]][v78[1161 - (199 + 958)]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v1895 = 7 - 4;
										end
										if ((1557 < 4004) and (v1895 == (15 - 8))) then
											v76[v78[2]] = v76[v78[1179 - (1169 + 7)]][v76[v78[1877 - (751 + 1122)]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v1895 = 8 + 0;
										end
										if ((v1895 == (2 + 6)) or (2647 == 1725)) then
											v76[v78[1 + 1]] = v78[4 - 1];
											break;
										end
										if (v1895 == 0) then
											v76[v78[1183 - (589 + 592)]] = v76[v78[5 - 2]][v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v1895 = 25 - (13 + 11);
										end
										if ((660 <= 3560) and (v1895 == 6)) then
											v76[v78[2 + 0]] = v76[v78[1 + 2]] + v78[1264 - (684 + 576)];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v1895 = 17 - 10;
										end
										if (v1895 == 3) then
											v76[v78[1 + 1]] = v76[v78[1 + 2]][v76[v78[4]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1895 = 4 - 0;
										end
										if (v1895 == 4) then
											v76[v78[2 + 0]][v76[v78[3 + 0]]] = v76[v78[3 + 1]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v1895 = 2 + 3;
										end
									end
								else
									v76[v78[2]] = v76[v78[1851 - (230 + 1618)]][v78[4 + 0]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3]][v76[v78[207 - (131 + 72)]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[206 - (144 + 60)]] = v76[v78[12 - 9]][v78[4]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[14 - 11]][v76[v78[1 + 3]]];
									v70 = v70 + (1923 - (523 + 1399));
									v78 = v66[v70];
									v76[v78[2 + 0]][v76[v78[407 - (72 + 332)]]] = v76[v78[980 - (269 + 707)]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[3 - 1]] = v76[v78[7 - 4]] + v78[134 - (123 + 7)];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[13 - 10]][v76[v78[4]]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[1090 - (38 + 1050)]] = v76[v78[2 + 1]][v78[4]];
								end
							elseif (v79 <= (56 + 85)) then
								if ((4056 >= 2931) and (v79 <= (76 + 63))) then
									local v576 = 823 - (426 + 397);
									local v577;
									local v578;
									local v579;
									local v580;
									while true do
										if (v576 == 3) then
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[1409 - (751 + 655)]] + v78[4];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[1248 - (39 + 1206)]][v78[4]];
											v576 = 4;
										end
										if (v576 == (15 - 10)) then
											v578 = 841 - (566 + 275);
											for v5024 = v580, v71 do
												local v5025 = 935 - (167 + 768);
												while true do
													if ((v5025 == (0 + 0)) or (4233 <= 2011)) then
														v578 = v578 + (1 - 0);
														v76[v5024] = v577[v578];
														break;
													end
												end
											end
											v70 = v70 + 1;
											v78 = v66[v70];
											v580 = v78[2];
											v576 = 2 + 4;
										end
										if ((4757 > 226) and (v576 == (7 + 0))) then
											v78 = v66[v70];
											v580 = v78[2 - 0];
											v577 = {v76[v580](v13(v76, v580 + 1, v71))};
											v578 = 1683 - (1510 + 173);
											for v5026 = v580, v78[5 - 1] do
												local v5027 = 0 + 0;
												while true do
													if ((v5027 == (253 - (30 + 223))) or (2149 <= 856)) then
														v578 = v578 + (1257 - (300 + 956));
														v76[v5026] = v577[v578];
														break;
													end
												end
											end
											v576 = 130 - (22 + 100);
										end
										if ((74 <= 3438) and (v576 == (2 - 1))) then
											v70 = v70 + (283 - (47 + 235));
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v76[v78[4]]];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v576 = 2 + 0;
										end
										if ((490 - (21 + 465)) == v576) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v580 = v78[2 + 0];
											v577, v579 = v69(v76[v580](v13(v76, v580 + 1 + 0, v78[3 - 0])));
											v71 = (v579 + v580) - (1218 - (553 + 664));
											v576 = 3 + 2;
										end
										if (v576 == (84 - (73 + 5))) then
											v577, v579 = v69(v76[v580](v13(v76, v580 + 1, v71)));
											v71 = (v579 + v580) - (1716 - (1128 + 587));
											v578 = 0;
											for v5028 = v580, v71 do
												local v5029 = 0 - 0;
												while true do
													if (v5029 == (690 - (558 + 132))) then
														v578 = v578 + (2 - 1);
														v76[v5028] = v577[v578];
														break;
													end
												end
											end
											v70 = v70 + 1;
											v576 = 19 - 12;
										end
										if ((v576 == (3 + 5)) or (2322 < 1618)) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[3 + 0]] + v76[v78[4]];
											break;
										end
										if (v576 == (0 - 0)) then
											v577 = nil;
											v578 = nil;
											v577, v579 = nil;
											v580 = nil;
											v76[v78[1 + 1]] = v76[v78[3]];
											v576 = 1;
										end
										if (v576 == 2) then
											v76[v78[2 + 0]] = v59[v78[3]];
											v70 = v70 + (772 - (294 + 477));
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[6 - 3]];
											v70 = v70 + (1 - 0);
											v576 = 3;
										end
									end
								elseif (v79 == 140) then
									v76[v78[1 + 1]] = v76[v78[3 + 0]][v78[4]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[984 - (97 + 885)]] = v76[v78[2 + 1]][v76[v78[6 - 2]]];
									v70 = v70 + (366 - (271 + 94));
									v78 = v66[v70];
									v76[v78[1605 - (777 + 826)]] = v76[v78[2 + 1]][v78[1359 - (117 + 1238)]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[1719 - (686 + 1029)]];
									v70 = v70 + (1357 - (1074 + 282));
									v78 = v66[v70];
									v76[v78[1619 - (1359 + 258)]] = v76[v78[6 - 3]][v76[v78[4]]];
									v70 = v70 + (1936 - (1730 + 205));
									v78 = v66[v70];
									v76[v78[530 - (67 + 461)]][v76[v78[4 - 1]]] = v76[v78[5 - 1]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v78[632 - (129 + 500)];
									v70 = v70 + (1712 - (1157 + 554));
									v78 = v66[v70];
									v70 = v78[3 - 0];
								else
									v76[v78[2]] = v76[v78[3]][v76[v78[4]]];
									v70 = v70 + (608 - (82 + 525));
									v78 = v66[v70];
									v76[v78[2 + 0]][v76[v78[6 - 3]]] = v76[v78[1627 - (948 + 675)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[7 - 4]] + v78[857 - (406 + 447)];
									v70 = v70 + (118 - (91 + 26));
									v78 = v66[v70];
									v76[v78[2]] = v78[10 - 7];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v70 = v78[989 - (968 + 18)];
								end
							elseif (v79 <= (142 + 1)) then
								if ((v79 > (130 + 12)) or (3230 == 2640)) then
									local v1934;
									local v1935, v1936;
									local v1937;
									v76[v78[2]] = v59[v78[5 - 2]];
									v70 = v70 + (268 - (172 + 95));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[9 - 6]];
									v70 = v70 + (266 - (260 + 5));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[8 - 5]] + v78[823 - (265 + 554)];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1573 - (1440 + 131)]] = v76[v78[8 - 5]][v78[4]];
									v70 = v70 + (1396 - (253 + 1142));
									v78 = v66[v70];
									v1937 = v78[2];
									v1935, v1936 = v69(v76[v1937](v13(v76, v1937 + (254 - (133 + 120)), v78[5 - 2])));
									v71 = (v1936 + v1937) - (1957 - (809 + 1147));
									v1934 = 497 - (178 + 319);
									for v4357 = v1937, v71 do
										local v4358 = 0 - 0;
										while true do
											if (v4358 == (0 + 0)) then
												v1934 = v1934 + (1271 - (1255 + 15));
												v76[v4357] = v1935[v1934];
												break;
											end
										end
									end
									v70 = v70 + (1543 - (1221 + 321));
									v78 = v66[v70];
									v1937 = v78[5 - 3];
									v76[v1937](v13(v76, v1937 + 1 + 0, v71));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[11 - 8]] + v78[14 - 10];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3]][v76[v78[4]]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[410 - (204 + 203)]][v78[82 - (48 + 30)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1966 - (1472 + 492)]] = v59[v78[8 - 5]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[613 - (258 + 353)]] = v76[v78[1997 - (1382 + 612)]][v78[4 + 0]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[1 + 2]][v76[v78[11 - 7]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[121 - (35 + 84)]][v76[v78[218 - (75 + 140)]]] = v76[v78[14 - 10]];
									v70 = v70 + (1800 - (923 + 876));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]] + v78[10 - 6];
									v70 = v70 + (813 - (284 + 528));
									v78 = v66[v70];
									v76[v78[1021 - (867 + 152)]] = v78[1109 - (709 + 397)];
								else
									v76[v78[7 - 5]] = v76[v78[39 - (21 + 15)]][v78[4]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[3 - 1]] = v76[v78[1 + 2]][v76[v78[4]]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[9 - 5]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[137 - (97 + 38)]] = v76[v78[83 - (52 + 28)]][v76[v78[2 + 2]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[851 - (59 + 790)]][v76[v78[3]]] = v76[v78[4 + 0]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]] + v78[944 - (467 + 473)];
									v70 = v70 + (4 - 3);
									v78 = v66[v70];
									v76[v78[5 - 3]] = v76[v78[7 - 4]][v76[v78[4]]];
								end
							elseif (v79 == (368 - 224)) then
								v76[v78[2]] = v76[v78[2 + 1]][v78[8 - 4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[11 - 8]][v78[6 - 2]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[1 + 2]][v76[v78[2 + 2]]];
								v70 = v70 + (238 - (58 + 179));
								v78 = v66[v70];
								v76[v78[4 - 2]][v76[v78[1256 - (677 + 576)]]] = v76[v78[2 + 2]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[222 - (88 + 132)]] = v76[v78[3 + 0]] + v78[4];
								v70 = v70 + (4 - 3);
								v78 = v66[v70];
								v76[v78[6 - 4]] = v76[v78[3]][v76[v78[295 - (12 + 279)]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[3 - 1]] = v78[1 + 2];
							else
								v76[v78[949 - (652 + 295)]] = v76[v78[1 + 2]][v78[3 + 1]];
								v70 = v70 + (990 - (848 + 141));
								v78 = v66[v70];
								v76[v78[742 - (372 + 368)]] = v76[v78[2 + 1]][v76[v78[1134 - (542 + 588)]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[821 - (6 + 812)]][v78[1709 - (1599 + 106)]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[2 + 1]][v76[v78[4]]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								if (v76[v78[2]] == v76[v78[6 - 2]]) then
									v70 = v70 + 1 + 0;
								else
									v70 = v78[1 + 2];
								end
							end
						elseif (v79 <= (119 + 33)) then
							if (v79 <= (35 + 113)) then
								if (v79 <= (18 + 128)) then
									local v581 = v78[1 + 1];
									v71 = (v581 + v77) - (1930 - (1690 + 239));
									for v991 = v581, v71 do
										local v992 = v72[v991 - v581];
										v76[v991] = v992;
									end
								elseif (v79 == (503 - 356)) then
									v76[v78[2 + 0]] = v76[v78[6 - 3]][v76[v78[9 - 5]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[7 - 5]] = v76[v78[3]][v78[1872 - (1736 + 132)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[6 - 4]] = v76[v78[13 - 10]][v76[v78[1 + 3]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[34 - (27 + 5)]][v76[v78[1 + 2]]] = v76[v78[3 + 1]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v70 = v78[2 + 1];
								else
									local v2006 = 0 + 0;
									local v2007;
									local v2008;
									local v2009;
									local v2010;
									while true do
										if ((4666 > 2616) and ((1 + 0) == v2006)) then
											v70 = v70 + (1118 - (771 + 346));
											v78 = v66[v70];
											v76[v78[1636 - (1577 + 57)]] = v59[v78[5 - 2]];
											v70 = v70 + (1081 - (684 + 396));
											v78 = v66[v70];
											v76[v78[5 - 3]] = v76[v78[1199 - (700 + 496)]];
											v70 = v70 + 1;
											v2006 = 2 + 0;
										end
										if (v2006 == (260 - (65 + 187))) then
											v76[v78[941 - (827 + 112)]][v76[v78[3]]] = v76[v78[3 + 1]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[5 - 3]] = v76[v78[14 - 11]] + v78[1 + 3];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[1198 - (551 + 645)]] = v76[v78[346 - (166 + 177)]][v76[v78[1860 - (1361 + 495)]]];
											v2006 = 24 - 15;
										end
										if (v2006 == (4 + 2)) then
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[227 - (148 + 76)]][v76[v78[14 - 10]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[5 - 3]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v2006 = 5 + 2;
										end
										if (v2006 == 9) then
											v70 = v70 + (1743 - (735 + 1007));
											v78 = v66[v70];
											v76[v78[281 - (111 + 168)]] = v78[3];
											break;
										end
										if (v2006 == (0 + 0)) then
											v2007 = nil;
											v2008, v2009 = nil;
											v2010 = nil;
											v76[v78[1 + 1]] = v76[v78[6 - 3]][v78[1 + 3]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[1 + 2]][v76[v78[17 - 13]]];
											v2006 = 1 + 0;
										end
										if (v2006 == 3) then
											v2010 = v78[934 - (147 + 785)];
											v2008, v2009 = v69(v76[v2010](v13(v76, v2010 + (667 - (483 + 183)), v78[8 - 5])));
											v71 = (v2009 + v2010) - (1 + 0);
											v2007 = 1911 - (1790 + 121);
											for v7475 = v2010, v71 do
												local v7476 = 0 - 0;
												while true do
													if (v7476 == (1539 - (259 + 1280))) then
														v2007 = v2007 + (1585 - (160 + 1424));
														v76[v7475] = v2008[v2007];
														break;
													end
												end
											end
											v70 = v70 + 1;
											v78 = v66[v70];
											v2006 = 4 + 0;
										end
										if (v2006 == (3 + 4)) then
											v78 = v66[v70];
											v76[v78[772 - (479 + 291)]] = v76[v78[4 - 1]][v78[975 - (569 + 402)]];
											v70 = v70 + (1306 - (635 + 670));
											v78 = v66[v70];
											v76[v78[4 - 2]] = v76[v78[11 - 8]][v76[v78[602 - (42 + 556)]]];
											v70 = v70 + (1402 - (1246 + 155));
											v78 = v66[v70];
											v2006 = 740 - (31 + 701);
										end
										if (v2006 == 5) then
											v76[v78[6 - 4]] = v76[v78[502 - (393 + 106)]] + v78[4];
											v70 = v70 + (1172 - (727 + 444));
											v78 = v66[v70];
											v76[v78[5 - 3]] = v76[v78[2 + 1]][v76[v78[657 - (269 + 384)]]];
											v70 = v70 + (1570 - (598 + 971));
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[2 + 1]][v78[12 - 8]];
											v2006 = 6;
										end
										if ((18 - 14) == v2006) then
											v2010 = v78[2];
											v76[v2010] = v76[v2010](v13(v76, v2010 + (2 - 1), v71));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[1447 - (800 + 645)]][v76[v78[1 + 2]]] = v76[v78[794 - (687 + 103)]];
											v70 = v70 + (1163 - (142 + 1020));
											v78 = v66[v70];
											v2006 = 11 - 6;
										end
										if ((v2006 == (1 + 1)) or (642 >= 1967)) then
											v78 = v66[v70];
											v76[v78[515 - (306 + 207)]] = v76[v78[3]] + v78[1408 - (112 + 1292)];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[954 - (587 + 365)]] = v76[v78[1718 - (829 + 886)]][v78[9 - 5]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v2006 = 3;
										end
									end
								end
							elseif (v79 <= (35 + 115)) then
								if (v79 == (591 - 442)) then
									v76[v78[6 - 4]][v76[v78[3 + 0]]] = v76[v78[2 + 2]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[979 - (613 + 364)]] = v76[v78[3 + 0]] + v78[2 + 2];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v76[v78[4]]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[7 - 5]] = v76[v78[9 - 6]][v78[3 + 1]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v70 = v78[1942 - (1467 + 472)];
								else
									local v2020;
									v76[v78[2 - 0]] = v78[1550 - (1077 + 470)];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v2020 = v78[2];
									v76[v2020] = v76[v2020](v13(v76, v2020 + 1 + 0, v78[13 - 10]));
									v70 = v70 + (430 - (12 + 417));
									v78 = v66[v70];
									v76[v78[4 - 2]][v78[3 + 0]] = v76[v78[4 - 0]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[3 - 1]] = v76[v78[1 + 2]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v78[8 - 5];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1107 - (924 + 181)]] = v78[800 - (263 + 534)];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v2020 = v78[2 + 0];
									v76[v2020] = v76[v2020](v13(v76, v2020 + (1 - 0), v78[8 - 5]));
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[709 - (562 + 145)]][v78[1 + 2]] = v76[v78[2 + 2]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[1 + 2]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2 + 0]] = v78[13 - 10];
								end
							elseif (v79 == (55 + 96)) then
								local v2039;
								local v2040, v2041;
								local v2042;
								v76[v78[2 + 0]] = v76[v78[1879 - (1459 + 417)]][v78[4]];
								v70 = v70 + (287 - (194 + 92));
								v78 = v66[v70];
								v76[v78[1387 - (1057 + 328)]] = v76[v78[8 - 5]][v76[v78[4]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v59[v78[14 - 11]];
								v70 = v70 + (533 - (5 + 527));
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[783 - (342 + 438)]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3 + 0]] + v78[4];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3]][v78[1 + 3]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v2042 = v78[2 - 0];
								v2040, v2041 = v69(v76[v2042](v13(v76, v2042 + 1, v78[15 - (6 + 6)])));
								v71 = (v2041 + v2042) - (2 - 1);
								v2039 = 0 - 0;
								for v4359 = v2042, v71 do
									local v4360 = 0 + 0;
									while true do
										if ((v4360 == (1253 - (206 + 1047))) or (1818 > 2861)) then
											v2039 = v2039 + 1;
											v76[v4359] = v2040[v2039];
											break;
										end
									end
								end
								v70 = v70 + (1113 - (470 + 642));
								v78 = v66[v70];
								v2042 = v78[1 + 1];
								v76[v2042] = v76[v2042](v13(v76, v2042 + (1068 - (552 + 515)), v71));
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]][v76[v78[3]]] = v76[v78[4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[2 + 1]] + v78[3 + 1];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1053 - (701 + 350)]] = v76[v78[3]] + v78[3 + 1];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[3 - 0]][v76[v78[12 - 8]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[4 - 2]] = v76[v78[1 + 2]][v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[7 - 5]] = v76[v78[1349 - (281 + 1065)]][v76[v78[4]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]][v78[18 - 14]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[1213 - (1114 + 97)]] = v76[v78[3 - 0]][v78[1917 - (279 + 1634)]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1282 - (1213 + 67)]] = v76[v78[3]][v76[v78[4]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]][v76[v78[3]]] = v76[v78[195 - (65 + 126)]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1087 - (189 + 896)]] = v76[v78[1 + 2]] + v78[1967 - (1872 + 91)];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[10 - 7]][v76[v78[4 + 0]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[7 - 5]] = v78[79 - (22 + 54)];
							else
								v76[v78[4 - 2]] = v76[v78[7 - 4]][v78[2 + 2]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[1536 - (553 + 981)]] = {};
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]][v76[v78[3]]] = v76[v78[3 + 1]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[1900 - (1320 + 577)]] + v78[853 - (667 + 182)];
								v70 = v70 + (1289 - (1115 + 173));
								v78 = v66[v70];
								v76[v78[3 - 1]] = v76[v78[3 + 0]][v76[v78[1759 - (1375 + 380)]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3]][v78[30 - (12 + 14)]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[4 - 2]] = v59[v78[3]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[4 - 2]] = v76[v78[8 - 5]][v78[5 - 1]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[734 - (354 + 377)]][v76[v78[18 - 14]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]][v76[v78[7 - 4]]] = v76[v78[1986 - (263 + 1719)]];
							end
						elseif (v79 <= 155) then
							if (v79 <= (74 + 79)) then
								local v582 = 0;
								local v583;
								local v584;
								local v585;
								local v586;
								while true do
									if ((v582 == (367 - (335 + 24))) or (96 >= 4985)) then
										v76[v78[953 - (882 + 69)]] = v78[1689 - (657 + 1029)];
										v70 = v70 + (1201 - (685 + 515));
										v78 = v66[v70];
										v70 = v78[1641 - (745 + 893)];
										break;
									end
									if ((4635 > 2118) and (v582 == (1 + 2))) then
										v76[v78[774 - (274 + 498)]] = v76[v78[1 + 2]] + v78[2 + 2];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1608 - (1035 + 571)]] = v76[v78[2 + 1]][v78[2 + 2]];
										v582 = 14 - 10;
									end
									if (v582 == (2 - 1)) then
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[8 - 5]];
										v70 = v70 + (225 - (109 + 115));
										v582 = 1401 - (1047 + 352);
									end
									if (v582 == (1772 - (852 + 913))) then
										v78 = v66[v70];
										v76[v78[2]][v76[v78[3 + 0]]] = v76[v78[1349 - (384 + 961)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v582 = 18 - 10;
									end
									if (v582 == (0 - 0)) then
										v583 = nil;
										v584, v585 = nil;
										v586 = nil;
										v76[v78[7 - 5]] = v59[v78[595 - (591 + 1)]];
										v582 = 1 + 0;
									end
									if (5 == v582) then
										v71 = (v585 + v586) - 1;
										v583 = 0;
										for v5031 = v586, v71 do
											v583 = v583 + (1471 - (218 + 1252));
											v76[v5031] = v584[v583];
										end
										v70 = v70 + 1 + 0;
										v582 = 362 - (321 + 35);
									end
									if ((v582 == (400 - (239 + 155))) or (424 > 2028)) then
										v78 = v66[v70];
										v586 = v78[2 + 0];
										v76[v586] = v76[v586](v13(v76, v586 + (43 - (41 + 1)), v71));
										v70 = v70 + 1;
										v582 = 207 - (80 + 120);
									end
									if (2 == v582) then
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3 + 0]] + v78[4];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v582 = 3;
									end
									if (v582 == (1 + 3)) then
										v70 = v70 + 1;
										v78 = v66[v70];
										v586 = v78[2 + 0];
										v584, v585 = v69(v76[v586](v13(v76, v586 + (4 - 3), v78[6 - 3])));
										v582 = 21 - 16;
									end
								end
							elseif ((2458 >= 292) and (v79 == (256 - 102))) then
								v76[v78[1 + 1]] = v76[v78[1 + 2]] - v76[v78[1 + 3]];
							else
								v76[v78[1228 - (165 + 1061)]] = v76[v78[3]][v78[4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[3 + 0]][v76[v78[1647 - (596 + 1047)]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]][v76[v78[3 + 0]]] = v76[v78[5 - 1]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[740 - (185 + 552)]] + v78[3 + 1];
								v70 = v70 + (602 - (507 + 94));
								v78 = v66[v70];
								v76[v78[8 - 6]] = v76[v78[3]][v76[v78[2 + 2]]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1739 - (569 + 1168)]] = v76[v78[5 - 2]][v78[7 - 3]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[353 - (118 + 233)]] = v76[v78[347 - (279 + 65)]][v78[6 - 2]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[3 - 1]][v76[v78[3]]] = v76[v78[11 - 7]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1820 - (1414 + 404)]] = v76[v78[759 - (347 + 409)]] + v78[3 + 1];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]][v76[v78[4 + 0]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[1581 - (420 + 1158)]][v78[9 - 5]];
								v70 = v70 + (612 - (406 + 205));
								v78 = v66[v70];
								v76[v78[6 - 4]] = v76[v78[2 + 1]][v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]][v76[v78[7 - 4]]] = v76[v78[65 - (28 + 33)]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[1010 - (858 + 149)]] + v78[1 + 3];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1509 - (829 + 678)]] = v76[v78[3]] + v78[3 + 1];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1218 - (143 + 1073)]] = v78[1818 - (898 + 917)];
							end
						elseif (v79 <= (306 - 149)) then
							if (v79 > 156) then
								v76[v78[1 + 1]] = v76[v78[3]][v78[1473 - (882 + 587)]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[267 - (140 + 124)]][v76[v78[4 + 0]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1538 - (1105 + 430)]][v76[v78[10 - 6]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[6 - 4]][v76[v78[6 - 3]]] = v76[v78[6 - 2]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v78[2 + 1];
							else
								local v2128 = 0;
								while true do
									if (v2128 == (1 + 8)) then
										v76[v78[2]] = v78[1994 - (1047 + 944)];
										break;
									end
									if (v2128 == (1308 - (206 + 1096))) then
										v76[v78[196 - (30 + 164)]] = v59[v78[13 - 10]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[1477 - (1383 + 91)]][v78[15 - 11]];
										v2128 = 13 - 6;
									end
									if (v2128 == (1667 - (1174 + 486))) then
										v70 = v70 + (428 - (172 + 255));
										v78 = v66[v70];
										v76[v78[6 - 4]] = v76[v78[6 - 3]][v76[v78[1532 - (594 + 934)]]];
										v70 = v70 + (569 - (211 + 357));
										v2128 = 8;
									end
									if ((1334 <= 4821) and (v2128 == (1 + 0))) then
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[3 + 0]][v76[v78[1418 - (159 + 1255)]]];
										v70 = v70 + 1;
										v2128 = 2 + 0;
									end
									if ((v2128 == (777 - (24 + 753))) or (2006 == 3389)) then
										v76[v78[1 + 1]] = v59[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3 - 0]][v78[1136 - (898 + 234)]];
										v2128 = 536 - (333 + 202);
									end
									if ((v2128 == (2 + 2)) or (1943 == 881)) then
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[3 - 1]] = v76[v78[1282 - (1018 + 261)]][v76[v78[9 - 5]]];
										v70 = v70 + (132 - (93 + 38));
										v2128 = 5;
									end
									if (v2128 == 2) then
										v78 = v66[v70];
										v76[v78[1 + 1]][v76[v78[2 + 1]]] = v76[v78[1 + 3]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v2128 = 6 - 3;
									end
									if ((v2128 == 3) or (4119 < 2227)) then
										v76[v78[7 - 5]] = v76[v78[8 - 5]] + v78[4];
										v70 = v70 + (4 - 3);
										v78 = v66[v70];
										v76[v78[3 - 1]] = v76[v78[3]] + v78[4];
										v2128 = 1 + 3;
									end
									if (v2128 == 5) then
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[2 + 1]][v78[424 - (14 + 406)]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v2128 = 6;
									end
									if ((v2128 == (29 - 21)) or (1533 > 4503)) then
										v78 = v66[v70];
										v76[v78[1632 - (20 + 1610)]][v76[v78[2 + 1]]] = v76[v78[4]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v2128 = 26 - 17;
									end
								end
							end
						elseif ((3187 == 3187) and (v79 > (675 - (243 + 274)))) then
							local v2129 = 0;
							while true do
								if (v2129 == (1622 - (1437 + 185))) then
									v76[v78[5 - 3]][v76[v78[2 + 1]]] = v76[v78[15 - 11]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[3]] + v78[820 - (326 + 490)];
									v2129 = 1 + 0;
								end
								if ((v2129 == (204 - (181 + 22))) or (4949 <= 2206)) then
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[77 - (35 + 40)]] = v76[v78[3]][v76[v78[4]]];
									v70 = v70 + (3 - 2);
									v2129 = 2 - 0;
								end
								if (v2129 == 3) then
									v76[v78[1 + 1]] = v76[v78[881 - (297 + 581)]][v76[v78[1 + 3]]];
									break;
								end
								if (v2129 == 2) then
									v78 = v66[v70];
									v76[v78[2 - 0]] = v76[v78[9 - 6]][v78[2 + 2]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v2129 = 13 - 10;
								end
							end
						else
							local v2130 = v78[2];
							local v2131 = v76[v2130];
							local v2132 = v76[v2130 + (1739 - (1505 + 232))];
							if (v2132 > 0) then
								if (v2131 > v76[v2130 + (1319 - (415 + 903))]) then
									v70 = v78[3];
								else
									v76[v2130 + (8 - 5)] = v2131;
								end
							elseif (v2131 < v76[v2130 + 1]) then
								v70 = v78[4 - 1];
							else
								v76[v2130 + 3] = v2131;
							end
						end
					elseif (v79 <= 186) then
						if (v79 <= (889 - (155 + 562))) then
							if (v79 <= (78 + 87)) then
								if (v79 <= (279 - (71 + 46))) then
									if ((v79 <= (248 - 88)) or (1903 <= 1166)) then
										v76[v78[687 - (436 + 249)]] = v76[v78[1624 - (56 + 1565)]];
									elseif (v79 > (67 + 94)) then
										local v2133 = 0;
										while true do
											if (v2133 == (984 - (80 + 904))) then
												v76[v78[1 + 1]] = v76[v78[803 - (595 + 205)]][v78[9 - 5]];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v76[v78[2 + 0]] = v76[v78[2 + 1]][v78[12 - 8]];
												v2133 = 1 + 0;
											end
											if ((666 - (400 + 265)) == v2133) then
												v70 = v70 + (1 - 0);
												v78 = v66[v70];
												v76[v78[1 + 1]] = v76[v78[3]][v76[v78[4]]];
												v70 = v70 + (2 - 1);
												v2133 = 1 + 1;
											end
											if (v2133 == (1675 - (962 + 709))) then
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[2 + 0]][v76[v78[3]]] = v76[v78[3 + 1]];
												v70 = v70 + 1;
												v2133 = 5;
											end
											if ((2101 <= 3156) and (v2133 == 2)) then
												v78 = v66[v70];
												v76[v78[7 - 5]] = v76[v78[7 - 4]][v78[785 - (636 + 145)]];
												v70 = v70 + (296 - (282 + 13));
												v78 = v66[v70];
												v2133 = 1151 - (366 + 782);
											end
											if (v2133 == 3) then
												v76[v78[91 - (10 + 79)]] = v76[v78[3]][v76[v78[1711 - (1297 + 410)]]];
												v70 = v70 + (3 - 2);
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3 + 0]][v76[v78[4]]];
												v2133 = 4;
											end
											if (v2133 == (283 - (262 + 16))) then
												v78 = v66[v70];
												v76[v78[4 - 2]] = v78[2 + 1];
												break;
											end
										end
									else
										v76[v78[1 + 1]] = v59[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1852 - (1056 + 794)]] = v76[v78[3]][v78[1352 - (741 + 607)]];
										v70 = v70 + (1757 - (730 + 1026));
										v78 = v66[v70];
										v76[v78[1795 - (248 + 1545)]] = v76[v78[995 - (191 + 801)]][v76[v78[19 - 15]]];
										v70 = v70 + (561 - (478 + 82));
										v78 = v66[v70];
										v76[v78[1709 - (434 + 1273)]][v76[v78[8 - 5]]] = v76[v78[4 + 0]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]] + v78[4];
										v70 = v70 + (4 - 3);
										v78 = v66[v70];
										v76[v78[575 - (349 + 224)]] = v76[v78[867 - (275 + 589)]] + v78[6 - 2];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[3 - 1]] = v78[1535 - (1064 + 468)];
									end
								elseif (v79 <= (120 + 43)) then
									v76[v78[2 + 0]] = v76[v78[12 - 9]] / v76[v78[707 - (676 + 27)]];
								elseif ((v79 == (482 - 318)) or (1259 < 467)) then
									local v2147;
									local v2148, v2149;
									local v2150;
									v76[v78[1429 - (48 + 1379)]] = v76[v78[3 + 0]][v76[v78[2 + 2]]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2 + 0]] = v59[v78[118 - (79 + 36)]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[2 + 1]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1 + 2]] + v78[4 + 0];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[2 + 1]][v78[1018 - (631 + 383)]];
									v70 = v70 + (1636 - (445 + 1190));
									v78 = v66[v70];
									v2150 = v78[1427 - (810 + 615)];
									v2148, v2149 = v69(v76[v2150](v13(v76, v2150 + (1295 - (819 + 475)), v78[1338 - (243 + 1092)])));
									v71 = (v2149 + v2150) - (2 - 1);
									v2147 = 0 + 0;
									for v4384 = v2150, v71 do
										local v4385 = 0 + 0;
										while true do
											if (v4385 == (0 + 0)) then
												v2147 = v2147 + 1 + 0;
												v76[v4384] = v2148[v2147];
												break;
											end
										end
									end
									v70 = v70 + 1;
									v78 = v66[v70];
									v2150 = v78[2];
									v76[v2150] = v76[v2150](v13(v76, v2150 + 1, v71));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 - 0]][v76[v78[8 - 5]]] = v76[v78[528 - (119 + 405)]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[6 - 4]] = v78[612 - (352 + 257)];
								else
									local v2167;
									v2167 = v78[1 + 1];
									v76[v2167] = v76[v2167]();
									v70 = v70 + (1164 - (88 + 1075));
									v78 = v66[v70];
									v76[v78[2]][v76[v78[1074 - (477 + 594)]]] = v76[v78[727 - (328 + 395)]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[506 - (164 + 340)]] = v76[v78[4 - 1]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[3]];
									v70 = v70 + (1230 - (1008 + 221));
									v78 = v66[v70];
									v76[v78[1513 - (1025 + 486)]] = v76[v78[6 - 3]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v2167 = v78[221 - (108 + 111)];
									do
										return v13(v76, v2167, v2167 + v78[3]);
									end
									v70 = v70 + 1;
									v78 = v66[v70];
									v70 = v78[101 - (82 + 16)];
								end
							elseif ((v79 <= (1897 - (533 + 1196))) or (370 > 2339)) then
								if (v79 <= (251 - 85)) then
									v76[v78[214 - (161 + 51)]] = v76[v78[437 - (294 + 140)]][v76[v78[4]]];
									v70 = v70 + (4 - 3);
									v78 = v66[v70];
									v76[v78[840 - (717 + 121)]] = v76[v78[4 - 1]][v78[4 + 0]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1712 - (1001 + 709)]] = v76[v78[3 + 0]][v78[4]];
									v70 = v70 + (1121 - (242 + 878));
									v78 = v66[v70];
									v76[v78[1785 - (1395 + 388)]] = v76[v78[2 + 1]][v76[v78[4]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]][v76[v78[2 + 1]]] = v76[v78[1951 - (1289 + 658)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[3 - 1]] = v78[3 + 0];
								elseif (v79 > 167) then
									local v2181 = 0 + 0;
									while true do
										if (v2181 == (5 - 2)) then
											v76[v78[1978 - (337 + 1639)]] = v76[v78[3]][v76[v78[3 + 1]]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[5 - 3]] = v78[6 - 3];
											break;
										end
										if ((v2181 == (1737 - (630 + 1107))) or (2276 > 4784)) then
											v76[v78[2 + 0]] = v76[v78[3]][v78[1 + 3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2 - 0]] = v76[v78[2 + 1]][v78[4 + 0]];
											v2181 = 62 - (13 + 48);
										end
										if ((455 <= 4160) and ((701 - (658 + 41)) == v2181)) then
											v78 = v66[v70];
											v76[v78[3 - 1]] = v76[v78[1910 - (1591 + 316)]] + v78[7 - 3];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v2181 = 2 + 1;
										end
										if ((v2181 == (3 - 2)) or (1622 < 146)) then
											v70 = v70 + (1277 - (1241 + 35));
											v78 = v66[v70];
											v76[v78[42 - (18 + 22)]][v76[v78[3 - 0]]] = v76[v78[4]];
											v70 = v70 + 1 + 0;
											v2181 = 1304 - (697 + 605);
										end
									end
								else
									local v2182 = 0 + 0;
									while true do
										if (v2182 == (6 - 3)) then
											v76[v78[2]] = v76[v78[332 - (188 + 141)]][v76[v78[16 - 12]]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v2182 = 4;
										end
										if (v2182 == (954 - (34 + 916))) then
											v76[v78[1739 - (357 + 1380)]][v76[v78[3 + 0]]] = v76[v78[2 + 2]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v2182 = 1932 - (178 + 1749);
										end
										if ((13 - 8) == v2182) then
											v76[v78[2]] = v76[v78[1418 - (142 + 1273)]] + v78[597 - (284 + 309)];
											break;
										end
										if (v2182 == (1 + 0)) then
											v76[v78[2]] = v76[v78[693 - (622 + 68)]][v76[v78[3 + 1]]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v2182 = 2;
										end
										if (v2182 == (2 + 0)) then
											v76[v78[2 + 0]] = v76[v78[1901 - (855 + 1043)]][v78[4]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v2182 = 3;
										end
										if (v2182 == (0 - 0)) then
											v76[v78[2]] = v76[v78[9 - 6]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v2182 = 780 - (576 + 203);
										end
									end
								end
							elseif (v79 <= 170) then
								if (v79 > (430 - 261)) then
									local v2183;
									local v2184;
									local v2185;
									v76[v78[2 - 0]] = #v76[v78[1987 - (709 + 1275)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[6 - 4]] = v59[v78[11 - 8]];
									v70 = v70 + (119 - (31 + 87));
									v78 = v66[v70];
									v2185 = v78[133 - (44 + 87)];
									v76[v2185] = v76[v2185]();
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[2 + 0]] = v78[3];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v2185 = v78[2];
									v2184 = v76[v2185];
									v2183 = v76[v2185 + (5 - 3)];
									if (v2183 > (786 - (284 + 502))) then
										if ((2853 >= 41) and (v2184 > v76[v2185 + 1 + 0])) then
											v70 = v78[1189 - (124 + 1062)];
										else
											v76[v2185 + (1030 - (847 + 180))] = v2184;
										end
									elseif ((v2184 < v76[v2185 + 1 + 0]) or (4071 <= 3008)) then
										v70 = v78[12 - 9];
									else
										v76[v2185 + (1366 - (369 + 994))] = v2184;
									end
								else
									v76[v78[965 - (583 + 380)]] = v76[v78[1 + 2]][v78[3 + 1]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1 + 1]][v76[v78[1976 - (1085 + 888)]]] = v76[v78[9 - 5]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[13 - 10]] + v78[5 - 1];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[2 + 1]] + v78[2 + 2];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[4 - 1]][v76[v78[4 + 0]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[217 - (153 + 61)]][v78[947 - (704 + 239)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v78[1389 - (740 + 646)];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v70 = v78[1925 - (1547 + 375)];
								end
							elseif (v79 > 171) then
								local v2208;
								v76[v78[2 + 0]] = v76[v78[3]][v78[407 - (211 + 192)]];
								v70 = v70 + (4 - 3);
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[784 - (425 + 356)]][v76[v78[1 + 3]]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1569 - (83 + 1483)]] + v78[1276 - (123 + 1149)];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[2 + 1]][v76[v78[4]]];
								v70 = v70 + (1581 - (908 + 672));
								v78 = v66[v70];
								v2208 = v78[515 - (206 + 307)];
								v76[v2208] = v76[v2208](v76[v2208 + 1]);
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]][v76[v78[65 - (18 + 44)]]] = v76[v78[2 + 2]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[6 - 3]] + v78[9 - 5];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[937 - (226 + 709)]] = v76[v78[729 - (235 + 491)]] + v78[6 - 2];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[1302 - (463 + 836)]][v76[v78[408 - (166 + 238)]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 - 0]] = v78[3 + 0];
							else
								v76[v78[1443 - (1080 + 361)]] = v76[v78[4 - 1]][v76[v78[2 + 2]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[303 - (254 + 46)]][v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[259 - (37 + 219)]][v78[4]];
								v70 = v70 + (1900 - (1330 + 569));
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[4 - 1]][v76[v78[15 - 11]]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[672 - (128 + 542)]] = v76[v78[5 - 2]][v78[13 - 9]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[10 - 7]][v76[v78[4 + 0]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[3 - 1]][v76[v78[3 + 0]]] = v76[v78[816 - (96 + 716)]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1609 - (85 + 1522)]] = v76[v78[856 - (724 + 129)]] + v78[4];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[375 - (83 + 290)]] = v76[v78[3 - 0]] + v78[6 - 2];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[2 + 1]][v76[v78[4]]];
							end
						elseif (v79 <= 179) then
							if (v79 <= (253 - 78)) then
								if (v79 <= (86 + 87)) then
									local v603 = 0;
									local v604;
									while true do
										if ((v603 == (12 - 6)) or (1025 == 3245)) then
											v76[v78[2]] = v78[5 - 2];
											break;
										end
										if ((451 - (190 + 257)) == v603) then
											v78 = v66[v70];
											v76[v78[593 - (402 + 189)]][v78[2 + 1]] = v76[v78[570 - (90 + 476)]];
											v70 = v70 + (815 - (688 + 126));
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[3]];
											v603 = 5;
										end
										if (v603 == (1 + 4)) then
											v70 = v70 + (500 - (34 + 465));
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + (4 - 3);
											v78 = v66[v70];
											v603 = 12 - 6;
										end
										if ((2511 >= 884) and (v603 == 1)) then
											v76[v78[2 + 0]][v78[2 + 1]] = v76[v78[10 - 6]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]];
											v70 = v70 + (1 - 0);
											v603 = 1809 - (587 + 1220);
										end
										if (v603 == (1894 - (1211 + 681))) then
											v78 = v66[v70];
											v76[v78[79 - (64 + 13)]] = v78[658 - (121 + 534)];
											v70 = v70 + (804 - (622 + 181));
											v78 = v66[v70];
											v76[v78[1 + 1]] = v78[3];
											v603 = 1672 - (296 + 1373);
										end
										if ((0 + 0) == v603) then
											v604 = nil;
											v604 = v78[1 + 1];
											v76[v604] = v76[v604](v13(v76, v604 + 1 + 0, v78[1617 - (143 + 1471)]));
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v603 = 1 + 0;
										end
										if ((v603 == (7 - 4)) or (4929 <= 3142)) then
											v70 = v70 + (181 - (103 + 77));
											v78 = v66[v70];
											v604 = v78[2 + 0];
											v76[v604] = v76[v604](v13(v76, v604 + (1158 - (895 + 262)), v78[3]));
											v70 = v70 + (1 - 0);
											v603 = 4;
										end
									end
								elseif ((v79 == (137 + 37)) or (1982 == 2006)) then
									local v2241 = v78[1628 - (581 + 1045)];
									do
										return v76[v2241](v13(v76, v2241 + 1, v78[1278 - (582 + 693)]));
									end
								else
									local v2242;
									local v2243, v2244;
									local v2245;
									v76[v78[1188 - (454 + 732)]] = v76[v78[5 - 2]][v76[v78[4]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 - 0]] = v59[v78[3 - 0]];
									v70 = v70 + (651 - (367 + 283));
									v78 = v66[v70];
									v76[v78[70 - (7 + 61)]] = v76[v78[8 - 5]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[681 - (332 + 346)]] + v78[7 - 3];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[7 - 5]] = v76[v78[3]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v2245 = v78[2];
									v2243, v2244 = v69(v76[v2245](v13(v76, v2245 + (1 - 0), v78[3 + 0])));
									v71 = (v2244 + v2245) - (1 + 0);
									v2242 = 0 - 0;
									for v4412 = v2245, v71 do
										local v4413 = 0 - 0;
										while true do
											if (v4413 == (1854 - (815 + 1039))) then
												v2242 = v2242 + (777 - (336 + 440));
												v76[v4412] = v2243[v2242];
												break;
											end
										end
									end
									v70 = v70 + 1;
									v78 = v66[v70];
									v2245 = v78[2 + 0];
									v76[v2245](v13(v76, v2245 + 1 + 0, v71));
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v70 = v78[433 - (222 + 208)];
								end
							elseif (v79 <= 177) then
								if ((v79 > (8 + 168)) or (4996 < 671)) then
									local v2259 = 830 - (652 + 178);
									while true do
										if ((v2259 == (0 - 0)) or (2104 == 2145)) then
											v76[v78[5 - 3]] = v76[v78[3 + 0]][v76[v78[9 - 5]]];
											v70 = v70 + (395 - (259 + 135));
											v78 = v66[v70];
											v76[v78[1462 - (1393 + 67)]] = v76[v78[2 + 1]][v78[1452 - (1129 + 319)]];
											v2259 = 1 + 0;
										end
										if (v2259 == (4 - 0)) then
											v70 = v70 + (413 - (137 + 275));
											v78 = v66[v70];
											v76[v78[441 - (140 + 299)]] = v76[v78[1104 - (421 + 680)]] + v78[4];
											v70 = v70 + (4 - 3);
											v2259 = 14 - 9;
										end
										if ((v2259 == (2 - 1)) or (649 > 3458)) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2 + 0]] = v59[v78[543 - (58 + 482)]];
											v70 = v70 + (680 - (310 + 369));
											v2259 = 2 + 0;
										end
										if (v2259 == (291 - (274 + 12))) then
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[3 + 0]][v76[v78[1766 - (681 + 1081)]]];
											break;
										end
										if (v2259 == (10 - 7)) then
											v76[v78[3 - 1]] = v76[v78[7 - 4]][v76[v78[881 - (842 + 35)]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2 - 0]][v76[v78[1870 - (180 + 1687)]]] = v76[v78[9 - 5]];
											v2259 = 975 - (269 + 702);
										end
										if (v2259 == 2) then
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[817 - (776 + 38)]][v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v2259 = 5 - 2;
										end
									end
								else
									local v2260;
									local v2261;
									local v2262;
									v76[v78[1 + 1]] = v76[v78[3]][v76[v78[4]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1 + 2]] + v78[1 + 3];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[11 - 8]] + v78[4];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[959 - (135 + 820)]];
									v70 = v70 + (137 - (118 + 18));
									v78 = v66[v70];
									v76[v78[1 + 1]] = v78[14 - 11];
									v70 = v70 + 1;
									v78 = v66[v70];
									v2262 = v78[1 + 1];
									v2261 = v76[v2262];
									v2260 = v76[v2262 + 2 + 0];
									if (v2260 > 0) then
										if (v2261 > v76[v2262 + 1 + 0]) then
											v70 = v78[3];
										else
											v76[v2262 + 3 + 0] = v2261;
										end
									elseif (v2261 < v76[v2262 + (1294 - (741 + 552))]) then
										v70 = v78[1 + 2];
									else
										v76[v2262 + 3] = v2261;
									end
								end
							elseif ((v79 > (235 - 57)) or (847 < 360)) then
								local v2273;
								v76[v78[2]] = v78[3 + 0];
								v70 = v70 + (885 - (779 + 105));
								v78 = v66[v70];
								v2273 = v78[1783 - (1451 + 330)];
								v76[v2273] = v76[v2273](v13(v76, v2273 + (1870 - (1259 + 610)), v78[3]));
								v70 = v70 + (851 - (4 + 846));
								v78 = v66[v70];
								v76[v78[1859 - (1108 + 749)]][v78[1744 - (1301 + 440)]] = v76[v78[5 - 1]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1 + 2]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[478 - (168 + 308)]] = v78[5 - 2];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1349 - (469 + 878)]] = v78[3 + 0];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v2273 = v78[2];
								v76[v2273] = v76[v2273](v13(v76, v2273 + 1 + 0, v78[1 + 2]));
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2]][v78[3 + 0]] = v76[v78[4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[7 - 5]] = v76[v78[3]];
								v70 = v70 + (1841 - (1332 + 508));
								v78 = v66[v70];
								v76[v78[2]] = v78[3];
							else
								local v2291 = 0 + 0;
								local v2292;
								local v2293;
								local v2294;
								local v2295;
								while true do
									if ((0 + 0) == v2291) then
										v2292 = nil;
										v2293, v2294 = nil;
										v2295 = nil;
										v76[v78[2 + 0]] = v59[v78[1145 - (650 + 492)]];
										v70 = v70 + (807 - (689 + 117));
										v2291 = 1;
									end
									if (v2291 == (6 + 1)) then
										v76[v78[4 - 2]] = v78[1926 - (794 + 1129)];
										break;
									end
									if (v2291 == (3 + 0)) then
										v2295 = v78[1 + 1];
										v2293, v2294 = v69(v76[v2295](v13(v76, v2295 + (862 - (553 + 308)), v78[5 - 2])));
										v71 = (v2294 + v2295) - (1 + 0);
										v2292 = 0 + 0;
										for v7495 = v2295, v71 do
											local v7496 = 1768 - (1764 + 4);
											while true do
												if ((517 - (121 + 396)) == v7496) then
													v2292 = v2292 + (555 - (498 + 56));
													v76[v7495] = v2293[v2292];
													break;
												end
											end
										end
										v2291 = 4 + 0;
									end
									if (v2291 == (18 - 13)) then
										v78 = v66[v70];
										v76[v78[2 + 0]][v76[v78[8 - 5]]] = v76[v78[5 - 1]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[1619 - (316 + 1300)]] + v78[176 - (78 + 94)];
										v2291 = 1422 - (261 + 1155);
									end
									if ((2528 == 2528) and (v2291 == (1460 - (1040 + 416)))) then
										v70 = v70 + (44 - (29 + 14));
										v78 = v66[v70];
										v2295 = v78[2];
										v76[v2295] = v76[v2295](v13(v76, v2295 + 1, v71));
										v70 = v70 + 1;
										v2291 = 9 - 4;
									end
									if (v2291 == (964 - (928 + 34))) then
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[1 + 2]][v78[4]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v2291 = 10 - 7;
									end
									if (v2291 == (17 - 11)) then
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[512 - (69 + 441)]] = v76[v78[7 - 4]][v76[v78[3 + 1]]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v2291 = 1887 - (517 + 1363);
									end
									if ((929 - (802 + 126)) == v2291) then
										v78 = v66[v70];
										v76[v78[1670 - (1660 + 8)]] = v76[v78[3]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[183 - (38 + 143)]] = v76[v78[8 - 5]] + v78[4];
										v2291 = 119 - (29 + 88);
									end
								end
							end
						elseif (v79 <= (364 - 182)) then
							if (v79 <= 180) then
								v76[v78[491 - (308 + 181)]] = v76[v78[1400 - (537 + 860)]][v78[4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[2 + 1]][v76[v78[1099 - (691 + 404)]]];
								v70 = v70 + (1955 - (870 + 1084));
								v78 = v66[v70];
								v76[v78[131 - (47 + 82)]] = v76[v78[1 + 2]][v78[4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]] + v76[v78[4 + 0]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[6 - 4]][v76[v78[120 - (84 + 33)]]] = v76[v78[2 + 2]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v70 = v78[3];
							elseif (v79 == (22 + 159)) then
								local v2296 = v78[4 - 2];
								local v2297 = {v76[v2296](v13(v76, v2296 + (4 - 3), v78[3 - 0]))};
								local v2298 = 0;
								for v4414 = v2296, v78[4] do
									v2298 = v2298 + 1;
									v76[v4414] = v2297[v2298];
								end
							else
								v76[v78[1222 - (87 + 1133)]] = v76[v78[8 - 5]][v78[2 + 2]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[669 - (205 + 462)]] = v59[v78[3]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[1384 - (1035 + 346)]][v78[2 + 2]];
								v70 = v70 + (1781 - (970 + 810));
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[8 - 5]][v76[v78[3 + 1]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[5 - 3]][v76[v78[3]]] = v76[v78[15 - 11]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1390 - (601 + 787)]] = v78[613 - (256 + 354)];
							end
						elseif (v79 <= 184) then
							if (v79 > (358 - 175)) then
								local v2312;
								local v2313, v2314;
								local v2315;
								v76[v78[7 - 5]] = v76[v78[7 - 4]][v78[8 - 4]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[4 - 2]] = v76[v78[3]][v76[v78[12 - 8]]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[4 - 2]] = v59[v78[575 - (259 + 313)]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[8 - 5]] + v78[4];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1340 - (413 + 925)]] = v76[v78[2 + 1]][v78[3 + 1]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v2315 = v78[7 - 5];
								v2313, v2314 = v69(v76[v2315](v13(v76, v2315 + (1 - 0), v78[2 + 1])));
								v71 = (v2314 + v2315) - (2 - 1);
								v2312 = 1944 - (1164 + 780);
								for v4417 = v2315, v71 do
									v2312 = v2312 + (1361 - (596 + 764));
									v76[v4417] = v2313[v2312];
								end
								v70 = v70 + (283 - (52 + 230));
								v78 = v66[v70];
								v2315 = v78[6 - 4];
								v76[v2315] = v76[v2315](v13(v76, v2315 + (1567 - (806 + 760)), v71));
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2 - 0]][v76[v78[4 - 1]]] = v76[v78[2 + 2]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[7 - 5]] = v76[v78[5 - 2]] + v78[4];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[1968 - (1000 + 965)]][v76[v78[3 + 1]]];
								v70 = v70 + (4 - 3);
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[3]][v78[3 + 1]];
								v70 = v70 + (1127 - (261 + 865));
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[4 - 1]][v76[v78[3 + 1]]];
								v70 = v70 + (546 - (33 + 512));
								v78 = v66[v70];
								v76[v78[1838 - (1555 + 281)]] = v76[v78[6 - 3]][v78[3 + 1]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[3 + 0]][v78[11 - 7]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[41 - (34 + 5)]] = v76[v78[3 + 0]][v76[v78[4]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]][v76[v78[2 + 1]]] = v76[v78[2 + 2]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[4 - 2]] = v76[v78[1224 - (999 + 222)]] + v78[2 + 2];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[346 - (166 + 178)]] = v76[v78[1 + 2]][v76[v78[4]]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[1302 - (587 + 713)]] = v78[3 + 0];
							else
								v76[v78[2]][v76[v78[1125 - (11 + 1111)]]] = v76[v78[3 + 1]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[4 - 2]] = v76[v78[1103 - (882 + 218)]][v78[4 + 0]];
								v70 = v70 + (963 - (115 + 847));
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[3]][v76[v78[1619 - (1231 + 384)]]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1698 - (1202 + 494)]][v76[v78[3]]] = v76[v78[182 - (12 + 166)]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[4 - 2]] = v78[3 + 0];
							end
						elseif (v79 == (789 - (202 + 402))) then
							local v2357;
							local v2358;
							local v2359, v2360;
							local v2361;
							v76[v78[2 + 0]] = {};
							v70 = v70 + (999 - (936 + 62));
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[3]][v76[v78[4]]];
							v70 = v70 + (349 - (119 + 229));
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[7 - 4]] + v78[4];
							v70 = v70 + (3 - 2);
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[1 + 2]] + v78[4];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[1438 - (513 + 923)]] = v76[v78[3]][v76[v78[1781 - (507 + 1270)]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v2361 = v78[7 - 5];
							v2359, v2360 = v69(v76[v2361](v76[v2361 + 1]));
							v71 = (v2360 + v2361) - (1 + 0);
							v2358 = 0 - 0;
							for v4420 = v2361, v71 do
								v2358 = v2358 + (1 - 0);
								v76[v4420] = v2359[v2358];
							end
							v70 = v70 + (770 - (644 + 125));
							v78 = v66[v70];
							v2361 = v78[2 + 0];
							v2357 = v76[v2361];
							for v4423 = v2361 + (1848 - (718 + 1129)), v71 do
								v7(v2357, v76[v4423]);
							end
						else
							local v2371;
							local v2372, v2373;
							local v2374;
							v76[v78[2 + 0]] = v76[v78[8 - 5]][v78[4]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[1411 - (564 + 845)]] = v76[v78[3]][v76[v78[10 - 6]]];
							v70 = v70 + (163 - (46 + 116));
							v78 = v66[v70];
							v76[v78[2]] = v59[v78[653 - (575 + 75)]];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[6 - 4]] = v76[v78[10 - 7]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[2 + 1]] + v78[4];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[1 + 2]] + v78[4];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[672 - (224 + 446)]] = v76[v78[3]][v78[1 + 3]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v2374 = v78[6 - 4];
							v2372, v2373 = v69(v76[v2374](v13(v76, v2374 + 1, v78[321 - (56 + 262)])));
							v71 = (v2373 + v2374) - 1;
							v2371 = 0 - 0;
							for v4424 = v2374, v71 do
								v2371 = v2371 + (702 - (666 + 35));
								v76[v4424] = v2372[v2371];
							end
							v70 = v70 + 1;
							v78 = v66[v70];
							v2374 = v78[2];
							v76[v2374] = v76[v2374](v13(v76, v2374 + (2 - 1), v71));
							v70 = v70 + (1181 - (553 + 627));
							v78 = v66[v70];
							v76[v78[2]][v76[v78[1476 - (936 + 537)]]] = v76[v78[1 + 3]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[1202 - (737 + 463)]] = v76[v78[3 + 0]] + v78[4];
							v70 = v70 + (668 - (424 + 243));
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[1 + 2]][v76[v78[14 - 10]]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[1348 - (1213 + 133)]] = v76[v78[3]][v78[6 - 2]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[62 - (37 + 23)]] = v76[v78[10 - 7]][v76[v78[1347 - (122 + 1221)]]];
							v70 = v70 + (243 - (139 + 103));
							v78 = v66[v70];
							v76[v78[1 + 1]] = v76[v78[2 + 1]][v78[5 - 1]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[2 + 1]][v78[1 + 3]];
							v70 = v70 + (107 - (9 + 97));
							v78 = v66[v70];
							v76[v78[3 - 1]] = v76[v78[3]][v76[v78[2 + 2]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2 + 0]][v76[v78[3]]] = v76[v78[13 - 9]];
							v70 = v70 + (1076 - (657 + 418));
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[3]] + v78[4];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[1982 - (448 + 1532)]] = v76[v78[256 - (110 + 143)]] + v78[11 - 7];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[945 - (549 + 394)]] = v76[v78[2 + 1]][v76[v78[1238 - (500 + 734)]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[1 + 1]] = v78[1 + 2];
						end
					elseif (v79 <= (864 - (343 + 322))) then
						if (v79 <= (107 + 85)) then
							if (v79 <= (51 + 138)) then
								if ((205 <= 2260) and (v79 <= (21 + 166))) then
									local v615 = 0 - 0;
									local v616;
									local v617;
									local v618;
									local v619;
									while true do
										if ((v615 == 3) or (3229 == 2514)) then
											v76[v78[2]] = v76[v78[1134 - (297 + 834)]][v78[4]];
											v70 = v70 + (4 - 3);
											v78 = v66[v70];
											v619 = v78[2];
											v615 = 4;
										end
										if ((v615 == (1 + 5)) or (498 == 998)) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[4 - 2]][v76[v78[3]]] = v76[v78[4]];
											v70 = v70 + 1 + 0;
											v615 = 7 + 0;
										end
										if (v615 == (794 - (494 + 292))) then
											v70 = v78[3];
											break;
										end
										if ((1 + 4) == v615) then
											v70 = v70 + (4 - 3);
											v78 = v66[v70];
											v619 = v78[1634 - (888 + 744)];
											v76[v619] = v76[v619](v13(v76, v619 + 1 + 0, v71));
											v615 = 691 - (206 + 479);
										end
										if ((206 <= 2351) and (0 == v615)) then
											v616 = nil;
											v617, v618 = nil;
											v619 = nil;
											v76[v78[1 + 1]] = v59[v78[1176 - (861 + 312)]];
											v615 = 1;
										end
										if (v615 == 4) then
											v617, v618 = v69(v76[v619](v13(v76, v619 + (737 - (135 + 601)), v78[1145 - (1085 + 57)])));
											v71 = (v618 + v619) - 1;
											v616 = 1925 - (224 + 1701);
											for v5034 = v619, v71 do
												v616 = v616 + 1 + 0;
												v76[v5034] = v617[v616];
											end
											v615 = 13 - 8;
										end
										if (v615 == (1 + 0)) then
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[749 - (730 + 16)]];
											v70 = v70 + 1;
											v615 = 2 + 0;
										end
										if ((1589 - (790 + 792)) == v615) then
											v78 = v66[v70];
											v76[v78[1083 - (474 + 607)]] = v78[3];
											v70 = v70 + (531 - (129 + 401));
											v78 = v66[v70];
											v615 = 11 - 3;
										end
										if ((v615 == (120 - (51 + 67))) or (2953 < 2478)) then
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[116 - (93 + 20)]] + v78[15 - 11];
											v70 = v70 + (21 - (12 + 8));
											v78 = v66[v70];
											v615 = 3;
										end
									end
								elseif ((4077 > 530) and (v79 == 188)) then
									local v2408;
									local v2409, v2410;
									local v2411;
									v76[v78[200 - (161 + 37)]] = v76[v78[2 + 1]][v78[1561 - (507 + 1050)]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[3 - 1]][v76[v78[2 + 1]]] = v76[v78[2 + 2]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[5 - 2]] + v78[4];
									v70 = v70 + (865 - (184 + 680));
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3]] + v78[11 - 7];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[6 - 3]][v76[v78[4]]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[3]][v78[1054 - (629 + 421)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[3 - 1]] = v76[v78[6 - 3]][v76[v78[944 - (544 + 396)]]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[993 - (904 + 87)]] = v59[v78[10 - 7]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1477 - (1443 + 31)]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1816 - (1110 + 703)]] + v78[9 - 5];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[5 - 3]] = v76[v78[3]] + v78[10 - 6];
									v70 = v70 + (204 - (78 + 125));
									v78 = v66[v70];
									v76[v78[5 - 3]] = v76[v78[5 - 2]][v78[5 - 1]];
									v70 = v70 + (1825 - (1392 + 432));
									v78 = v66[v70];
									v2411 = v78[2];
									v2409, v2410 = v69(v76[v2411](v13(v76, v2411 + 1, v78[1 + 2])));
									v71 = (v2410 + v2411) - (2 - 1);
									v2408 = 0 + 0;
									for v4448 = v2411, v71 do
										v2408 = v2408 + 1;
										v76[v4448] = v2409[v2408];
									end
									v70 = v70 + (1403 - (963 + 439));
									v78 = v66[v70];
									v2411 = v78[4 - 2];
									v76[v2411](v13(v76, v2411 + (1326 - (76 + 1249)), v71));
									v70 = v70 + (1752 - (1165 + 586));
									v78 = v66[v70];
									v76[v78[2]] = v78[1931 - (1916 + 12)];
								else
									v76[v78[1258 - (604 + 652)]] = v76[v78[5 - 2]][v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3 - 0]][v76[v78[1 + 3]]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[2]][v76[v78[3 - 0]]] = v76[v78[5 - 1]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[15 - (11 + 2)]] = v76[v78[3]] + v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1444 - (64 + 1378)]] = v78[7 - 4];
								end
							elseif (v79 <= (1943 - (256 + 1497))) then
								v76[v78[2 - 0]] = v76[v78[880 - (562 + 315)]][v78[15 - 11]];
								v70 = v70 + (1189 - (577 + 611));
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[7 - 4]][v76[v78[6 - 2]]];
								v70 = v70 + (72 - (58 + 13));
								v78 = v66[v70];
								v76[v78[2 + 0]][v76[v78[3]]] = v76[v78[3 + 1]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[456 - (404 + 50)]] = v76[v78[39 - (6 + 30)]] + v78[4];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1335 - (770 + 563)]] = v76[v78[3 + 0]][v76[v78[1 + 3]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[172 - (25 + 145)]] = v76[v78[3]][v78[3 + 1]];
								v70 = v70 + (700 - (153 + 546));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3 + 0]][v78[931 - (60 + 867)]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]][v76[v78[10 - 7]]] = v76[v78[1287 - (309 + 974)]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[1144 - (677 + 464)]] + v78[826 - (567 + 255)];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[3 - 0]][v76[v78[532 - (384 + 144)]]];
								v70 = v70 + (1222 - (1030 + 191));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[5 - 2]][v78[7 - 3]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[859 - (326 + 531)]] = v76[v78[7 - 4]][v78[2 + 2]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[4 - 2]][v76[v78[1 + 2]]] = v76[v78[4 + 0]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1624 - (1367 + 254)]] + v78[682 - (305 + 373)];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[321 - (129 + 190)]] = v78[3];
							elseif (v79 > (575 - 384)) then
								v76[v78[3 - 1]] = v76[v78[3 + 0]][v78[4 + 0]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[291 - (210 + 79)]] = v59[v78[4 - 1]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[4 - 2]] = v76[v78[675 - (32 + 640)]][v78[4 + 0]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[2 + 1]][v76[v78[1765 - (847 + 914)]]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2]][v76[v78[6 - 3]]] = v76[v78[528 - (163 + 361)]];
								v70 = v70 + (886 - (162 + 723));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1 + 2]] + v78[4];
								v70 = v70 + (402 - (258 + 143));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[12 - 9]][v76[v78[8 - 4]]];
							else
								local v2455;
								v76[v78[7 - 5]] = v59[v78[1694 - (486 + 1205)]];
								v70 = v70 + (166 - (92 + 73));
								v78 = v66[v70];
								v76[v78[2 + 0]] = v59[v78[3 + 0]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[274 - (68 + 204)]] = v59[v78[4 - 1]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[14 - 11]] + v76[v78[2 + 2]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[3 + 0]] - v78[4];
								v70 = v70 + (317 - (20 + 296));
								v78 = v66[v70];
								v2455 = v78[2];
								v76[v2455] = v76[v2455](v13(v76, v2455 + 1, v78[3 + 0]));
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[8 - 6]] = v76[v78[10 - 7]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[2 + 0]] = v59[v78[3]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3]] + v76[v78[4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v59[v78[7 - 4]] = v76[v78[2]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v78[2 + 1];
								v70 = v70 + 1;
								v78 = v66[v70];
								v70 = v78[3];
							end
						elseif (v79 <= 195) then
							if ((1417 < 4438) and (v79 <= 193)) then
								local v645 = 0 - 0;
								while true do
									if (v645 == 3) then
										v76[v78[2]] = v78[4 - 1];
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[2 + 1];
										break;
									end
									if (v645 == (251 - (155 + 94))) then
										v78 = v66[v70];
										v76[v78[2 - 0]][v76[v78[910 - (515 + 392)]]] = v76[v78[330 - (7 + 319)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v645 = 3;
									end
									if ((v645 == (0 + 0)) or (4026 > 4223)) then
										v76[v78[1 + 1]] = v59[v78[1500 - (292 + 1205)]];
										v70 = v70 + (53 - (13 + 39));
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[9 - 6]][v78[14 - 10]];
										v645 = 1039 - (850 + 188);
									end
									if (v645 == (1037 - (822 + 214))) then
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1163 - (317 + 844)]] = v76[v78[3]][v76[v78[4 + 0]]];
										v70 = v70 + 1;
										v645 = 1 + 1;
									end
								end
							elseif ((2055 >= 1555) and (v79 == 194)) then
								local v2473;
								local v2474;
								local v2475;
								local v2476;
								local v2475, v2477;
								local v2478;
								v76[v78[1192 - (508 + 682)]] = v76[v78[2 + 1]][v76[v78[2 + 2]]];
								v70 = v70 + (546 - (127 + 418));
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[6 - 3]][v78[18 - 14]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]][v78[1124 - (690 + 430)]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[5 - 2]][v76[v78[956 - (637 + 315)]]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[9 - 6]][v78[3 + 1]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[22 - (13 + 7)]] = v76[v78[1 + 2]] + v76[v78[5 - 1]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2 - 0]][v76[v78[3]]] = v76[v78[2 + 2]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[2 + 1]] + v78[4];
								v70 = v70 + (352 - (44 + 307));
								v78 = v66[v70];
								v76[v78[799 - (127 + 670)]] = v76[v78[3 + 0]][v76[v78[588 - (375 + 209)]]];
								v70 = v70 + (1817 - (1673 + 143));
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[2 + 1]][v78[1453 - (836 + 613)]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[3]];
								v70 = v70 + (1531 - (295 + 1235));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[543 - (328 + 212)]][v76[v78[8 - 4]]];
								v70 = v70 + (920 - (517 + 402));
								v78 = v66[v70];
								v76[v78[4 - 2]] = v59[v78[8 - 5]];
								v70 = v70 + (1083 - (700 + 382));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[882 - (677 + 202)]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[3 + 0]] + v78[757 - (360 + 393)];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[1959 - (1231 + 726)]] = v76[v78[4 - 1]] + v78[1914 - (173 + 1737)];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1949 - (441 + 1506)]] = v76[v78[3]][v78[1 + 3]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v2478 = v78[2];
								v2475, v2477 = v69(v76[v2478](v13(v76, v2478 + (695 - (136 + 558)), v78[2 + 1])));
								v71 = (v2477 + v2478) - (1223 - (988 + 234));
								v2476 = 0 + 0;
								for v4466 = v2478, v71 do
									local v4467 = 0 - 0;
									while true do
										if (0 == v4467) then
											v2476 = v2476 + (652 - (125 + 526));
											v76[v4466] = v2475[v2476];
											break;
										end
									end
								end
								v70 = v70 + 1;
								v78 = v66[v70];
								v2478 = v78[6 - 4];
								v2475, v2477 = v69(v76[v2478](v13(v76, v2478 + 1, v71)));
								v71 = (v2477 + v2478) - (1 + 0);
								v2476 = 0 - 0;
								for v4468 = v2478, v71 do
									v2476 = v2476 + (1127 - (290 + 836));
									v76[v4468] = v2475[v2476];
								end
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v2478 = v78[3 - 1];
								v2475 = {v76[v2478](v13(v76, v2478 + (681 - (8 + 672)), v71))};
								v2476 = 0 + 0;
								for v4471 = v2478, v78[1440 - (740 + 696)] do
									local v4472 = 1046 - (353 + 693);
									while true do
										if ((v4472 == (0 + 0)) or (1697 >= 2877)) then
											v2476 = v2476 + (1494 - (35 + 1458));
											v76[v4471] = v2475[v2476];
											break;
										end
									end
								end
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1872 - (1821 + 49)]] = v76[v78[8 - 5]];
								v70 = v70 + (1735 - (727 + 1007));
								v78 = v66[v70];
								v76[v78[169 - (165 + 2)]] = v76[v78[1662 - (1028 + 631)]];
								v70 = v70 + (1616 - (311 + 1304));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[6 - 3]] + v76[v78[1 + 3]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[582 - (512 + 67)]] - v78[10 - 6];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v78[1 + 2];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[1 + 2]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[1791 - (395 + 1394)]] = v76[v78[3]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[2 + 0]] = v78[8 - 5];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v2478 = v78[2];
								v2474 = v76[v2478];
								v2473 = v76[v2478 + (469 - (143 + 324))];
								if (v2473 > 0) then
									if (v2474 > v76[v2478 + 1]) then
										v70 = v78[7 - 4];
									else
										v76[v2478 + 1 + 2] = v2474;
									end
								elseif (v2474 < v76[v2478 + 1]) then
									v70 = v78[8 - 5];
								else
									v76[v2478 + 3] = v2474;
								end
							else
								local v2517 = 0;
								while true do
									if ((2 + 1) == v2517) then
										v76[v78[1105 - (342 + 761)]][v76[v78[3]]] = v76[v78[3 + 1]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[2]] = v78[2 + 1];
										v2517 = 4;
									end
									if ((889 <= 2995) and (4 == v2517)) then
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[3];
										break;
									end
									if ((1 - 0) == v2517) then
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[3 - 1]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1 + 0;
										v2517 = 1159 - (889 + 268);
									end
									if ((2935 <= 4772) and (v2517 == 2)) then
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[3]][v76[v78[1 + 3]]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v2517 = 300 - (196 + 101);
									end
									if ((v2517 == (0 - 0)) or (2209 <= 268)) then
										v76[v78[5 - 3]] = v76[v78[2 + 1]][v78[12 - 8]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[5 - 3]] = v59[v78[3]];
										v2517 = 1 + 0;
									end
								end
							end
						elseif ((3821 <= 4862) and (v79 <= 197)) then
							if (v79 > (322 - 126)) then
								v76[v78[2]] = v76[v78[3]][v78[4]];
								v70 = v70 + (1584 - (431 + 1152));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3 + 0]][v76[v78[348 - (107 + 237)]]];
								v70 = v70 + (1801 - (690 + 1110));
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[3]][v78[1501 - (1374 + 123)]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3 + 0]][v76[v78[1 + 3]]];
								v70 = v70 + (1604 - (454 + 1149));
								v78 = v66[v70];
								v76[v78[3 - 1]] = v76[v78[6 - 3]] % v76[v78[2 + 2]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[639 - (21 + 616)]][v76[v78[6 - 3]]] = v76[v78[1 + 3]];
								v70 = v70 + (438 - (125 + 312));
								v78 = v66[v70];
								v70 = v78[3 + 0];
							else
								v76[v78[2 + 0]] = v59[v78[1111 - (266 + 842)]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[640 - (395 + 243)]] = v76[v78[3 + 0]][v78[1039 - (383 + 652)]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[2 + 1]][v76[v78[647 - (114 + 529)]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]][v76[v78[1192 - (352 + 837)]]] = v76[v78[4]];
								v70 = v70 + (4 - 3);
								v78 = v66[v70];
								v76[v78[552 - (465 + 85)]] = v76[v78[534 - (366 + 165)]] + v78[4];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[6 - 4]] = v76[v78[3]] + v78[4];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v78[1668 - (521 + 1144)];
								v70 = v70 + 1;
								v78 = v66[v70];
								v70 = v78[3];
							end
						elseif ((v79 > (390 - 192)) or (3719 == 518)) then
							v76[v78[1 + 1]] = v76[v78[93 - (5 + 85)]][v78[1697 - (1547 + 146)]];
							v70 = v70 + (3 - 2);
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[3]][v76[v78[4]]];
							v70 = v70 + (318 - (272 + 45));
							v78 = v66[v70];
							v76[v78[4 - 2]] = v76[v78[2 + 1]][v78[4]];
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[1 + 2]][v76[v78[2 + 2]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[2 + 1]][v78[4]];
							v70 = v70 + (1297 - (997 + 299));
							v78 = v66[v70];
							v76[v78[1289 - (903 + 384)]] = v76[v78[1 + 2]][v76[v78[2 + 2]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[3 - 1]][v76[v78[9 - 6]]] = v76[v78[2 + 2]];
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[3]] + v78[4];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[591 - (313 + 276)]] = v76[v78[3]][v76[v78[1 + 3]]];
							v70 = v70 + (329 - (168 + 160));
							v78 = v66[v70];
							v76[v78[1458 - (1452 + 4)]] = v76[v78[13 - 10]][v78[4]];
						else
							v76[v78[2]] = v76[v78[3]][v78[4]];
							v70 = v70 + (421 - (338 + 82));
							v78 = v66[v70];
							v76[v78[575 - (133 + 440)]] = v76[v78[3]][v76[v78[2 + 2]]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 - 0]] = v76[v78[3]][v78[1 + 3]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[1 + 2]][v76[v78[4]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[1304 - (422 + 880)]][v76[v78[1983 - (365 + 1615)]]] = v76[v78[4 - 0]];
							v70 = v70 + (1353 - (479 + 873));
							v78 = v66[v70];
							v76[v78[1 + 1]] = v76[v78[3]] + v78[10 - 6];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[5 - 3]] = v76[v78[1 + 2]][v76[v78[4]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[1504 - (832 + 670)]] = v76[v78[9 - 6]][v78[11 - 7]];
							v70 = v70 + (1248 - (707 + 540));
							v78 = v66[v70];
							v76[v78[61 - (18 + 41)]] = v76[v78[3 + 0]][v78[3 + 1]];
							v70 = v70 + (1221 - (554 + 666));
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[503 - (438 + 62)]][v76[v78[1909 - (1497 + 408)]]];
						end
					elseif ((2408 == 2408) and (v79 <= 206)) then
						if (v79 <= (313 - 111)) then
							if (v79 <= (108 + 92)) then
								local v646 = 0 + 0;
								while true do
									if (v646 == (643 - (508 + 132))) then
										v76[v78[2]] = v76[v78[3]][v76[v78[12 - 8]]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[1209 - (49 + 1158)]][v76[v78[3]]] = v76[v78[1 + 3]];
										v646 = 4 - 0;
									end
									if ((2096 >= 659) and (v646 == (1 + 1))) then
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[3 + 1]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v646 = 3;
									end
									if (v646 == (1 + 0)) then
										v70 = v70 + (1222 - (460 + 761));
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[3 + 0]][v76[v78[1 + 3]]];
										v70 = v70 + (597 - (405 + 191));
										v646 = 1672 - (311 + 1359);
									end
									if (v646 == (8 - 4)) then
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										break;
									end
									if ((2451 > 2266) and (v646 == 0)) then
										v76[v78[2]] = v76[v78[1 + 2]][v78[1 + 3]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[4 - 1]][v78[2 + 2]];
										v646 = 1 - 0;
									end
								end
							elseif (v79 > 201) then
								local v2576;
								local v2577, v2578;
								local v2579;
								v76[v78[1 + 1]] = v76[v78[5 - 2]][v78[4]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1523 - (1408 + 112)]][v76[v78[986 - (285 + 697)]]];
								v70 = v70 + (4 - 3);
								v78 = v66[v70];
								v76[v78[2]] = v59[v78[3]];
								v70 = v70 + (1261 - (737 + 523));
								v78 = v66[v70];
								v76[v78[8 - 6]] = v76[v78[1 + 2]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[846 - (789 + 55)]] = v76[v78[9 - 6]] + v78[3 + 1];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[3 - 1]] = v76[v78[3 + 0]][v78[4]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v2579 = v78[2];
								v2577, v2578 = v69(v76[v2579](v13(v76, v2579 + 1, v78[1885 - (1492 + 390)])));
								v71 = (v2578 + v2579) - (1 - 0);
								v2576 = 993 - (312 + 681);
								for v4492 = v2579, v71 do
									local v4493 = 1911 - (1255 + 656);
									while true do
										if (v4493 == (1727 - (485 + 1242))) then
											v2576 = v2576 + 1 + 0;
											v76[v4492] = v2577[v2576];
											break;
										end
									end
								end
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v2579 = v78[2 - 0];
								v76[v2579] = v76[v2579](v13(v76, v2579 + (3 - 2), v71));
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[3 - 1]][v76[v78[1 + 2]]] = v76[v78[963 - (722 + 237)]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[718 - (77 + 639)]] = v76[v78[8 - 5]] + v78[19 - 15];
							else
								local v2597 = 0 - 0;
								local v2598;
								local v2599;
								local v2600;
								local v2601;
								while true do
									if (v2597 == (0 - 0)) then
										v2598 = nil;
										v2599, v2600 = nil;
										v2601 = nil;
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + (2 - 1);
										v2597 = 1 + 0;
									end
									if (v2597 == (1 + 2)) then
										v76[v78[2]] = v76[v78[1362 - (888 + 471)]] + v78[1113 - (1034 + 75)];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[1160 - (448 + 709)]] + v78[1 + 3];
										v70 = v70 + (3 - 2);
										v2597 = 1859 - (1643 + 212);
									end
									if (v2597 == (485 - (320 + 160))) then
										v2599, v2600 = v69(v76[v2601](v13(v76, v2601 + (1 - 0), v78[7 - 4])));
										v71 = (v2600 + v2601) - (1 + 0);
										v2598 = 0 - 0;
										for v7507 = v2601, v71 do
											local v7508 = 0;
											while true do
												if ((2277 >= 2088) and (v7508 == (136 - (114 + 22)))) then
													v2598 = v2598 + 1 + 0;
													v76[v7507] = v2599[v2598];
													break;
												end
											end
										end
										v70 = v70 + (1060 - (89 + 970));
										v2597 = 6;
									end
									if (v2597 == (1730 - (1083 + 645))) then
										v70 = v70 + (167 - (50 + 116));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[1965 - (1058 + 904)]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v2597 = 11 - 8;
									end
									if ((v2597 == (3 - 2)) or (1734 > 4174)) then
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[8 - 5]][v76[v78[1 + 3]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v59[v78[199 - (94 + 102)]];
										v2597 = 2 + 0;
									end
									if ((4377 >= 3614) and (v2597 == (1268 - (735 + 529)))) then
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[1154 - (875 + 276)]][v78[4]];
										v70 = v70 + (980 - (461 + 518));
										v78 = v66[v70];
										v2601 = v78[2 + 0];
										v2597 = 15 - 10;
									end
									if (v2597 == 7) then
										v76[v78[783 - (656 + 125)]][v76[v78[7 - 4]]] = v76[v78[4]];
										break;
									end
									if ((v2597 == (854 - (532 + 316))) or (4609 <= 1691)) then
										v78 = v66[v70];
										v2601 = v78[256 - (150 + 104)];
										v76[v2601] = v76[v2601](v13(v76, v2601 + 1, v71));
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v2597 = 20 - 13;
									end
								end
							end
						elseif ((2282 == 2282) and (v79 <= (2051 - (564 + 1283)))) then
							if (v79 == (118 + 85)) then
								local v2602 = 0 - 0;
								local v2603;
								local v2604;
								local v2605;
								local v2606;
								while true do
									if ((333 == 333) and (v2602 == (2 + 1))) then
										v71 = (v2605 + v2606) - 1;
										v2604 = 0 + 0;
										for v7509 = v2606, v71 do
											v2604 = v2604 + (3 - 2);
											v76[v7509] = v2603[v2604];
										end
										v70 = v70 + (1549 - (330 + 1218));
										v78 = v66[v70];
										v2602 = 3 + 1;
									end
									if (v2602 == 5) then
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3 + 0]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[3]];
										v2602 = 7 - 1;
									end
									if (4 == v2602) then
										v2606 = v78[2 + 0];
										v2603 = {v76[v2606](v13(v76, v2606 + 1, v71))};
										v2604 = 0 + 0;
										for v7512 = v2606, v78[1573 - (511 + 1058)] do
											local v7513 = 0 - 0;
											while true do
												if ((2640 > 1178) and (v7513 == (1498 - (1315 + 183)))) then
													v2604 = v2604 + 1 + 0;
													v76[v7512] = v2603[v2604];
													break;
												end
											end
										end
										v70 = v70 + (543 - (233 + 309));
										v2602 = 7 - 2;
									end
									if (v2602 == (653 - (267 + 386))) then
										v2603 = nil;
										v2604 = nil;
										v2603, v2605 = nil;
										v2606 = nil;
										v76[v78[4 - 2]] = v76[v78[856 - (744 + 109)]][v76[v78[1554 - (1271 + 279)]]];
										v2602 = 1;
									end
									if (v2602 == (17 - 10)) then
										v76[v78[1646 - (642 + 1002)]] = v76[v78[1866 - (643 + 1220)]] - v78[11 - 7];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[1419 - (1063 + 354)]] = v78[833 - (739 + 91)];
										break;
									end
									if (v2602 == (9 - 3)) then
										v70 = v70 + (1878 - (790 + 1087));
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[7 - 4]] + v76[v78[13 - 9]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v2602 = 24 - 17;
									end
									if (v2602 == (6 - 4)) then
										v76[v78[151 - (82 + 67)]] = v76[v78[3 + 0]][v76[v78[7 - 3]]];
										v70 = v70 + (1986 - (1835 + 150));
										v78 = v66[v70];
										v2606 = v78[16 - (12 + 2)];
										v2603, v2605 = v69(v76[v2606](v76[v2606 + (1037 - (784 + 252))]));
										v2602 = 2 + 1;
									end
									if (v2602 == (1 - 0)) then
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1386 - (1134 + 250)]] = v76[v78[2 + 1]] + v78[1 + 3];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v2602 = 2 + 0;
									end
								end
							else
								local v2607;
								local v2608, v2609;
								local v2610;
								v76[v78[5 - 3]] = v59[v78[3]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[3 - 1]] = v76[v78[3]] + v78[1985 - (1940 + 41)];
								v70 = v70 + (239 - (39 + 199));
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[5 - 2]][v78[6 - 2]];
								v70 = v70 + (1930 - (313 + 1616));
								v78 = v66[v70];
								v2610 = v78[6 - 4];
								v2608, v2609 = v69(v76[v2610](v13(v76, v2610 + (1 - 0), v78[5 - 2])));
								v71 = (v2609 + v2610) - (38 - (7 + 30));
								v2607 = 1186 - (961 + 225);
								for v4494 = v2610, v71 do
									v2607 = v2607 + (4 - 3);
									v76[v4494] = v2608[v2607];
								end
								v70 = v70 + 1;
								v78 = v66[v70];
								v2610 = v78[2 + 0];
								v76[v2610] = v76[v2610](v13(v76, v2610 + (841 - (281 + 559)), v71));
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2]][v76[v78[1 + 2]]] = v76[v78[1 + 3]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v78[1443 - (102 + 1338)];
								v70 = v70 + 1;
								v78 = v66[v70];
								v70 = v78[1 + 2];
							end
						elseif (v79 == (103 + 102)) then
							local v2627 = 0;
							while true do
								if ((v2627 == 2) or (2327 == 4130)) then
									v78 = v66[v70];
									v76[v78[443 - (319 + 122)]] = v76[v78[1 + 2]][v78[4]];
									v70 = v70 + (997 - (45 + 951));
									v78 = v66[v70];
									v2627 = 3 + 0;
								end
								if (((1 + 0) == v2627) or (3995 < 333)) then
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[3]][v76[v78[6 - 2]]];
									v70 = v70 + 1 + 0;
									v2627 = 2;
								end
								if ((35 < 1918) and (v2627 == 3)) then
									v76[v78[1 + 1]] = v76[v78[1378 - (684 + 691)]][v78[1648 - (1161 + 483)]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[969 - (245 + 721)]][v76[v78[4]]];
									v2627 = 4 + 0;
								end
								if ((1290 == 1290) and (v2627 == (4 + 1))) then
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[45 - (31 + 11)]] + v78[13 - 9];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v2627 = 6;
								end
								if (v2627 == (836 - (179 + 657))) then
									v76[v78[329 - (150 + 177)]] = v76[v78[2 + 1]][v76[v78[4]]];
									v70 = v70 + (1206 - (142 + 1063));
									v78 = v66[v70];
									v76[v78[1907 - (1346 + 559)]] = v76[v78[1 + 2]][v78[10 - 6]];
									v2627 = 1;
								end
								if (v2627 == (15 - 11)) then
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1728 - (1695 + 31)]][v76[v78[1 + 2]]] = v76[v78[1441 - (1073 + 364)]];
									v70 = v70 + (818 - (405 + 412));
									v2627 = 654 - (518 + 131);
								end
								if (v2627 == (1308 - (667 + 635))) then
									v76[v78[2]] = v76[v78[1 + 2]] + v78[5 - 1];
									v70 = v70 + (1911 - (1397 + 513));
									v78 = v66[v70];
									v76[v78[2 - 0]] = v78[1078 - (454 + 621)];
									break;
								end
							end
						else
							local v2628;
							local v2629, v2630;
							local v2631;
							v76[v78[2]] = v76[v78[5 - 2]][v76[v78[1 + 3]]];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[2]] = v59[v78[3]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[601 - (417 + 181)]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 - 0]] = v76[v78[1 + 2]] + v78[14 - 10];
							v70 = v70 + (4 - 3);
							v78 = v66[v70];
							v76[v78[1122 - (995 + 125)]] = v76[v78[7 - 4]][v78[4]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v2631 = v78[5 - 3];
							v2629, v2630 = v69(v76[v2631](v13(v76, v2631 + (1326 - (754 + 571)), v78[1 + 2])));
							v71 = (v2630 + v2631) - 1;
							v2628 = 0 - 0;
							for v4497 = v2631, v71 do
								v2628 = v2628 + 1 + 0;
								v76[v4497] = v2629[v2628];
							end
							v70 = v70 + (3 - 2);
							v78 = v66[v70];
							v2631 = v78[2];
							v76[v2631] = v76[v2631](v13(v76, v2631 + 1 + 0, v71));
							v70 = v70 + (3 - 2);
							v78 = v66[v70];
							v76[v78[2]][v76[v78[1 + 2]]] = v76[v78[1495 - (1141 + 350)]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[1 + 1]] = v76[v78[8 - 5]] + v78[1 + 3];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[2]] = v78[3 + 0];
						end
					elseif (v79 <= (2078 - (513 + 1356))) then
						if (v79 <= (2143 - (196 + 1740))) then
							v76[v78[2]] = v78[3 - 0] + v76[v78[4]];
						elseif (v79 > 208) then
							local v2647 = 0;
							while true do
								if (v2647 == 0) then
									v76[v78[2 + 0]] = v76[v78[6 - 3]][v78[6 - 2]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[3]][v78[1 + 3]];
									v2647 = 2 - 1;
								end
								if (v2647 == (1632 - (362 + 1269))) then
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[7 - 4]][v76[v78[41 - (26 + 11)]]];
									v70 = v70 + 1 + 0;
									v2647 = 2;
								end
								if (v2647 == (1 + 1)) then
									v78 = v66[v70];
									v76[v78[1821 - (183 + 1636)]][v76[v78[2 + 1]]] = v76[v78[3 + 1]];
									v70 = v70 + (1231 - (1161 + 69));
									v78 = v66[v70];
									v2647 = 3;
								end
								if (v2647 == 3) then
									v76[v78[1380 - (672 + 706)]] = v78[3];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v70 = v78[108 - (82 + 23)];
									break;
								end
							end
						else
							local v2648;
							local v2649;
							local v2650;
							v2650 = v78[2];
							v76[v2650] = v76[v2650]();
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[1523 - (100 + 1421)]] = v76[v78[3]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[782 - (61 + 719)]] = v78[3];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[414 - (180 + 232)]] = #v76[v78[3 + 0]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 - 0]] = v76[v78[6 - 3]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2]] = v78[1784 - (728 + 1053)];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v2650 = v78[2];
							v2649 = v76[v2650];
							v2648 = v76[v2650 + (561 - (427 + 132))];
							if (v2648 > (0 + 0)) then
								if (v2649 > v76[v2650 + (966 - (786 + 179))]) then
									v70 = v78[1 + 2];
								else
									v76[v2650 + 1 + 2] = v2649;
								end
							elseif ((1437 <= 4146) and (v2649 < v76[v2650 + (1 - 0)])) then
								v70 = v78[3 + 0];
							else
								v76[v2650 + (1927 - (1685 + 239))] = v2649;
							end
						end
					elseif ((2404 >= 1901) and (v79 <= 211)) then
						if (v79 > (489 - 279)) then
							local v2664 = 0;
							while true do
								if ((2238 == 2238) and (v2664 == (6 - 3))) then
									v76[v78[4 - 2]] = v76[v78[3]] + v78[8 - 4];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v2664 = 4;
								end
								if (v2664 == (5 + 0)) then
									v76[v78[2]] = v78[1180 - (457 + 720)];
									break;
								end
								if ((3861 >= 1440) and (v2664 == (9 - 5))) then
									v76[v78[2]] = v76[v78[9 - 6]][v76[v78[4]]];
									v70 = v70 + (722 - (124 + 597));
									v78 = v66[v70];
									v2664 = 24 - 19;
								end
								if (v2664 == (565 - (414 + 150))) then
									v76[v78[9 - 7]] = {};
									v70 = v70 + (830 - (592 + 237));
									v78 = v66[v70];
									v2664 = 2 + 0;
								end
								if ((270 <= 2357) and (v2664 == 2)) then
									v76[v78[4 - 2]][v76[v78[616 - (122 + 491)]]] = v76[v78[18 - 14]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v2664 = 288 - (116 + 169);
								end
								if ((1767 <= 4972) and (v2664 == 0)) then
									v76[v78[7 - 5]] = v76[v78[3 + 0]][v78[4 + 0]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v2664 = 1 - 0;
								end
							end
						else
							v76[v78[1 + 1]] = v76[v78[3]][v76[v78[4]]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[1233 - (477 + 753)]][v76[v78[1 + 3]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[1 + 1]][v76[v78[3 + 0]]] = v76[v78[13 - 9]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[1380 - (649 + 728)]] + v78[916 - (478 + 434)];
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[3 - 0]] + v78[4];
							v70 = v70 + (4 - 3);
							v78 = v66[v70];
							v76[v78[2]] = v78[3 + 0];
						end
					elseif ((v79 > 212) or (4062 == 3631)) then
						local v2673;
						local v2674, v2675;
						local v2676;
						v76[v78[1562 - (1329 + 231)]] = v76[v78[5 - 2]][v78[1914 - (1523 + 387)]];
						v70 = v70 + 1;
						v78 = v66[v70];
						v76[v78[3 - 1]] = v76[v78[3]][v76[v78[3 + 1]]];
						v70 = v70 + (1308 - (1013 + 294));
						v78 = v66[v70];
						v76[v78[1350 - (25 + 1323)]] = v59[v78[3 + 0]];
						v70 = v70 + (1931 - (611 + 1319));
						v78 = v66[v70];
						v76[v78[2 + 0]] = v76[v78[5 - 2]];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[1 + 1]] = v76[v78[2 + 1]] + v78[8 - 4];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[2 + 1]][v78[820 - (353 + 463)]];
						v70 = v70 + 1;
						v78 = v66[v70];
						v2676 = v78[2];
						v2674, v2675 = v69(v76[v2676](v13(v76, v2676 + (1 - 0), v78[3])));
						v71 = (v2675 + v2676) - (1 + 0);
						v2673 = 1061 - (605 + 456);
						for v4500 = v2676, v71 do
							v2673 = v2673 + (2 - 1);
							v76[v4500] = v2674[v2673];
						end
						v70 = v70 + (785 - (122 + 662));
						v78 = v66[v70];
						v2676 = v78[1494 - (1184 + 308)];
						v76[v2676] = v76[v2676](v13(v76, v2676 + (1169 - (445 + 723)), v71));
						v70 = v70 + (1641 - (1245 + 395));
						v78 = v66[v70];
						v76[v78[1129 - (191 + 936)]][v76[v78[6 - 3]]] = v76[v78[6 - 2]];
						v70 = v70 + 1;
						v78 = v66[v70];
						v76[v78[1 + 1]] = v76[v78[261 - (90 + 168)]] + v78[175 - (87 + 84)];
						v70 = v70 + (1 - 0);
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[3]][v76[v78[4]]];
						v70 = v70 + (713 - (176 + 536));
						v78 = v66[v70];
						v76[v78[2 + 0]] = v76[v78[1701 - (858 + 840)]][v78[664 - (447 + 213)]];
						v70 = v70 + (1461 - (1458 + 2));
						v78 = v66[v70];
						v76[v78[9 - 7]] = v76[v78[4 - 1]][v76[v78[3 + 1]]];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[5 - 3]] = v76[v78[3]][v78[484 - (248 + 232)]];
						v70 = v70 + (231 - (109 + 121));
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[1 + 2]][v78[4]];
						v70 = v70 + (1405 - (1288 + 116));
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[3 + 0]][v76[v78[240 - (212 + 24)]]];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[2 + 0]][v76[v78[3]]] = v76[v78[1711 - (1175 + 532)]];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[2 - 0]] = v76[v78[2 + 1]] + v78[4 + 0];
						v70 = v70 + (570 - (252 + 317));
						v78 = v66[v70];
						v76[v78[3 - 1]] = v76[v78[806 - (738 + 65)]][v76[v78[4]]];
						v70 = v70 + (558 - (410 + 147));
						v78 = v66[v70];
						v76[v78[902 - (272 + 628)]] = v78[3];
						v70 = v70 + (2 - 1);
						v78 = v66[v70];
						v70 = v78[7 - 4];
					else
						local v2709 = v78[170 - (62 + 106)];
						local v2710 = {};
						for v4503 = 2 - 1, #v75 do
							local v4504 = 694 - (167 + 527);
							local v4505;
							while true do
								if (v4504 == (0 - 0)) then
									v4505 = v75[v4503];
									for v7621 = 0 - 0, #v4505 do
										local v7622 = 0 - 0;
										local v7623;
										local v7624;
										local v7625;
										while true do
											if (v7622 == (0 + 0)) then
												v7623 = v4505[v7621];
												v7624 = v7623[1067 - (326 + 740)];
												v7622 = 77 - (68 + 8);
											end
											if ((v7622 == 1) or (4590 < 4130)) then
												v7625 = v7623[1473 - (133 + 1338)];
												if (((v7624 == v76) and (v7625 >= v2709)) or (370 > 2370)) then
													v2710[v7625] = v7624[v7625];
													v7623[1] = v2710;
												end
												break;
											end
										end
									end
									break;
								end
							end
						end
					end
				elseif ((v79 <= 320) or (2641 > 2940)) then
					if (v79 <= (726 - 460)) then
						if (v79 <= 239) then
							if (v79 <= (120 + 106)) then
								if (v79 <= 219) then
									if ((4640 > 3129) and (v79 <= 216)) then
										if (v79 <= (105 + 109)) then
											local v648;
											v76[v78[6 - 4]] = v76[v78[2 + 1]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[5 - 3]] = v78[1990 - (1930 + 57)];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2 + 0]] = v78[3 + 0];
											v70 = v70 + (905 - (14 + 890));
											v78 = v66[v70];
											v648 = v78[6 - 4];
											v76[v648] = v76[v648](v13(v76, v648 + 1 + 0, v78[3]));
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[2 + 0]][v78[13 - 10]] = v76[v78[4]];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[12 - 9]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[1783 - (755 + 1026)]] = v78[8 - 5];
											v70 = v70 + (4 - 3);
											v78 = v66[v70];
											v76[v78[948 - (217 + 729)]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v648 = v78[1 + 1];
											v76[v648] = v76[v648](v13(v76, v648 + 1, v78[1 + 2]));
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[5 - 3]][v78[3 + 0]] = v76[v78[4]];
										elseif (v79 > (863 - 648)) then
											local v2711 = 1680 - (619 + 1061);
											local v2712;
											while true do
												if ((42 < 4900) and (v2711 == (1 + 1))) then
													v70 = v70 + (1 - 0);
													v78 = v66[v70];
													v76[v78[138 - (108 + 28)]][v78[1930 - (191 + 1736)]] = v76[v78[4]];
													v70 = v70 + (764 - (757 + 6));
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[1 + 2]];
													v2711 = 1258 - (337 + 918);
												end
												if (v2711 == 3) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[4 - 2]] = v78[1 + 2];
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v76[v78[2]] = v78[7 - 4];
													v2711 = 1 + 3;
												end
												if ((v2711 == (1676 - (754 + 922))) or (4858 < 4635)) then
													v2712 = nil;
													v76[v78[2]] = v76[v78[637 - (487 + 147)]];
													v70 = v70 + (1 - 0);
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + (1570 - (825 + 744));
													v2711 = 1 + 0;
												end
												if (v2711 == (1 + 0)) then
													v78 = v66[v70];
													v76[v78[4 - 2]] = v78[1 + 2];
													v70 = v70 + (250 - (150 + 99));
													v78 = v66[v70];
													v2712 = v78[2 + 0];
													v76[v2712] = v76[v2712](v13(v76, v2712 + (1504 - (1335 + 168)), v78[3]));
													v2711 = 2;
												end
												if (v2711 == (943 - (256 + 683))) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v2712 = v78[320 - (33 + 285)];
													v76[v2712] = v76[v2712](v13(v76, v2712 + (3 - 2), v78[5 - 2]));
													v70 = v70 + (2 - 1);
													v78 = v66[v70];
													v2711 = 1 + 4;
												end
												if ((5 + 0) == v2711) then
													v76[v78[949 - (776 + 171)]][v78[266 - (244 + 19)]] = v76[v78[4]];
													break;
												end
											end
										else
											local v2713 = 0 - 0;
											local v2714;
											local v2715;
											local v2716;
											local v2717;
											while true do
												if (v2713 == (409 - (8 + 398))) then
													v76[v78[518 - (228 + 288)]] = v76[v78[3 - 0]];
													v70 = v70 + (1 - 0);
													v78 = v66[v70];
													v2717 = v78[1 + 1];
													v2715, v2716 = v69(v76[v2717](v13(v76, v2717 + (589 - (434 + 154)), v78[2 + 1])));
													v71 = (v2716 + v2717) - (2 - 1);
													v2713 = 15 - 11;
												end
												if (v2713 == (1 - 0)) then
													v76[v78[1 + 1]] = v59[v78[3 - 0]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[1 + 1]] = v76[v78[3]];
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v2713 = 2 + 0;
												end
												if (v2713 == (1670 - (810 + 855))) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2 + 0]][v76[v78[2 + 1]]] = v76[v78[1 + 3]];
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v70 = v78[3];
													break;
												end
												if ((0 - 0) == v2713) then
													v2714 = nil;
													v2715, v2716 = nil;
													v2717 = nil;
													v76[v78[1616 - (463 + 1151)]] = v76[v78[3 + 0]][v76[v78[1979 - (29 + 1946)]]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v2713 = 1 + 0;
												end
												if (v2713 == (1 + 1)) then
													v76[v78[2]] = v76[v78[518 - (337 + 178)]] + v78[4];
													v70 = v70 + (65 - (4 + 60));
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]] + v78[15 - 11];
													v70 = v70 + 1 + 0;
													v78 = v66[v70];
													v2713 = 1119 - (425 + 691);
												end
												if (v2713 == (2002 - (354 + 1644))) then
													v2714 = 841 - (499 + 342);
													for v7519 = v2717, v71 do
														local v7520 = 0 + 0;
														while true do
															if (v7520 == (160 - (65 + 95))) then
																v2714 = v2714 + 1 + 0;
																v76[v7519] = v2715[v2714];
																break;
															end
														end
													end
													v70 = v70 + 1;
													v78 = v66[v70];
													v2717 = v78[2];
													v76[v2717] = v76[v2717](v13(v76, v2717 + (1640 - (1403 + 236)), v71));
													v2713 = 1365 - (1117 + 243);
												end
											end
										end
									elseif ((4651 >= 2967) and (v79 <= (459 - (67 + 175)))) then
										v76[v78[1 + 1]][v78[5 - 2]] = v78[735 - (387 + 344)];
									elseif (v79 > (1192 - (654 + 320))) then
										local v2718 = 0;
										while true do
											if (v2718 == (4 - 1)) then
												v76[v78[2]] = v76[v78[434 - (276 + 155)]][v76[v78[11 - 7]]];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[2 + 0]] = v76[v78[3]][v78[778 - (65 + 709)]];
												v2718 = 4;
											end
											if ((v2718 == (1 + 0)) or (2793 == 1490)) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[1746 - (884 + 860)]][v76[v78[3 - 0]]] = v76[v78[684 - (492 + 188)]];
												v70 = v70 + 1 + 0;
												v2718 = 6 - 4;
											end
											if (v2718 == (1 + 1)) then
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[2 + 1]] + v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v2718 = 3 + 0;
											end
											if (v2718 == 5) then
												v78 = v66[v70];
												v70 = v78[4 - 1];
												break;
											end
											if ((v2718 == (5 - 1)) or (2744 > 3378)) then
												v70 = v70 + (1 - 0);
												v78 = v66[v70];
												v76[v78[1 + 1]] = v78[3];
												v70 = v70 + 1 + 0;
												v2718 = 5;
											end
											if (0 == v2718) then
												v76[v78[6 - 4]] = v76[v78[3]][v78[1 + 3]];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[4 - 2]] = v76[v78[3]][v78[2 + 2]];
												v2718 = 1 + 0;
											end
										end
									else
										local v2719 = 0 - 0;
										local v2720;
										while true do
											if (v2719 == (0 - 0)) then
												v2720 = nil;
												v76[v78[2 - 0]] = v59[v78[3]];
												v70 = v70 + (1 - 0);
												v2719 = 1252 - (1190 + 61);
											end
											if (v2719 == (2 + 1)) then
												v78 = v66[v70];
												v2720 = v78[1695 - (1448 + 245)];
												v76[v2720] = v76[v2720](v13(v76, v2720 + 1, v78[3 - 0]));
												v2719 = 10 - 6;
											end
											if ((v2719 == (2 - 1)) or (1825 >= 2123)) then
												v78 = v66[v70];
												v76[v78[4 - 2]] = v76[v78[4 - 1]];
												v70 = v70 + (824 - (528 + 295));
												v2719 = 2 - 0;
											end
											if ((v2719 == (1349 - (1224 + 123))) or (2378 <= 1895)) then
												v78 = v66[v70];
												v76[v78[1 + 1]] = v78[3];
												v70 = v70 + (638 - (97 + 540));
												v2719 = 3;
											end
											if (v2719 == (1972 - (484 + 1484))) then
												v70 = v70 + 1;
												v78 = v66[v70];
												if ((933 <= 2727) and (v76[v78[1554 - (1398 + 154)]] == v78[4 + 0])) then
													v70 = v70 + (2 - 1);
												else
													v70 = v78[11 - 8];
												end
												break;
											end
										end
									end
								elseif (v79 <= (752 - (354 + 176))) then
									if ((2912 == 2912) and (v79 <= 220)) then
										local v670 = 0 - 0;
										while true do
											if (v670 == (1 + 4)) then
												v78 = v66[v70];
												v76[v78[2 - 0]] = v59[v78[2 + 1]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v670 = 6;
											end
											if ((v670 == (2 + 0)) or (2239 < 1124)) then
												v78 = v66[v70];
												v76[v78[1432 - (649 + 781)]] = v76[v78[3]] + v78[4 + 0];
												v70 = v70 + 1;
												v78 = v66[v70];
												v670 = 3;
											end
											if (v670 == (1 - 0)) then
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v76[v78[779 - (126 + 651)]] = v76[v78[5 - 2]] + v78[2 + 2];
												v70 = v70 + 1;
												v670 = 1 + 1;
											end
											if (v670 == 3) then
												v76[v78[4 - 2]] = v76[v78[3]][v76[v78[4]]];
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v76[v78[1 + 1]] = v76[v78[3]][v78[1 + 3]];
												v670 = 4;
											end
											if (v670 == (1033 - (179 + 850))) then
												v70 = v70 + (785 - (34 + 750));
												v78 = v66[v70];
												v76[v78[307 - (302 + 3)]] = v76[v78[3]][v76[v78[3 + 1]]];
												v70 = v70 + (1 - 0);
												v670 = 1 + 4;
											end
											if (v670 == (0 - 0)) then
												v76[v78[2]] = v76[v78[4 - 1]][v78[6 - 2]];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[2 - 0]][v76[v78[1 + 2]]] = v76[v78[108 - (56 + 48)]];
												v670 = 1;
											end
											if ((337 < 820) and (v670 == (5 + 1))) then
												v76[v78[2 + 0]] = v76[v78[4 - 1]];
												v70 = v70 + (83 - (7 + 75));
												v78 = v66[v70];
												v76[v78[1 + 1]] = v76[v78[10 - 7]] + v78[4];
												break;
											end
										end
									elseif (v79 == (476 - (170 + 85))) then
										if (v76[v78[351 - (288 + 61)]] < v76[v78[4 + 0]]) then
											v70 = v70 + 1 + 0;
										else
											v70 = v78[2 + 1];
										end
									else
										v76[v78[1 + 1]] = v76[v78[6 - 3]][v78[741 - (330 + 407)]];
										v70 = v70 + (189 - (29 + 159));
										v78 = v66[v70];
										v76[v78[3 - 1]][v76[v78[3]]] = v76[v78[4]];
										v70 = v70 + (4 - 3);
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[2 + 1]] + v78[761 - (15 + 742)];
										v70 = v70 + (451 - (414 + 36));
										v78 = v66[v70];
										v76[v78[1508 - (745 + 761)]] = v78[2 + 1];
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[2 + 1];
									end
								elseif (v79 <= (133 + 91)) then
									if (v79 > (331 - 108)) then
										v76[v78[2 + 0]] = v76[v78[1082 - (126 + 953)]][v76[v78[1704 - (759 + 941)]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1606 - (896 + 708)]] = v76[v78[3]][v78[1 + 3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1579 - (555 + 1022)]] = v76[v78[3]][v78[1 + 3]];
										v70 = v70 + (142 - (14 + 127));
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[3]][v76[v78[799 - (141 + 654)]]];
										v70 = v70 + (932 - (156 + 775));
										v78 = v66[v70];
										do
											return v76[v78[1592 - (167 + 1423)]];
										end
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v70 = v78[8 - 5];
									else
										local v2738;
										local v2739, v2740;
										local v2741;
										v76[v78[2 + 0]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[6 - 3]][v76[v78[3 + 1]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1882 - (1625 + 255)]] = v59[v78[3 + 0]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1518 - (1026 + 490)]] = v76[v78[3 + 0]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1736 - (16 + 1718)]] = v76[v78[2 + 1]] + v78[4 + 0];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[581 - (168 + 410)]][v78[2 + 2]];
										v70 = v70 + (4 - 3);
										v78 = v66[v70];
										v2741 = v78[809 - (134 + 673)];
										v2739, v2740 = v69(v76[v2741](v13(v76, v2741 + 1 + 0, v78[4 - 1])));
										v71 = (v2740 + v2741) - (1909 - (1174 + 734));
										v2738 = 0;
										for v4530 = v2741, v71 do
											local v4531 = 0 - 0;
											while true do
												if (v4531 == 0) then
													v2738 = v2738 + 1 + 0;
													v76[v4530] = v2739[v2738];
													break;
												end
											end
										end
										v70 = v70 + 1;
										v78 = v66[v70];
										v2741 = v78[3 - 1];
										v76[v2741] = v76[v2741](v13(v76, v2741 + 1, v71));
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[6 - 4]][v76[v78[2 + 1]]] = v76[v78[4]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[1 + 2]] + v78[15 - 11];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[7 - 5]] = v76[v78[4 - 1]] + v78[4];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[1 + 1]] = v78[8 - 5];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v70 = v78[3];
									end
								elseif (v79 > 225) then
									v76[v78[2]] = v76[v78[3]][v78[11 - 7]];
									v70 = v70 + (513 - (289 + 223));
									v78 = v66[v70];
									v76[v78[3 - 1]] = v59[v78[3]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3]][v78[644 - (514 + 126)]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[3 + 0]][v76[v78[6 - 2]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[6 - 4]][v76[v78[3 + 0]]] = v76[v78[3 + 1]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[2 + 1]] + v78[4 + 0];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[2 + 1]] + v78[612 - (4 + 604)];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[9 - 6]][v76[v78[14 - 10]]];
									v70 = v70 + (4 - 3);
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[1 + 2]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[7 - 5]] = v76[v78[1448 - (344 + 1101)]][v78[10 - 6]];
								else
									local v2779 = 0 - 0;
									local v2780;
									while true do
										if (v2779 == 6) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[6 - 4]] = v76[v78[13 - 10]][v76[v78[5 - 1]]];
											v2779 = 7;
										end
										if (v2779 == (0 + 0)) then
											v2780 = nil;
											v76[v78[303 - (57 + 244)]] = v78[3];
											v70 = v70 + 1 + 0;
											v2779 = 1 + 0;
										end
										if (v2779 == (25 - 16)) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[1965 - (883 + 1080)]] = v76[v78[203 - (138 + 62)]][v76[v78[1 + 3]]];
											break;
										end
										if (v2779 == (12 - 9)) then
											v70 = v70 + (84 - (62 + 21));
											v78 = v66[v70];
											v76[v78[2 + 0]][v78[1452 - (1036 + 413)]] = v76[v78[4]];
											v2779 = 7 - 3;
										end
										if (v2779 == 1) then
											v78 = v66[v70];
											v76[v78[2]] = v78[3 + 0];
											v70 = v70 + 1;
											v2779 = 2;
										end
										if (v2779 == (10 - 6)) then
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[6 - 4]] = v60[v78[4 - 1]];
											v2779 = 9 - 4;
										end
										if (v2779 == (27 - 20)) then
											v70 = v70 + (1473 - (649 + 823));
											v78 = v66[v70];
											v76[v78[3 - 1]] = v60[v78[3]];
											v2779 = 1571 - (1202 + 361);
										end
										if ((163 <= 4197) and (v2779 == (18 - 13))) then
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[1712 - (263 + 1446)]][v78[3 + 1]];
											v2779 = 1 + 5;
										end
										if (v2779 == (6 + 2)) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[3]][v78[747 - (387 + 356)]];
											v2779 = 13 - 4;
										end
										if ((v2779 == (7 - 5)) or (2480 <= 991)) then
											v78 = v66[v70];
											v2780 = v78[2 + 0];
											v76[v2780] = v76[v2780](v13(v76, v2780 + (1 - 0), v78[3]));
											v2779 = 1719 - (646 + 1070);
										end
									end
								end
							elseif ((v79 <= (68 + 164)) or (1801 >= 3223)) then
								if ((v79 <= (181 + 48)) or (66 >= 3214)) then
									if (v79 <= (39 + 188)) then
										v76[v78[7 - 5]] = v76[v78[1 + 2]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[1099 - (288 + 809)]] = v59[v78[1656 - (471 + 1182)]];
										v70 = v70 + (1496 - (385 + 1110));
										v78 = v66[v70];
										v76[v78[1611 - (1201 + 408)]] = v59[v78[1850 - (747 + 1100)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v59[v78[614 - (269 + 342)]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[2]] = v59[v78[7 - 4]];
										v70 = v70 + (347 - (263 + 83));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[6 - 4]] = v76[v78[3]];
										v70 = v70 + (822 - (659 + 162));
										v78 = v66[v70];
										v76[v78[5 - 3]] = v60[v78[218 - (109 + 106)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 - 0]] = #v76[v78[1168 - (1157 + 8)]];
										v70 = v70 + (512 - (179 + 332));
										v78 = v66[v70];
										v76[v78[839 - (705 + 132)]] = v76[v78[3 + 0]] + v76[v78[1 + 3]];
									elseif (v79 == 228) then
										local v2781;
										v76[v78[2]] = v76[v78[2 + 1]][v76[v78[14 - 10]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[45 - (17 + 26)]] = v76[v78[1965 - (1866 + 96)]][v78[1 + 3]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[3 - 1]] = v76[v78[6 - 3]][v76[v78[14 - 10]]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[11 - 8]] + v78[1135 - (725 + 406)];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[378 - (198 + 177)]][v76[v78[10 - 6]]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v2781 = v78[2 + 0];
										v76[v2781](v76[v2781 + (3 - 2)]);
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v78[2 + 1];
									else
										v76[v78[2 + 0]] = v59[v78[11 - 8]];
										v70 = v70 + (1721 - (1082 + 638));
										v78 = v66[v70];
										v76[v78[1364 - (1322 + 40)]] = v76[v78[3]][v78[9 - 5]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1650 - (435 + 1213)]] = v76[v78[1 + 2]][v76[v78[992 - (696 + 292)]]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[9 - 7]][v76[v78[13 - 10]]] = v76[v78[16 - 12]];
										v70 = v70 + (1466 - (731 + 734));
										v78 = v66[v70];
										v76[v78[1573 - (1286 + 285)]] = v76[v78[3]] + v78[14 - 10];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[3 + 0]][v76[v78[13 - 9]]];
										v70 = v70 + (1262 - (1048 + 213));
										v78 = v66[v70];
										v76[v78[3 - 1]] = v76[v78[1 + 2]][v78[1 + 3]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1359 - (223 + 1134)]] = v76[v78[14 - 11]][v78[1885 - (982 + 899)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[3 + 0]][v76[v78[5 - 1]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[9 - 6]][v78[5 - 1]];
										v70 = v70 + (1484 - (310 + 1173));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[2 + 1]][v76[v78[4]]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[1453 - (968 + 483)]][v76[v78[227 - (37 + 187)]]] = v76[v78[1 + 3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[497 - (204 + 290)]] + v78[4];
										v70 = v70 + (842 - (680 + 161));
										v78 = v66[v70];
										v76[v78[2]] = v78[1 + 2];
									end
								elseif (v79 <= 230) then
									local v688;
									local v689, v690;
									local v691;
									v76[v78[2]] = v76[v78[1071 - (979 + 89)]][v76[v78[1878 - (802 + 1072)]]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[2]] = v59[v78[1 + 2]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3 + 0]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[3]] + v78[1 + 3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[5 - 3]] = v76[v78[6 - 3]][v78[4]];
									v70 = v70 + (1995 - (1413 + 581));
									v78 = v66[v70];
									v691 = v78[1216 - (630 + 584)];
									v689, v690 = v69(v76[v691](v13(v76, v691 + (3 - 2), v78[1131 - (184 + 944)])));
									v71 = (v690 + v691) - (1 + 0);
									v688 = 953 - (927 + 26);
									for v994 = v691, v71 do
										local v995 = 0 - 0;
										while true do
											if ((467 == 467) and (v995 == (640 - (284 + 356)))) then
												v688 = v688 + 1 + 0;
												v76[v994] = v689[v688];
												break;
											end
										end
									end
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v691 = v78[2 + 0];
									v76[v691] = v76[v691](v13(v76, v691 + 1 + 0, v71));
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1 + 1]][v76[v78[1131 - (211 + 917)]]] = v76[v78[4 + 0]];
									v70 = v70 + (1796 - (1151 + 644));
									v78 = v66[v70];
									v70 = v78[1 + 2];
								elseif (v79 == (130 + 101)) then
									v76[v78[2 - 0]] = v76[v78[1903 - (745 + 1155)]][v78[11 - 7]];
									v70 = v70 + (315 - (27 + 287));
									v78 = v66[v70];
									v76[v78[2 - 0]][v76[v78[6 - 3]]] = v76[v78[9 - 5]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[218 - (148 + 68)]] = v76[v78[3]] + v78[1 + 3];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3]] + v78[1 + 3];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1176 - (1064 + 110)]] = v76[v78[3]][v76[v78[23 - (9 + 10)]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1 + 2]][v78[1899 - (1219 + 676)]];
									v70 = v70 + (1142 - (130 + 1011));
									v78 = v66[v70];
									v76[v78[1973 - (1639 + 332)]] = v78[3];
								else
									local v2831 = v76[v78[7 - 3]];
									if (not v2831 or (1719 >= 3302)) then
										v70 = v70 + 1 + 0;
									else
										v76[v78[1 + 1]] = v2831;
										v70 = v78[251 - (229 + 19)];
									end
								end
							elseif (v79 <= 235) then
								if (v79 <= (356 - (21 + 102))) then
									local v706;
									local v707, v708;
									local v709;
									v76[v78[1187 - (931 + 254)]] = v59[v78[1 + 2]];
									v70 = v70 + (446 - (428 + 17));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[8 - 5]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[90 - (26 + 62)]] = v76[v78[1083 - (173 + 907)]] + v78[4 + 0];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[133 - (71 + 60)]] = v76[v78[7 - 4]][v78[1232 - (774 + 454)]];
									v70 = v70 + (1603 - (849 + 753));
									v78 = v66[v70];
									v709 = v78[2];
									v707, v708 = v69(v76[v709](v13(v76, v709 + 1, v78[7 - 4])));
									v71 = (v708 + v709) - 1;
									v706 = 0;
									for v996 = v709, v71 do
										v706 = v706 + (2 - 1);
										v76[v996] = v707[v706];
									end
									v70 = v70 + 1;
									v78 = v66[v70];
									v709 = v78[2];
									v76[v709] = v76[v709](v13(v76, v709 + (1217 - (861 + 355)), v71));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v76[v78[4 - 1]]] = v76[v78[1 + 3]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1 + 2]] + v78[4];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[1145 - (455 + 688)]] = v78[1347 - (481 + 863)];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v70 = v78[3];
								elseif ((1076 == 1076) and (v79 == (12 + 222))) then
									v76[v78[5 - 3]] = v76[v78[1971 - (896 + 1072)]][v78[10 - 6]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[791 - (50 + 738)]][v78[4 + 0]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[4 - 2]][v76[v78[3]]] = v76[v78[1557 - (1128 + 425)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[459 - (398 + 58)]] + v78[716 - (194 + 518)];
									v70 = v70 + (376 - (42 + 333));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1447 - (1308 + 136)]] + v78[3 + 1];
									v70 = v70 + (121 - (56 + 64));
									v78 = v66[v70];
									v76[v78[698 - (251 + 445)]] = v78[2 + 1];
								else
									v76[v78[1 + 1]] = v76[v78[3 + 0]][v78[1573 - (999 + 570)]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[6 - 3]][v78[7 - 3]];
									v70 = v70 + (1700 - (1476 + 223));
									v78 = v66[v70];
									v76[v78[1838 - (597 + 1239)]] = v76[v78[3]][v76[v78[4]]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[2 + 0]][v76[v78[887 - (590 + 294)]]] = v76[v78[8 - 4]];
									v70 = v70 + (790 - (433 + 356));
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[4 - 1]] + v78[1260 - (791 + 465)];
									v70 = v70 + (1115 - (1048 + 66));
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[12 - 9]] + v78[2001 - (666 + 1331)];
									v70 = v70 + (1901 - (854 + 1046));
									v78 = v66[v70];
									v76[v78[5 - 3]] = v78[3];
								end
							elseif (v79 <= (232 + 5)) then
								if (v79 == (599 - 363)) then
									v76[v78[2 + 0]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[98 - (61 + 35)]] = v76[v78[14 - 11]][v78[1 + 3]];
									v70 = v70 + (1819 - (1591 + 227));
									v78 = v66[v70];
									v76[v78[3 - 1]] = v76[v78[794 - (173 + 618)]][v76[v78[1327 - (588 + 735)]]];
									v70 = v70 + (581 - (170 + 410));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]] + v78[4 + 0];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[1 + 2]] + v78[4 + 0];
									v70 = v70 + (553 - (362 + 190));
									v78 = v66[v70];
									v76[v78[850 - (529 + 319)]][v76[v78[2 + 1]]] = v76[v78[12 - 8]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[3 + 1]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1202 - (829 + 371)]] = v76[v78[3]][v76[v78[7 - 3]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1678 - (700 + 976)]][v76[v78[3]]] = v76[v78[9 - 5]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2 + 0]] = v78[1644 - (1137 + 504)];
								else
									local v2870;
									local v2871, v2872;
									local v2873;
									v76[v78[7 - 5]] = v76[v78[6 - 3]][v76[v78[5 - 1]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3]][v76[v78[1618 - (327 + 1287)]]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2 - 0]] = v59[v78[2 + 1]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1116 - (224 + 889)]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1222 - (574 + 646)]] = v76[v78[610 - (83 + 524)]] + v78[772 - (577 + 191)];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3 + 0]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v2873 = v78[2];
									v2871, v2872 = v69(v76[v2873](v13(v76, v2873 + (800 - (248 + 551)), v78[80 - (53 + 24)])));
									v71 = (v2872 + v2873) - (134 - (12 + 121));
									v2870 = 0 - 0;
									for v4532 = v2873, v71 do
										v2870 = v2870 + 1;
										v76[v4532] = v2871[v2870];
									end
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v2873 = v78[2];
									v76[v2873] = v76[v2873](v13(v76, v2873 + (607 - (164 + 442)), v71));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1 + 1]][v76[v78[2 + 1]]] = v76[v78[11 - 7]];
								end
							elseif (v79 > (543 - 305)) then
								v76[v78[2]] = v76[v78[3]][v78[3 + 1]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[4 - 2]] = v59[v78[3 + 0]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1249 - (585 + 662)]] = v76[v78[3]][v78[3 + 1]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[583 - (126 + 454)]][v76[v78[418 - (366 + 48)]]];
								v70 = v70 + (1684 - (1633 + 50));
								v78 = v66[v70];
								v76[v78[1103 - (892 + 209)]][v76[v78[3 + 0]]] = v76[v78[8 - 4]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[662 - (495 + 165)]] = v78[8 - 5];
							else
								local v2902 = 0;
								local v2903;
								local v2904;
								local v2905;
								local v2906;
								while true do
									if (v2902 == (18 - 11)) then
										v78 = v66[v70];
										v76[v78[1 + 1]] = v78[3];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v2902 = 6 + 2;
									end
									if ((3689 >= 2651) and (v2902 == (0 + 0))) then
										v2903 = nil;
										v2904, v2905 = nil;
										v2906 = nil;
										v76[v78[584 - (431 + 151)]] = v59[v78[3 - 0]];
										v2902 = 16 - (10 + 5);
									end
									if (v2902 == (424 - (403 + 19))) then
										v78 = v66[v70];
										v76[v78[1773 - (454 + 1317)]] = v78[2 + 1];
										v70 = v70 + 1;
										v78 = v66[v70];
										v2902 = 1817 - (187 + 1627);
									end
									if (v2902 == 3) then
										v76[v78[2 + 0]] = v78[3];
										v70 = v70 + (1953 - (832 + 1120));
										v78 = v66[v70];
										v2906 = v78[5 - 3];
										v2902 = 4;
									end
									if ((1 + 5) == v2902) then
										v70 = v70 + (1097 - (1001 + 95));
										v78 = v66[v70];
										v59[v78[32 - (4 + 25)]] = v76[v78[1163 - (904 + 257)]];
										v70 = v70 + 1;
										v2902 = 17 - 10;
									end
									if (v2902 == (3 + 5)) then
										do
											return v76[v78[2]];
										end
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v70 = v78[7 - 4];
										break;
									end
									if ((2386 > 1604) and (v2902 == (18 - 14))) then
										v2904, v2905 = v69(v76[v2906](v13(v76, v2906 + 1 + 0, v78[3])));
										v71 = (v2905 + v2906) - 1;
										v2903 = 0 - 0;
										for v7523 = v2906, v71 do
											local v7524 = 1789 - (735 + 1054);
											while true do
												if (v7524 == (1693 - (418 + 1275))) then
													v2903 = v2903 + 1;
													v76[v7523] = v2904[v2903];
													break;
												end
											end
										end
										v2902 = 4 + 1;
									end
									if ((130 < 1824) and (v2902 == (13 - 8))) then
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v2906 = v78[2];
										v76[v2906] = v76[v2906](v13(v76, v2906 + (1473 - (784 + 688)), v71));
										v2902 = 20 - 14;
									end
									if ((2 - 1) == v2902) then
										v70 = v70 + (1250 - (374 + 875));
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[983 - (304 + 676)]];
										v70 = v70 + 1 + 0;
										v2902 = 1360 - (517 + 841);
									end
								end
							end
						elseif (v79 <= (1118 - (356 + 510))) then
							if (v79 <= (434 - 189)) then
								if (v79 <= (579 - 337)) then
									if ((v79 <= (1449 - (306 + 903))) or (1196 >= 4544)) then
										v76[v78[1105 - (70 + 1033)]] = v60[v78[12 - 9]];
									elseif (v79 == 241) then
										local v2907;
										local v2908, v2909;
										local v2910;
										v76[v78[2 + 0]] = v76[v78[3]][v78[3 + 1]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[806 - (523 + 281)]] = v76[v78[925 - (241 + 681)]][v76[v78[1102 - (358 + 740)]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[7 - 5]] = v59[v78[1044 - (1005 + 36)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[3]];
										v70 = v70 + (703 - (533 + 169));
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[2 + 1]] + v78[1 + 3];
										v70 = v70 + (1526 - (817 + 708));
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[3]][v78[4 + 0]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v2910 = v78[2];
										v2908, v2909 = v69(v76[v2910](v13(v76, v2910 + (1699 - (636 + 1062)), v78[11 - 8])));
										v71 = (v2909 + v2910) - (1 - 0);
										v2907 = 0;
										for v4535 = v2910, v71 do
											local v4536 = 1658 - (1130 + 528);
											while true do
												if (v4536 == (0 - 0)) then
													v2907 = v2907 + 1;
													v76[v4535] = v2908[v2907];
													break;
												end
											end
										end
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v2910 = v78[145 - (115 + 28)];
										v76[v2910] = v76[v2910](v13(v76, v2910 + 1 + 0, v71));
										v70 = v70 + (1382 - (1076 + 305));
										v78 = v66[v70];
										v76[v78[1771 - (1198 + 571)]][v76[v78[1520 - (629 + 888)]]] = v76[v78[9 - 5]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[1 + 2]] + v78[173 - (113 + 56)];
									else
										local v2928 = 1253 - (521 + 732);
										local v2929;
										while true do
											if (v2928 == (4 - 1)) then
												v70 = v70 + (1539 - (99 + 1439));
												v78 = v66[v70];
												v76[v78[2 + 0]] = v76[v78[9 - 6]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[7 - 5]] = v78[411 - (39 + 369)];
												v2928 = 1963 - (870 + 1089);
											end
											if (v2928 == 5) then
												v76[v2929] = v76[v2929](v13(v76, v2929 + (796 - (564 + 231)), v78[3]));
												break;
											end
											if (v2928 == (1925 - (1893 + 28))) then
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[528 - (140 + 386)]] = v78[3];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v2929 = v78[1 + 1];
												v2928 = 2 + 3;
											end
											if (v2928 == (1917 - (485 + 1431))) then
												v78 = v66[v70];
												v76[v78[4 - 2]] = v78[4 - 1];
												v70 = v70 + 1 + 0;
												v78 = v66[v70];
												v76[v78[2 + 0]] = v78[11 - 8];
												v70 = v70 + 1;
												v2928 = 2;
											end
											if (v2928 == (1 + 1)) then
												v78 = v66[v70];
												v2929 = v78[2];
												v76[v2929] = v76[v2929](v13(v76, v2929 + 1, v78[1184 - (945 + 236)]));
												v70 = v70 + (2 - 1);
												v78 = v66[v70];
												v76[v78[1 + 1]][v78[6 - 3]] = v76[v78[4]];
												v2928 = 7 - 4;
											end
											if (v2928 == (0 + 0)) then
												v2929 = nil;
												v76[v78[2]][v78[516 - (383 + 130)]] = v76[v78[907 - (643 + 260)]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[1450 - (109 + 1338)]];
												v70 = v70 + 1 + 0;
												v2928 = 1;
											end
										end
									end
								elseif (v79 <= 243) then
									v76[v78[9 - 7]] = {};
								elseif (v79 == (988 - (338 + 406))) then
									v76[v78[5 - 3]] = v59[v78[3]];
									v70 = v70 + (476 - (20 + 455));
									v78 = v66[v70];
									v76[v78[8 - 6]] = v76[v78[3 - 0]][v78[79 - (39 + 36)]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v76[v78[3 + 1]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1708 - (609 + 1097)]][v76[v78[661 - (543 + 115)]]] = v76[v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[6 - 3]] + v78[6 - 2];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v76[v78[1612 - (1559 + 49)]]];
								else
									local v2940 = 622 - (317 + 305);
									local v2941;
									local v2942;
									local v2943;
									local v2944;
									while true do
										if (v2940 == 2) then
											v78 = v66[v70];
											v76[v78[5 - 3]] = v76[v78[3]];
											v70 = v70 + (4 - 3);
											v78 = v66[v70];
											v2940 = 830 - (509 + 318);
										end
										if ((4023 > 2432) and (v2940 == (1825 - (384 + 1433)))) then
											v76[v78[2]] = v78[3];
											break;
										end
										if (v2940 == (5 + 1)) then
											v78 = v66[v70];
											v2944 = v78[5 - 3];
											v76[v2944] = v76[v2944](v13(v76, v2944 + 1 + 0, v71));
											v70 = v70 + 1;
											v2940 = 7;
										end
										if (v2940 == (30 - 23)) then
											v78 = v66[v70];
											v76[v78[1536 - (198 + 1336)]][v76[v78[1 + 2]]] = v76[v78[1409 - (1149 + 256)]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v2940 = 9 - 1;
										end
										if (v2940 == (1769 - (1280 + 486))) then
											v76[v78[2 - 0]] = v76[v78[3]] + v78[5 - 1];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[1611 - (786 + 822)]][v78[10 - 6]];
											v2940 = 2 + 2;
										end
										if (v2940 == (1 + 0)) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[1462 - (1303 + 157)]] = v59[v78[3]];
											v70 = v70 + 1 + 0;
											v2940 = 1417 - (505 + 910);
										end
										if ((10 - 6) == v2940) then
											v70 = v70 + (869 - (548 + 320));
											v78 = v66[v70];
											v2944 = v78[593 - (52 + 539)];
											v2942, v2943 = v69(v76[v2944](v13(v76, v2944 + 1, v78[558 - (378 + 177)])));
											v2940 = 14 - 9;
										end
										if ((v2940 == (0 - 0)) or (367 > 3112)) then
											v2941 = nil;
											v2942, v2943 = nil;
											v2944 = nil;
											v76[v78[2 + 0]] = v76[v78[210 - (108 + 99)]][v76[v78[3 + 1]]];
											v2940 = 1 - 0;
										end
										if (v2940 == (21 - 16)) then
											v71 = (v2943 + v2944) - (1 + 0);
											v2941 = 0 - 0;
											for v7527 = v2944, v71 do
												v2941 = v2941 + 1;
												v76[v7527] = v2942[v2941];
											end
											v70 = v70 + 1 + 0;
											v2940 = 6;
										end
									end
								end
							elseif (v79 <= (173 + 75)) then
								if (v79 <= (162 + 84)) then
									local v728 = 0;
									local v729;
									local v730;
									local v731;
									local v732;
									while true do
										if ((4874 > 2194) and (v728 == (7 - 4))) then
											v76[v78[2]] = v76[v78[6 - 3]] + v78[2 + 2];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[3]][v78[4]];
											v70 = v70 + (4 - 3);
											v78 = v66[v70];
											v728 = 4 + 0;
										end
										if (v728 == 1) then
											v76[v78[841 - (823 + 16)]] = v76[v78[281 - (19 + 259)]][v76[v78[1824 - (1780 + 40)]]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[4 - 2]] = v59[v78[4 - 1]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v728 = 1 + 1;
										end
										if (v728 == (16 - 12)) then
											v732 = v78[1 + 1];
											v730, v731 = v69(v76[v732](v13(v76, v732 + (3 - 2), v78[1 + 2])));
											v71 = (v731 + v732) - 1;
											v729 = 0 - 0;
											for v5042 = v732, v71 do
												local v5043 = 0 - 0;
												while true do
													if (v5043 == (0 + 0)) then
														v729 = v729 + (1181 - (825 + 355));
														v76[v5042] = v730[v729];
														break;
													end
												end
											end
											v70 = v70 + (861 - (846 + 14));
											v728 = 5 + 0;
										end
										if (v728 == 0) then
											v729 = nil;
											v730, v731 = nil;
											v732 = nil;
											v76[v78[3 - 1]] = v76[v78[373 - (237 + 133)]][v78[1190 - (624 + 562)]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v728 = 1 - 0;
										end
										if (v728 == (2 + 0)) then
											v76[v78[804 - (700 + 102)]] = v76[v78[3]];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[3 - 1]] = v76[v78[7 - 4]] + v78[4 + 0];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v728 = 7 - 4;
										end
										if ((v728 == (1 + 4)) or (4087 < 1158)) then
											v78 = v66[v70];
											v732 = v78[1278 - (735 + 541)];
											v76[v732] = v76[v732](v13(v76, v732 + (841 - (497 + 343)), v71));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[1785 - (995 + 788)]][v76[v78[3]]] = v76[v78[4]];
											break;
										end
									end
								elseif ((v79 == (791 - 544)) or (455 >= 4333)) then
									v76[v78[1 + 1]] = {};
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[4 - 2]][v76[v78[201 - (37 + 161)]]] = v76[v78[7 - 3]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3]] + v78[4 + 0];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[1274 - (357 + 915)]] = v76[v78[678 - (50 + 625)]][v76[v78[1884 - (1624 + 256)]]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2 - 0]] = v76[v78[1526 - (180 + 1343)]][v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1344 - (1057 + 285)]] = v59[v78[1 + 2]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[1405 - (135 + 1268)]] = v76[v78[1424 - (1088 + 333)]][v78[1686 - (1280 + 402)]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3]][v76[v78[2 + 2]]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[1 + 1]][v76[v78[20 - (11 + 6)]]] = v76[v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[3 - 1]] = v78[11 - 8];
								else
									local v2963 = 1736 - (1015 + 721);
									local v2964;
									while true do
										if (v2963 == (20 - 13)) then
											v70 = v70 + (243 - (169 + 73));
											v78 = v66[v70];
											v76[v78[2 - 0]] = v78[1899 - (1052 + 844)];
											break;
										end
										if (v2963 == (20 - 14)) then
											v76[v78[2]] = v76[v78[3]];
											v70 = v70 + (17 - (5 + 11));
											v78 = v66[v70];
											v76[v78[1517 - (210 + 1305)]] = v78[2 + 1];
											v2963 = 12 - 5;
										end
										if (v2963 == 5) then
											v78 = v66[v70];
											v76[v78[749 - (646 + 101)]][v78[379 - (12 + 364)]] = v76[v78[719 - (587 + 128)]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v2963 = 13 - 7;
										end
										if ((3106 > 374) and (v2963 == 3)) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[4 - 2]] = v78[7 - 4];
											v70 = v70 + (228 - (196 + 31));
											v2963 = 2 + 2;
										end
										if (v2963 == (539 - (227 + 310))) then
											v76[v78[2]] = v76[v78[3 + 0]];
											v70 = v70 + (774 - (689 + 84));
											v78 = v66[v70];
											v76[v78[1377 - (404 + 971)]] = v78[6 - 3];
											v2963 = 3;
										end
										if ((v2963 == (1 + 3)) or (4992 <= 1895)) then
											v78 = v66[v70];
											v2964 = v78[1399 - (764 + 633)];
											v76[v2964] = v76[v2964](v13(v76, v2964 + 1 + 0, v78[3]));
											v70 = v70 + 1;
											v2963 = 3 + 2;
										end
										if ((736 < 4035) and (v2963 == 1)) then
											v78 = v66[v70];
											v76[v78[208 - (114 + 92)]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v2963 = 531 - (4 + 525);
										end
										if (v2963 == (0 - 0)) then
											v2964 = nil;
											v2964 = v78[2 - 0];
											v76[v2964] = v76[v2964](v13(v76, v2964 + (1314 - (636 + 677)), v78[9 - 6]));
											v70 = v70 + (1355 - (447 + 907));
											v2963 = 1;
										end
									end
								end
							elseif ((10 <= 801) and (v79 <= (2048 - (303 + 1495)))) then
								if (v79 > (646 - 397)) then
									local v2965;
									v76[v78[5 - 3]] = v59[v78[6 - 3]];
									v70 = v70 + (1817 - (1446 + 370));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[554 - (245 + 306)]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[3 + 0]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[10 - 7]][v78[2 + 2]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[1476 - (536 + 937)]] + v76[v78[10 - 6]];
									v70 = v70 + (153 - (143 + 9));
									v78 = v66[v70];
									v2965 = v78[2];
									do
										return v76[v2965](v13(v76, v2965 + 1, v78[3]));
									end
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v2965 = v78[1076 - (474 + 600)];
									do
										return v13(v76, v2965, v71);
									end
									v70 = v70 + 1;
									v78 = v66[v70];
									v70 = v78[7 - 4];
								else
									v76[v78[6 - 4]] = v76[v78[3 + 0]] % v78[11 - 7];
								end
							elseif (v79 == (196 + 55)) then
								local v2979 = 0 - 0;
								local v2980;
								local v2981;
								local v2982;
								while true do
									if (v2979 == (1 + 7)) then
										if (v2980 > (1488 - (49 + 1439))) then
											if (v2981 > v76[v2982 + 1 + 0]) then
												v70 = v78[11 - 8];
											else
												v76[v2982 + (1993 - (769 + 1221))] = v2981;
											end
										elseif ((v2981 < v76[v2982 + 1 + 0]) or (4302 <= 150)) then
											v70 = v78[3];
										else
											v76[v2982 + (1075 - (270 + 802))] = v2981;
										end
										break;
									end
									if ((1858 - (301 + 1555)) == v2979) then
										v76[v78[2]] = {};
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v2979 = 1 + 2;
									end
									if ((3099 <= 4149) and (v2979 == (82 - (22 + 53)))) then
										v2982 = v78[1 + 1];
										v2981 = v76[v2982];
										v2980 = v76[v2982 + (9 - 7)];
										v2979 = 8;
									end
									if ((3567 == 3567) and (v2979 == (11 - 6))) then
										v76[v78[2]] = v76[v78[1 + 2]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v2979 = 5 + 1;
									end
									if (0 == v2979) then
										v2980 = nil;
										v2981 = nil;
										v2982 = nil;
										v2979 = 1 + 0;
									end
									if ((2261 >= 1221) and (v2979 == (1 + 3))) then
										v76[v78[2]] = v78[95 - (41 + 51)];
										v70 = v70 + 1;
										v78 = v66[v70];
										v2979 = 608 - (391 + 212);
									end
									if ((2259 == 2259) and (v2979 == (5 - 2))) then
										v76[v78[2 + 0]] = v76[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v2979 = 3 + 1;
									end
									if ((3391 >= 237) and (v2979 == (2 - 1))) then
										v76[v78[2 - 0]] = v76[v78[5 - 2]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v2979 = 1 + 1;
									end
									if (v2979 == (22 - 16)) then
										v76[v78[2 + 0]] = v78[5 - 2];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v2979 = 7;
									end
								end
							else
								local v2983 = v78[378 - (155 + 221)];
								local v2984, v2985 = v69(v76[v2983](v13(v76, v2983 + 1 + 0, v78[1460 - (366 + 1091)])));
								v71 = (v2985 + v2983) - (1 + 0);
								local v2986 = 0;
								for v4559 = v2983, v71 do
									v2986 = v2986 + 1;
									v76[v4559] = v2984[v2986];
								end
							end
						elseif (v79 <= (545 - (90 + 196))) then
							if (v79 <= 255) then
								if ((v79 <= (2027 - (1710 + 64))) or (981 < 446)) then
									local v733;
									v76[v78[3 - 1]] = v59[v78[14 - 11]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[9 - 6]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 - 0]] = v76[v78[3]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[270 - (72 + 195)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v733 = v78[1180 - (28 + 1150)];
									do
										return v76[v733](v13(v76, v733 + 1, v78[1 + 2]));
									end
									v70 = v70 + (599 - (102 + 496));
									v78 = v66[v70];
									v733 = v78[446 - (181 + 263)];
									do
										return v13(v76, v733, v71);
									end
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v70 = v78[3];
								elseif ((v79 == (91 + 163)) or (3804 >= 4844)) then
									local v2987 = 0 - 0;
									local v2988;
									local v2989;
									local v2990;
									local v2991;
									while true do
										if (v2987 == (4 + 1)) then
											v2991 = v78[2];
											v2989, v2990 = v69(v76[v2991](v13(v76, v2991 + 1, v78[1511 - (822 + 686)])));
											v71 = (v2990 + v2991) - (2 - 1);
											v2987 = 14 - 8;
										end
										if ((4516 > 2745) and ((5 + 4) == v2987)) then
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v70 = v78[864 - (252 + 609)];
											break;
										end
										if ((0 + 0) == v2987) then
											v2988 = nil;
											v2989, v2990 = nil;
											v2991 = nil;
											v2987 = 1;
										end
										if (v2987 == (2 + 1)) then
											v76[v78[2]] = v76[v78[4 - 1]] + v78[4];
											v70 = v70 + (959 - (578 + 380));
											v78 = v66[v70];
											v2987 = 1 + 3;
										end
										if (v2987 == (1720 - (1431 + 285))) then
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v2987 = 9 - 4;
										end
										if (v2987 == (1 - 0)) then
											v76[v78[2]] = v59[v78[11 - 8]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v2987 = 3 - 1;
										end
										if ((v2987 == (1120 - (1013 + 99))) or (4690 <= 153)) then
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[959 - (449 + 508)]] = v78[3 - 0];
											v2987 = 1901 - (1562 + 330);
										end
										if ((4559 > 1098) and (v2987 == 2)) then
											v76[v78[1974 - (1870 + 102)]] = v76[v78[1 + 2]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v2987 = 3 - 0;
										end
										if ((v2987 == 6) or (4166 < 3704)) then
											v2988 = 0;
											for v7530 = v2991, v71 do
												v2988 = v2988 + (1 - 0);
												v76[v7530] = v2989[v2988];
											end
											v70 = v70 + 1 + 0;
											v2987 = 7 + 0;
										end
										if (v2987 == (3 + 4)) then
											v78 = v66[v70];
											v2991 = v78[1 + 1];
											v76[v2991](v13(v76, v2991 + 1, v71));
											v2987 = 1002 - (550 + 444);
										end
									end
								else
									local v2992 = 0 + 0;
									while true do
										if (v2992 == (5 - 2)) then
											v76[v78[2 + 0]] = v76[v78[2 + 1]][v76[v78[2 + 2]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v2992 = 1 + 3;
										end
										if (v2992 == (0 - 0)) then
											v76[v78[582 - (544 + 36)]] = v76[v78[3]][v78[1235 - (70 + 1161)]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v2992 = 758 - (130 + 627);
										end
										if ((3274 <= 3457) and (v2992 == (1 - 0))) then
											v76[v78[313 - (121 + 190)]] = v76[v78[11 - 8]][v76[v78[4 + 0]]];
											v70 = v70 + (4 - 3);
											v78 = v66[v70];
											v2992 = 324 - (255 + 67);
										end
										if ((3445 == 3445) and (v2992 == (4 + 1))) then
											v76[v78[4 - 2]][v76[v78[281 - (225 + 53)]]] = v76[v78[4 - 0]];
											v70 = v70 + (1300 - (738 + 561));
											v78 = v66[v70];
											v2992 = 20 - 14;
										end
										if (v2992 == 7) then
											v70 = v78[3 + 0];
											break;
										end
										if ((6 + 0) == v2992) then
											v76[v78[1613 - (1450 + 161)]] = v78[3];
											v70 = v70 + (1729 - (183 + 1545));
											v78 = v66[v70];
											v2992 = 4 + 3;
										end
										if ((v2992 == (1174 - (736 + 434))) or (1183 <= 256)) then
											v76[v78[2]] = v76[v78[3 + 0]][v76[v78[18 - 14]]];
											v70 = v70 + (40 - (32 + 7));
											v78 = v66[v70];
											v2992 = 19 - 14;
										end
										if (v2992 == 2) then
											v76[v78[375 - (103 + 270)]] = v76[v78[1 + 2]][v78[3 + 1]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v2992 = 3;
										end
									end
								end
							elseif (v79 <= (1710 - (1021 + 432))) then
								if (v79 == (983 - 727)) then
									local v2993 = 0;
									while true do
										if (v2993 == 2) then
											v78 = v66[v70];
											v76[v78[1416 - (153 + 1261)]] = v76[v78[1 + 2]][v78[2 + 2]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v2993 = 3;
										end
										if ((1657 == 1657) and (v2993 == (893 - (800 + 88)))) then
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[8 - 5]][v78[825 - (358 + 463)]];
											v70 = v70 + (259 - (176 + 82));
											v78 = v66[v70];
											v2993 = 14 - 8;
										end
										if (v2993 == (776 - (543 + 227))) then
											v76[v78[2]] = v76[v78[3]][v76[v78[4 + 0]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											if not v76[v78[1 + 1]] then
												v70 = v70 + 1;
											else
												v70 = v78[3];
											end
											break;
										end
										if ((2170 == 2170) and (v2993 == 4)) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[7 - 5]] = v60[v78[1789 - (1509 + 277)]];
											v70 = v70 + 1;
											v2993 = 1965 - (1453 + 507);
										end
										if ((v2993 == (1 + 0)) or (536 >= 2893)) then
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[7 - 5]] = v60[v78[1 + 2]];
											v70 = v70 + 1;
											v2993 = 2;
										end
										if ((3732 == 3732) and ((1 + 2) == v2993)) then
											v76[v78[4 - 2]] = v76[v78[1034 - (22 + 1009)]][v76[v78[4]]];
											v70 = v70 + (4 - 3);
											v78 = v66[v70];
											v76[v78[1942 - (245 + 1695)]] = v76[v78[1038 - (611 + 424)]][v78[302 - (280 + 18)]];
											v2993 = 3 + 1;
										end
										if ((v2993 == (0 - 0)) or (2072 < 1735)) then
											v76[v78[4 - 2]] = v76[v78[281 - (109 + 169)]][v76[v78[1 + 3]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[1 + 2]][v78[2 + 2]];
											v2993 = 1;
										end
									end
								else
									local v2994 = 0 + 0;
									while true do
										if ((2904 <= 4147) and (v2994 == (15 - 11))) then
											v76[v78[4 - 2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v2994 = 1347 - (875 + 467);
										end
										if (v2994 == (3 + 2)) then
											v70 = v78[13 - 10];
											break;
										end
										if (v2994 == (7 - 4)) then
											v76[v78[6 - 4]] = v76[v78[802 - (717 + 82)]] + v78[4];
											v70 = v70 + (1021 - (693 + 327));
											v78 = v66[v70];
											v2994 = 4;
										end
										if ((v2994 == (1913 - (746 + 1165))) or (261 > 2891)) then
											v76[v78[2]][v76[v78[1738 - (1473 + 262)]]] = v76[v78[4 + 0]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v2994 = 1876 - (874 + 999);
										end
										if (v2994 == (0 - 0)) then
											v76[v78[2 + 0]] = v76[v78[7 - 4]][v78[4 + 0]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v2994 = 1 + 0;
										end
										if (v2994 == (4 - 3)) then
											v76[v78[3 - 1]] = v76[v78[3 + 0]][v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v2994 = 2 + 0;
										end
									end
								end
							elseif ((v79 == (716 - (388 + 70))) or (3144 >= 4632)) then
								v76[v78[2 + 0]] = v76[v78[3 + 0]][v78[3 + 1]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[585 - (319 + 263)]][v78[15 - 11]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[2 + 1]][v76[v78[3 + 1]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[816 - (94 + 720)]] = v76[v78[3]][v78[4]];
								v70 = v70 + (379 - (78 + 300));
								v78 = v66[v70];
								v76[v78[1919 - (774 + 1143)]] = v76[v78[3]][v76[v78[2 + 2]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[193 - (18 + 173)]][v76[v78[3]]] = v76[v78[10 - 6]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[4 - 2]] = v78[14 - 11];
							else
								local v3009 = 0;
								while true do
									if ((v3009 == (1488 - (677 + 808))) or (4536 <= 29)) then
										v76[v78[2]] = v76[v78[1 + 2]][v76[v78[4]]];
										v70 = v70 + (971 - (528 + 442));
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[3]][v78[351 - (116 + 231)]];
										break;
									end
									if (((1 + 0) == v3009) or (4274 < 2645)) then
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[7 - 5]] = v76[v78[1 + 2]] + v78[1474 - (1242 + 228)];
										v70 = v70 + 1;
										v3009 = 5 - 3;
									end
									if (v3009 == (846 - (320 + 524))) then
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]] + v78[9 - 5];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v3009 = 13 - 10;
									end
									if (v3009 == (0 + 0)) then
										v76[v78[5 - 3]] = v76[v78[3]][v76[v78[4]]];
										v70 = v70 + (476 - (63 + 412));
										v78 = v66[v70];
										v76[v78[1866 - (1299 + 565)]][v76[v78[8 - 5]]] = v76[v78[1 + 3]];
										v3009 = 4 - 3;
									end
								end
							end
						elseif ((3026 == 3026) and (v79 <= (72 + 190))) then
							if (v79 <= (230 + 30)) then
								local v745 = 0 + 0;
								local v746;
								while true do
									if (v745 == 0) then
										v746 = nil;
										v76[v78[6 - 4]] = v76[v78[331 - (79 + 249)]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[1632 - (305 + 1325)]] = v78[1731 - (1585 + 143)];
										v70 = v70 + (3 - 2);
										v745 = 1;
									end
									if ((v745 == 3) or (1254 >= 4495)) then
										v70 = v70 + (1831 - (1727 + 103));
										v78 = v66[v70];
										v76[v78[6 - 4]] = v78[3 + 0];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v78[9 - 6];
										v745 = 278 - (135 + 139);
									end
									if (v745 == (1 + 0)) then
										v78 = v66[v70];
										v76[v78[2 - 0]] = v78[3 + 0];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v746 = v78[1 + 1];
										v76[v746] = v76[v746](v13(v76, v746 + 1 + 0, v78[9 - 6]));
										v745 = 1706 - (1084 + 620);
									end
									if (v745 == 4) then
										v70 = v70 + (1054 - (404 + 649));
										v78 = v66[v70];
										v746 = v78[816 - (318 + 496)];
										v76[v746] = v76[v746](v13(v76, v746 + (1883 - (1730 + 152)), v78[9 - 6]));
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v745 = 5;
									end
									if ((v745 == (1863 - (527 + 1334))) or (4663 <= 223)) then
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1948 - (464 + 1482)]][v78[6 - 3]] = v76[v78[1 + 3]];
										v70 = v70 + (570 - (485 + 84));
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[3 + 0]];
										v745 = 2 + 1;
									end
									if ((4 + 1) == v745) then
										v76[v78[1 + 1]][v78[7 - 4]] = v76[v78[2 + 2]];
										break;
									end
								end
							elseif ((991 <= 3892) and (v79 > (729 - 468))) then
								local v3010 = 0;
								while true do
									if (v3010 == 6) then
										v76[v78[1003 - (359 + 642)]] = v78[3];
										break;
									end
									if (v3010 == (1 + 4)) then
										v76[v78[2]] = v76[v78[2 + 1]][v76[v78[1348 - (564 + 780)]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3010 = 21 - 15;
									end
									if (v3010 == (1 + 2)) then
										v76[v78[1 + 1]] = v76[v78[5 - 2]][v76[v78[5 - 1]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3010 = 4;
									end
									if (v3010 == (9 - 5)) then
										v76[v78[2]] = v76[v78[2 + 1]][v78[1430 - (909 + 517)]];
										v70 = v70 + (460 - (432 + 27));
										v78 = v66[v70];
										v3010 = 1741 - (69 + 1667);
									end
									if (v3010 == 0) then
										v76[v78[1 + 1]] = v76[v78[125 - (16 + 106)]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3010 = 1 + 0;
									end
									if (v3010 == 2) then
										v76[v78[2]] = v76[v78[3]] + v78[1256 - (1178 + 74)];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v3010 = 10 - 7;
									end
									if (v3010 == 1) then
										v76[v78[449 - (312 + 135)]][v76[v78[2 + 1]]] = v76[v78[1 + 3]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v3010 = 4 - 2;
									end
								end
							else
								v76[v78[1831 - (492 + 1337)]] = v76[v78[3]][v78[2 + 2]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1392 - (814 + 576)]][v76[v78[6 - 3]]] = v76[v78[9 - 5]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[8 - 5]] + v78[12 - 8];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[7 - 4]][v76[v78[4]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v78[1 + 2];
							end
						elseif ((v79 <= (777 - 513)) or (926 >= 2043)) then
							if ((v79 == (84 + 179)) or (738 == 2554)) then
								v76[v78[1361 - (978 + 381)]] = v59[v78[1 + 2]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v59[v78[2 + 1]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v59[v78[8 - 5]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[4 - 2]] = v76[v78[2 + 1]][v78[2 + 2]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[571 - (397 + 172)]] = #v76[v78[3]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1119 - (267 + 850)]] = v76[v78[3]][v76[v78[4]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[9 - 6]][v76[v78[998 - (41 + 953)]]];
								v70 = v70 + (4 - 3);
								v78 = v66[v70];
								do
									return v76[v78[1 + 1]];
								end
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								do
									return;
								end
							else
								v76[v78[822 - (817 + 3)]] = v78[1388 - (867 + 518)];
							end
						elseif (v79 == (799 - 534)) then
							local v3035 = v78[2];
							local v3036 = v76[v3035];
							local v3037 = v78[3];
							for v4587 = 331 - (256 + 74), v3037 do
								v3036[v4587] = v76[v3035 + v4587];
							end
						else
							v76[v78[2 + 0]] = v76[v78[2 + 1]][v78[16 - 12]];
							v70 = v70 + (188 - (111 + 76));
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[3]][v76[v78[1055 - (100 + 951)]]];
							v70 = v70 + (626 - (369 + 256));
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[3]][v78[4]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[8 - 6]] = v76[v78[1 + 2]][v78[67 - (25 + 38)]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[1038 - (890 + 146)]] = v76[v78[7 - 4]][v76[v78[4 + 0]]];
							v70 = v70 + (1585 - (549 + 1035));
							v78 = v66[v70];
							v76[v78[3 - 1]][v76[v78[1 + 2]]] = v76[v78[3 + 1]];
							v70 = v70 + (962 - (546 + 415));
							v78 = v66[v70];
							v70 = v78[1027 - (175 + 849)];
						end
					elseif (v79 <= (1957 - (734 + 930))) then
						if (v79 <= (1694 - (1093 + 322))) then
							if (v79 <= 272) then
								if (v79 <= (1078 - 809)) then
									if (v79 <= (1568 - (1256 + 45))) then
										local v747;
										local v748, v749;
										local v750;
										v76[v78[1847 - (66 + 1779)]] = v59[v78[1776 - (920 + 853)]];
										v70 = v70 + (59 - (6 + 52));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[7 - 5]] = v76[v78[6 - 3]] + v78[4];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[3 + 0]] + v78[91 - (11 + 76)];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[825 - (560 + 262)]][v78[4]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v750 = v78[1859 - (12 + 1845)];
										v748, v749 = v69(v76[v750](v13(v76, v750 + 1 + 0, v78[1320 - (1278 + 39)])));
										v71 = (v749 + v750) - 1;
										v747 = 0 - 0;
										for v999 = v750, v71 do
											v747 = v747 + 1 + 0;
											v76[v999] = v748[v747];
										end
										v70 = v70 + 1;
										v78 = v66[v70];
										v750 = v78[3 - 1];
										v76[v750] = v76[v750](v13(v76, v750 + (3 - 2), v71));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]][v76[v78[3]]] = v76[v78[2 + 2]];
										v70 = v70 + (1537 - (385 + 1151));
										v78 = v66[v70];
										v76[v78[2]] = v78[1453 - (240 + 1210)];
										v70 = v70 + (1666 - (816 + 849));
										v78 = v66[v70];
										v70 = v78[1857 - (99 + 1755)];
									elseif (v79 > (368 - 100)) then
										v76[v78[786 - (424 + 360)]] = v76[v78[3]][v78[1378 - (41 + 1333)]];
										v70 = v70 + (546 - (161 + 384));
										v78 = v66[v70];
										v76[v78[933 - (355 + 576)]] = v76[v78[3]][v76[v78[691 - (348 + 339)]]];
										v70 = v70 + (4 - 3);
										v78 = v66[v70];
										v76[v78[9 - 7]] = v76[v78[471 - (285 + 183)]][v78[9 - 5]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1972 - (928 + 1042)]] = v76[v78[1579 - (545 + 1031)]][v76[v78[11 - 7]]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[2 - 0]][v76[v78[928 - (345 + 580)]]] = v76[v78[7 - 3]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[311 - (136 + 173)]] = v78[3];
										v70 = v70 + (1904 - (1448 + 455));
										v78 = v66[v70];
										v70 = v78[3];
									else
										local v3064;
										v76[v78[5 - 3]] = v59[v78[1 + 2]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v59[v78[2 + 1]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[1563 - (1137 + 424)]] = v59[v78[1930 - (372 + 1555)]];
										v70 = v70 + (382 - (174 + 207));
										v78 = v66[v70];
										v3064 = v78[1 + 1];
										v76[v3064] = v76[v3064](v13(v76, v3064 + 1, v78[3 + 0]));
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[73 - (65 + 6)]] = v76[v78[1314 - (1041 + 270)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[3 - 1]] = v59[v78[2 + 1]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[1712 - (222 + 1488)]] = v76[v78[3 + 0]] + v78[4 + 0];
										v70 = v70 + (1523 - (1023 + 499));
										v78 = v66[v70];
										v59[v78[4 - 1]] = v76[v78[6 - 4]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v78[3];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v70 = v78[3 + 0];
									end
								elseif (v79 <= (107 + 163)) then
									v76[v78[809 - (134 + 673)]] = v76[v78[1060 - (810 + 247)]][v78[1464 - (753 + 707)]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[3 - 1]] = v76[v78[3]][v78[604 - (462 + 138)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[10 - 7]][v76[v78[664 - (642 + 18)]]];
									v70 = v70 + (979 - (155 + 823));
									v78 = v66[v70];
									v76[v78[2 + 0]][v76[v78[3]]] = v76[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3 + 0]] + v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3 + 0];
								elseif ((32 < 2938) and (v79 == (149 + 122))) then
									local v3082 = 1453 - (799 + 654);
									local v3083;
									local v3084;
									local v3085;
									local v3086;
									while true do
										if (v3082 == 2) then
											v76[v78[3 - 1]] = v76[v78[10 - 7]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v3086 = v78[2];
											v3084, v3085 = v69(v76[v3086](v13(v76, v3086 + (634 - (527 + 106)), v78[5 - 2])));
											v71 = (v3085 + v3086) - (1 - 0);
											v3082 = 1 + 2;
										end
										if (v3082 == (4 + 0)) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[1 + 1]][v76[v78[9 - 6]]] = v76[v78[4 + 0]];
											v70 = v70 + (734 - (589 + 144));
											v78 = v66[v70];
											v76[v78[2 + 0]] = v78[1 + 2];
											v3082 = 533 - (179 + 349);
										end
										if (v3082 == (4 - 3)) then
											v76[v78[5 - 3]] = v76[v78[3]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[3]] + v78[3 + 1];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v3082 = 2 + 0;
										end
										if (v3082 == (0 - 0)) then
											v3083 = nil;
											v3084, v3085 = nil;
											v3086 = nil;
											v76[v78[2 + 0]] = v59[v78[3 + 0]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v3082 = 1 + 0;
										end
										if (v3082 == (491 - (242 + 244))) then
											v70 = v70 + (408 - (303 + 104));
											v78 = v66[v70];
											v70 = v78[3];
											break;
										end
										if ((v3082 == (9 - 6)) or (1345 == 1361)) then
											v3083 = 0 + 0;
											for v7533 = v3086, v71 do
												v3083 = v3083 + (644 - (411 + 232));
												v76[v7533] = v3084[v3083];
											end
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v3086 = v78[2];
											v76[v3086] = v76[v3086](v13(v76, v3086 + 1, v71));
											v3082 = 1 + 3;
										end
									end
								else
									local v3087 = 0 - 0;
									while true do
										if (v3087 == (6 - 3)) then
											v76[v78[2]] = v59[v78[3 + 0]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[8 - 5]][v78[485 - (164 + 317)]];
											v70 = v70 + (100 - (65 + 34));
											v78 = v66[v70];
											v76[v78[5 - 3]] = v76[v78[3]][v76[v78[4]]];
											v70 = v70 + 1;
											v3087 = 3 + 1;
										end
										if (v3087 == 16) then
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[321 - (61 + 257)]][v78[1883 - (398 + 1481)]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[6 - 3]][v76[v78[3 + 1]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2 - 0]][v76[v78[689 - (338 + 348)]]] = v76[v78[4]];
											v3087 = 1395 - (401 + 977);
										end
										if ((v3087 == (24 - 14)) or (4472 < 3295)) then
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3 + 0]][v76[v78[49 - (17 + 28)]]];
											v70 = v70 + (186 - (27 + 158));
											v78 = v66[v70];
											v76[v78[5 - 3]] = v76[v78[1 + 2]][v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[1 + 1]] = v59[v78[3]];
											v3087 = 1304 - (372 + 921);
										end
										if (v3087 == 27) then
											v76[v78[2 + 0]] = v76[v78[486 - (350 + 133)]][v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[3]][v76[v78[2 + 2]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[1540 - (1432 + 106)]] = v76[v78[2 + 1]][v78[5 - 1]];
											v70 = v70 + 1 + 0;
											v3087 = 1474 - (1075 + 371);
										end
										if ((4314 >= 3679) and (v3087 == (7 - 5))) then
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v76[v78[1 + 3]]];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[3 + 0]][v78[1551 - (234 + 1313)]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v3087 = 3;
										end
										if ((7 + 15) == v3087) then
											v78 = v66[v70];
											v76[v78[910 - (597 + 311)]][v76[v78[30 - (13 + 14)]]] = v76[v78[1 + 3]];
											v70 = v70 + (1054 - (713 + 340));
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[7 - 4]] + v78[4 + 0];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[354 - (265 + 86)]][v76[v78[4]]];
											v3087 = 71 - 48;
										end
										if (v3087 == (7 + 16)) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[873 - (747 + 124)]] = v76[v78[1459 - (692 + 764)]][v78[4]];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[11 - 8]][v78[3 + 1]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v3087 = 24;
										end
										if (v3087 == (1035 - (283 + 747))) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[908 - (816 + 89)]][v78[15 - 11]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[1080 - (709 + 369)]] = v59[v78[3]];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v3087 = 13 - 7;
										end
										if (v3087 == (22 - 8)) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[3 + 0]][v76[v78[4]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[701 - (478 + 221)]][v76[v78[775 - (607 + 165)]]] = v76[v78[1248 - (1108 + 136)]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v3087 = 32 - 17;
										end
										if (v3087 == (22 - 14)) then
											v70 = v70 + (637 - (352 + 284));
											v78 = v66[v70];
											v76[v78[1 + 1]] = v59[v78[894 - (352 + 539)]];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[3]][v78[4 + 0]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v3087 = 21 - 12;
										end
										if (v3087 == (792 - (714 + 52))) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[1815 - (1482 + 331)]] = v76[v78[1204 - (766 + 435)]][v76[v78[2 + 2]]];
											v70 = v70 + (1820 - (62 + 1757));
											v78 = v66[v70];
											v76[v78[1370 - (833 + 535)]] = v76[v78[3]][v78[1 + 3]];
											v70 = v70 + (139 - (5 + 133));
											v78 = v66[v70];
											v3087 = 22 + 5;
										end
										if (v3087 == 29) then
											v70 = v70 + (521 - (393 + 127));
											v78 = v66[v70];
											v76[v78[1058 - (705 + 351)]] = v76[v78[1 + 2]][v76[v78[1 + 3]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[1159 - (414 + 743)]] = v76[v78[3 + 0]][v78[4]];
											break;
										end
										if (((496 - (65 + 407)) == v3087) or (4795 <= 1141)) then
											v76[v78[3 - 1]] = v76[v78[6 - 3]][v76[v78[18 - 14]]];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[1547 - (116 + 1428)]][v78[16 - 12]];
											v70 = v70 + (1303 - (79 + 1223));
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[391 - (353 + 35)]][v76[v78[8 - 4]]];
											v70 = v70 + (2 - 1);
											v3087 = 1965 - (490 + 1450);
										end
										if (v3087 == 4) then
											v78 = v66[v70];
											v76[v78[1348 - (778 + 568)]][v76[v78[3 + 0]]] = v76[v78[1298 - (914 + 380)]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[2 + 1]] + v78[536 - (126 + 406)];
											v70 = v70 + (1191 - (655 + 535));
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[8 - 5]][v76[v78[10 - 6]]];
											v3087 = 11 - 6;
										end
										if (v3087 == (2 + 11)) then
											v78 = v66[v70];
											v76[v78[1300 - (711 + 587)]] = v76[v78[886 - (168 + 715)]][v76[v78[8 - 4]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2 - 0]] = v76[v78[295 - (232 + 60)]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[3]][v78[41 - (22 + 15)]];
											v3087 = 14;
										end
										if (v3087 == (25 - 14)) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[2 + 1]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[4 - 2]] = v76[v78[1176 - (797 + 376)]][v76[v78[4 + 0]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v3087 = 9 + 3;
										end
										if ((v3087 == (25 - 19)) or (517 == 1199)) then
											v76[v78[2 + 0]] = v76[v78[3]][v78[17 - 13]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[5 - 3]] = v76[v78[10 - 7]][v76[v78[1381 - (1071 + 306)]]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[1193 - (412 + 779)]][v76[v78[5 - 2]]] = v76[v78[8 - 4]];
											v70 = v70 + 1;
											v3087 = 619 - (427 + 185);
										end
										if (v3087 == 0) then
											v76[v78[1653 - (1444 + 207)]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[7 - 4]][v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[4 - 2]] = v76[v78[3 - 0]][v76[v78[643 - (261 + 378)]]];
											v70 = v70 + 1 + 0;
											v3087 = 1;
										end
										if (v3087 == (1 + 8)) then
											v76[v78[6 - 4]] = v76[v78[4 - 1]][v76[v78[4]]];
											v70 = v70 + (349 - (22 + 326));
											v78 = v66[v70];
											v76[v78[6 - 4]][v76[v78[3]]] = v76[v78[1218 - (836 + 378)]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[7 - 4]] + v78[6 - 2];
											v70 = v70 + (3 - 2);
											v3087 = 1 + 9;
										end
										if ((4894 >= 491) and (v3087 == 7)) then
											v78 = v66[v70];
											v76[v78[1289 - (742 + 545)]] = v76[v78[6 - 3]] + v78[14 - 10];
											v70 = v70 + (1202 - (334 + 867));
											v78 = v66[v70];
											v76[v78[4 - 2]] = v76[v78[3]][v76[v78[4]]];
											v70 = v70 + (1405 - (317 + 1087));
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[4 - 1]][v78[674 - (97 + 573)]];
											v3087 = 30 - 22;
										end
										if ((4126 == 4126) and (v3087 == (2 + 10))) then
											v76[v78[1 + 1]][v76[v78[7 - 4]]] = v76[v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[1337 - (1234 + 101)]] = v76[v78[4 - 1]] + v78[3 + 1];
											v70 = v70 + (4 - 3);
											v78 = v66[v70];
											v76[v78[4 - 2]] = v76[v78[1203 - (711 + 489)]] + v78[4 + 0];
											v70 = v70 + (3 - 2);
											v3087 = 11 + 2;
										end
										if (v3087 == (38 - 19)) then
											v78 = v66[v70];
											v76[v78[4 - 2]] = v76[v78[645 - (483 + 159)]][v76[v78[4 + 0]]];
											v70 = v70 + (318 - (200 + 117));
											v78 = v66[v70];
											v76[v78[2]][v76[v78[50 - (5 + 42)]]] = v76[v78[13 - 9]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[9 - 7]] = v76[v78[539 - (298 + 238)]] + v78[1825 - (1370 + 451)];
											v3087 = 20;
										end
										if (v3087 == (12 + 9)) then
											v76[v78[2]] = v76[v78[3]][v78[1265 - (493 + 768)]];
											v70 = v70 + (1178 - (622 + 555));
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[622 - (581 + 38)]][v76[v78[3 + 1]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = #v76[v78[6 - 3]];
											v70 = v70 + (4 - 3);
											v3087 = 1944 - (567 + 1355);
										end
										if ((v3087 == (1589 - (801 + 763))) or (659 >= 1612)) then
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[1 + 2]] + v76[v78[408 - (251 + 153)]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[904 - (709 + 193)]][v76[v78[1890 - (737 + 1150)]]] = v76[v78[2 + 2]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[1034 - (755 + 277)]] = v76[v78[464 - (182 + 279)]] + v78[4];
											v3087 = 386 - (323 + 37);
										end
										if (v3087 == (32 - 14)) then
											v76[v78[1 + 1]] = v76[v78[1018 - (992 + 23)]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[1 + 1]] = v59[v78[8 - 5]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[647 - (269 + 376)]] = v76[v78[6 - 3]][v78[475 - (169 + 302)]];
											v70 = v70 + 1;
											v3087 = 13 + 6;
										end
										if (v3087 == (3 + 25)) then
											v78 = v66[v70];
											v76[v78[1329 - (623 + 704)]] = v76[v78[2 + 1]] + v76[v78[821 - (420 + 397)]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[1 + 1]][v76[v78[1 + 2]]] = v76[v78[11 - 7]];
											v70 = v70 + (4 - 3);
											v78 = v66[v70];
											v76[v78[7 - 5]] = v76[v78[2 + 1]] + v78[1 + 3];
											v3087 = 82 - 53;
										end
										if (v3087 == (2 - 1)) then
											v78 = v66[v70];
											v76[v78[5 - 3]][v76[v78[6 - 3]]] = v76[v78[1062 - (440 + 618)]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[1038 - (593 + 442)]] + v78[1 + 3];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[1047 - (801 + 243)]] + v78[4];
											v3087 = 5 - 3;
										end
										if (v3087 == (19 - 4)) then
											v76[v78[3 - 1]] = v76[v78[3 + 0]] + v78[4];
											v70 = v70 + (123 - (41 + 81));
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v76[v78[13 - 9]]];
											v70 = v70 + (507 - (145 + 361));
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[3]][v78[7 - 3]];
											v70 = v70 + 1;
											v3087 = 172 - (28 + 128);
										end
										if (v3087 == (30 - 13)) then
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[88 - (33 + 52)]] + v78[6 - 2];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[9 - 7]] = v76[v78[10 - 7]][v76[v78[3 + 1]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v3087 = 1364 - (1135 + 211);
										end
										if (v3087 == (20 + 0)) then
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[3]][v76[v78[1099 - (380 + 715)]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[1972 - (462 + 1506)]];
											v70 = v70 + (1823 - (1182 + 640));
											v78 = v66[v70];
											v3087 = 21;
										end
									end
								end
							elseif (v79 <= 275) then
								if (v79 <= (726 - 453)) then
									local v778 = 0 - 0;
									while true do
										if (v778 == (2 + 1)) then
											v76[v78[8 - 6]] = v76[v78[2 + 1]][v78[347 - (323 + 20)]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v778 = 4 + 0;
										end
										if (v778 == 5) then
											v76[v78[2 + 0]] = v78[6 - 3];
											v70 = v70 + (1175 - (769 + 405));
											v78 = v66[v70];
											v778 = 6;
										end
										if ((1402 <= 1983) and (v778 == (14 - 10))) then
											v76[v78[2]][v76[v78[88 - (9 + 76)]]] = v76[v78[258 - (244 + 10)]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v778 = 1310 - (601 + 704);
										end
										if (v778 == (1 + 0)) then
											v76[v78[524 - (23 + 499)]] = v76[v78[1 + 2]][v76[v78[4 + 0]]];
											v70 = v70 + (307 - (35 + 271));
											v78 = v66[v70];
											v778 = 2 - 0;
										end
										if (v778 == (7 - 1)) then
											v70 = v78[2 + 1];
											break;
										end
										if (v778 == (0 + 0)) then
											v76[v78[8 - 6]] = v76[v78[1 + 2]] + v78[3 + 1];
											v70 = v70 + 1;
											v78 = v66[v70];
											v778 = 3 - 2;
										end
										if (v778 == (1 + 1)) then
											v76[v78[2 + 0]] = v76[v78[8 - 5]][v78[4]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v778 = 3;
										end
									end
								elseif ((v79 > (2149 - (1136 + 739))) or (2029 >= 2716)) then
									if ((v78[7 - 5] < v78[7 - 3]) or (1644 == 4728)) then
										v70 = v70 + 1;
									else
										v70 = v78[577 - (125 + 449)];
									end
								else
									local v3088 = 0 - 0;
									local v3089;
									local v3090;
									local v3091;
									local v3092;
									while true do
										if (v3088 == (884 - (96 + 783))) then
											v78 = v66[v70];
											v3092 = v78[1030 - (888 + 140)];
											v3090, v3091 = v69(v76[v3092](v13(v76, v3092 + 1, v78[3])));
											v71 = (v3091 + v3092) - (1 + 0);
											v3088 = 68 - (41 + 21);
										end
										if (v3088 == (590 - (570 + 17))) then
											v76[v78[1 + 1]] = v76[v78[2 + 1]] + v78[2 + 2];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[5 - 2]] + v78[15 - 11];
											v3088 = 10 - 6;
										end
										if (v3088 == 8) then
											v76[v78[2 + 0]][v76[v78[1 + 2]]] = v76[v78[759 - (321 + 434)]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[1 + 1]] = v78[1 + 2];
											break;
										end
										if (v3088 == (1290 - (137 + 1149))) then
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[1825 - (566 + 1257)]] = v76[v78[3]][v78[4]];
											v70 = v70 + (678 - (391 + 286));
											v3088 = 1379 - (384 + 990);
										end
										if (v3088 == (619 - (505 + 108))) then
											v3089 = 0 + 0;
											for v7536 = v3092, v71 do
												local v7537 = 1297 - (549 + 748);
												while true do
													if (v7537 == 0) then
														v3089 = v3089 + 1;
														v76[v7536] = v3090[v3089];
														break;
													end
												end
											end
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v3088 = 7;
										end
										if ((1 + 0) == v3088) then
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[2]] = v59[v78[1 + 2]];
											v70 = v70 + 1 + 0;
											v3088 = 2;
										end
										if (v3088 == 2) then
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[8 - 5]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v3088 = 5 - 2;
										end
										if (v3088 == 7) then
											v3092 = v78[4 - 2];
											v76[v3092] = v76[v3092](v13(v76, v3092 + 1 + 0, v71));
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v3088 = 22 - 14;
										end
										if (((0 - 0) == v3088) or (4979 < 3072)) then
											v3089 = nil;
											v3090, v3091 = nil;
											v3092 = nil;
											v76[v78[694 - (205 + 487)]] = v76[v78[8 - 5]][v76[v78[2 + 2]]];
											v3088 = 1 + 0;
										end
									end
								end
							elseif (v79 <= (954 - 677)) then
								if (v79 > 276) then
									local v3093 = 1426 - (309 + 1117);
									while true do
										if ((v3093 == 6) or (2953 < 1448)) then
											v76[v78[2]] = v76[v78[2 + 1]] + v78[6 - 2];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v3093 = 17 - 10;
										end
										if (v3093 == (76 - (50 + 26))) then
											v76[v78[1 + 1]] = v76[v78[1 + 2]][v76[v78[3 + 1]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v3093 = 1819 - (520 + 1298);
										end
										if ((v3093 == (1062 - (420 + 640))) or (2711 >= 4402)) then
											v76[v78[3 - 1]] = v76[v78[4 - 1]][v76[v78[4]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v3093 = 3;
										end
										if ((v3093 == (1583 - (15 + 1567))) or (1643 >= 2854)) then
											v76[v78[2 + 0]] = v76[v78[3]][v78[1 + 3]];
											v70 = v70 + (1985 - (110 + 1874));
											v78 = v66[v70];
											v3093 = 2 + 0;
										end
										if (v3093 == 4) then
											v76[v78[784 - (101 + 681)]] = v76[v78[3 + 0]][v76[v78[4]]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v3093 = 548 - (120 + 423);
										end
										if (v3093 == (20 - 13)) then
											v76[v78[2 + 0]] = v76[v78[1 + 2]] + v78[4 + 0];
											v70 = v70 + 1;
											v78 = v66[v70];
											v3093 = 3 + 5;
										end
										if ((4409 >= 3377) and (v3093 == (20 - 12))) then
											v76[v78[2]] = v78[48 - (41 + 4)];
											break;
										end
										if (v3093 == 5) then
											v76[v78[1085 - (246 + 837)]][v76[v78[909 - (492 + 414)]]] = v76[v78[4 + 0]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v3093 = 1055 - (829 + 220);
										end
										if (3 == v3093) then
											v76[v78[2 + 0]] = v76[v78[2 + 1]][v78[13 - 9]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v3093 = 8 - 4;
										end
									end
								else
									local v3094;
									v76[v78[1497 - (345 + 1150)]] = v76[v78[1360 - (1017 + 340)]][v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[7 - 5]] = v76[v78[2 + 1]][v78[3 + 1]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1841 - (1279 + 560)]] = v76[v78[5 - 2]][v76[v78[2 + 2]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[4 - 2]][v76[v78[1466 - (140 + 1323)]]] = v76[v78[4]];
									v70 = v70 + (1989 - (1607 + 381));
									v78 = v66[v70];
									v76[v78[2 - 0]] = v76[v78[8 - 5]] + v78[198 - (162 + 32)];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[606 - (440 + 164)]] = v76[v78[6 - 3]] + v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[6 - 3]] + v78[7 - 3];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[958 - (553 + 403)]] = v76[v78[10 - 7]][v76[v78[6 - 2]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[343 - (111 + 230)]] = v76[v78[3]][v78[5 - 1]];
									v70 = v70 + (4 - 3);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[3]][v76[v78[3 + 1]]];
									v70 = v70 + (339 - (85 + 253));
									v78 = v66[v70];
									v76[v78[1851 - (1558 + 291)]] = v76[v78[1 + 2]] + v78[11 - 7];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[1084 - (985 + 97)]] = v76[v78[6 - 3]][v76[v78[617 - (424 + 189)]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v3094 = v78[1025 - (19 + 1004)];
									v76[v3094](v76[v3094 + 1 + 0]);
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v78[3 + 0];
								end
							elseif (v79 == (1623 - (231 + 1114))) then
								local v3118 = 0 + 0;
								while true do
									if ((1048 - (114 + 931)) == v3118) then
										v76[v78[2 + 0]] = v76[v78[4 - 1]][v78[1 + 3]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v3118 = 67 - (17 + 46);
									end
									if (v3118 == (3 + 2)) then
										v70 = v78[8 - 5];
										break;
									end
									if (v3118 == 1) then
										v76[v78[1038 - (931 + 105)]] = v76[v78[1131 - (718 + 410)]][v78[1209 - (361 + 844)]];
										v70 = v70 + (1911 - (1760 + 150));
										v78 = v66[v70];
										v3118 = 1569 - (917 + 650);
									end
									if ((v3118 == (185 - (104 + 77))) or (3580 < 763)) then
										v76[v78[4 - 2]][v76[v78[1 + 2]]] = v76[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3118 = 6 - 1;
									end
									if (v3118 == (3 - 1)) then
										v76[v78[2]] = v76[v78[267 - (53 + 211)]][v76[v78[3 + 1]]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v3118 = 3 + 0;
									end
									if ((1030 == 1030) and (v3118 == (0 - 0))) then
										v76[v78[1302 - (282 + 1018)]] = v76[v78[3]][v76[v78[4]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v3118 = 515 - (162 + 352);
									end
								end
							elseif ((4676 >= 2618) and (v78[1 + 1] == v78[4])) then
								v70 = v70 + (930 - (22 + 907));
							else
								v70 = v78[442 - (280 + 159)];
							end
						elseif (v79 <= (1866 - (1064 + 516))) then
							if ((v79 <= (842 - 560)) or (2143 >= 4175)) then
								if ((v79 <= (204 + 76)) or (4138 <= 319)) then
									local v779 = 0 + 0;
									local v780;
									local v781;
									local v782;
									local v783;
									while true do
										if ((2482 <= 3601) and (v779 == (6 + 1))) then
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[1 + 2]];
											v70 = v70 + (1906 - (1293 + 612));
											v78 = v66[v70];
											v779 = 5 + 3;
										end
										if (v779 == (3 - 0)) then
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[11 - 8]][v76[v78[3 + 1]]];
											v70 = v70 + (1752 - (782 + 969));
											v78 = v66[v70];
											v779 = 11 - 7;
										end
										if (v779 == (1668 - (1085 + 583))) then
											v780 = nil;
											v781 = nil;
											v780, v782 = nil;
											v783 = nil;
											v779 = 1 + 0;
										end
										if (v779 == (1465 - (229 + 1231))) then
											for v5046 = v783, v71 do
												v781 = v781 + (2 - 1);
												v76[v5046] = v780[v781];
											end
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v783 = v78[6 - 4];
											v779 = 2 + 4;
										end
										if (v779 == (146 - (48 + 97))) then
											v76[v78[2]] = v76[v78[1849 - (676 + 1170)]];
											v70 = v70 + (1973 - (830 + 1142));
											v78 = v66[v70];
											v76[v78[97 - (41 + 54)]] = v76[v78[12 - 9]][v76[v78[1070 - (536 + 530)]]];
											v779 = 2;
										end
										if (v779 == (14 - 6)) then
											v76[v78[7 - 5]] = v76[v78[3]];
											v70 = v70 + (1256 - (1129 + 126));
											v78 = v66[v70];
											v76[v78[2 + 0]] = v78[455 - (282 + 170)];
											break;
										end
										if (v779 == 6) then
											v780 = {v76[v783](v13(v76, v783 + 1 + 0, v71))};
											v781 = 0 + 0;
											for v5049 = v783, v78[4] do
												local v5050 = 0 - 0;
												while true do
													if ((1223 - (610 + 613)) == v5050) then
														v781 = v781 + (2 - 1);
														v76[v5049] = v780[v781];
														break;
													end
												end
											end
											v70 = v70 + (1609 - (1182 + 426));
											v779 = 2 + 5;
										end
										if ((3288 >= 943) and (4 == v779)) then
											v783 = v78[2 + 0];
											v780, v782 = v69(v76[v783](v76[v783 + (1235 - (1210 + 24))]));
											v71 = (v782 + v783) - (1 + 0);
											v781 = 0 + 0;
											v779 = 1362 - (307 + 1050);
										end
										if ((1211 >= 571) and (v779 == (816 - (693 + 121)))) then
											v70 = v70 + (285 - (267 + 17));
											v78 = v66[v70];
											v76[v78[61 - (22 + 37)]] = v76[v78[3]] + v78[7 - 3];
											v70 = v70 + 1 + 0;
											v779 = 1450 - (391 + 1056);
										end
									end
								elseif (v79 > (144 + 137)) then
									local v3119;
									local v3120;
									local v3121;
									local v3122;
									local v3121, v3123;
									local v3124;
									v76[v78[1578 - (1117 + 459)]] = v76[v78[8 - 5]][v76[v78[4]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[463 - (65 + 396)]] = v76[v78[7 - 4]][v78[4]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[1704 - (620 + 1081)]][v76[v78[1 + 3]]];
									v70 = v70 + (1881 - (845 + 1035));
									v78 = v66[v70];
									v76[v78[3 - 1]] = v59[v78[7 - 4]];
									v70 = v70 + (1570 - (1348 + 221));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1044 - (320 + 721)]];
									v70 = v70 + (1958 - (1284 + 673));
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[3 + 0]] + v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v3124 = v78[5 - 3];
									v3121, v3123 = v69(v76[v3124](v13(v76, v3124 + 1 + 0, v78[7 - 4])));
									v71 = (v3123 + v3124) - (2 - 1);
									v3122 = 0;
									for v4629 = v3124, v71 do
										v3122 = v3122 + (3 - 2);
										v76[v4629] = v3121[v3122];
									end
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v3124 = v78[2];
									v3121, v3123 = v69(v76[v3124](v13(v76, v3124 + 1, v71)));
									v71 = (v3123 + v3124) - 1;
									v3122 = 0 - 0;
									for v4632 = v3124, v71 do
										local v4633 = 0 - 0;
										while true do
											if (v4633 == (361 - (170 + 191))) then
												v3122 = v3122 + (1743 - (209 + 1533));
												v76[v4632] = v3121[v3122];
												break;
											end
										end
									end
									v70 = v70 + 1;
									v78 = v66[v70];
									v3124 = v78[2];
									v3121 = {v76[v3124](v13(v76, v3124 + 1, v71))};
									v3122 = 1416 - (1049 + 367);
									for v4634 = v3124, v78[4] do
										local v4635 = 0 - 0;
										while true do
											if ((v4635 == (0 - 0)) or (3322 <= 1307)) then
												v3122 = v3122 + (2 - 1);
												v76[v4634] = v3121[v3122];
												break;
											end
										end
									end
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[7 - 4]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[226 - (167 + 56)]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[5 - 3]] = v76[v78[1 + 2]] + v76[v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3 - 0]] - v78[3 + 1];
									v70 = v70 + (881 - (752 + 128));
									v78 = v66[v70];
									v76[v78[2 + 0]] = v78[1 + 2];
									v70 = v70 + (19 - (7 + 11));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3 + 0]];
									v70 = v70 + (132 - (87 + 44));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[7 - 4]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[7 - 5]] = v78[1538 - (656 + 879)];
									v70 = v70 + 1;
									v78 = v66[v70];
									v3124 = v78[3 - 1];
									v3120 = v76[v3124];
									v3119 = v76[v3124 + 1 + 1];
									if (v3119 > (0 - 0)) then
										if ((v3120 > v76[v3124 + (4 - 3)]) or (1096 > 3149)) then
											v70 = v78[1085 - (529 + 553)];
										else
											v76[v3124 + 3 + 0] = v3120;
										end
									elseif ((v3120 < v76[v3124 + (938 - (613 + 324))]) or (3089 > 4779)) then
										v70 = v78[3];
									else
										v76[v3124 + (1323 - (585 + 735))] = v3120;
									end
								else
									v76[v78[2 - 0]] = v76[v78[6 - 3]][v76[v78[2 + 2]]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[8 - 5]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[17 - (6 + 9)]] = v76[v78[10 - 7]][v78[4]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[5 - 3]] = v76[v78[3]][v76[v78[11 - 7]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[462 - (59 + 401)]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[791 - (743 + 46)]] = v76[v78[2 + 1]][v76[v78[8 - 4]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 - 0]] = v76[v78[3 + 0]][v76[v78[541 - (285 + 252)]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[477 - (146 + 329)]][v76[v78[3]]] = v76[v78[2 + 2]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[1473 - (417 + 1053)]] + v78[4];
									v70 = v70 + (1873 - (1251 + 621));
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[13 - 10]][v76[v78[240 - (213 + 23)]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[746 - (617 + 127)]] = v78[695 - (181 + 511)];
									v70 = v70 + (381 - (187 + 193));
									v78 = v66[v70];
									v70 = v78[1292 - (107 + 1182)];
								end
							elseif (v79 <= (2268 - (1623 + 361))) then
								if (v79 > 283) then
									local v3173 = v78[2];
									do
										return v13(v76, v3173, v3173 + v78[1 + 2]);
									end
								else
									v76[v78[1823 - (325 + 1496)]] = v76[v78[359 - (235 + 121)]] + v76[v78[4 + 0]];
								end
							elseif ((v79 == (724 - 439)) or (798 > 1390)) then
								local v3175;
								local v3176, v3177;
								local v3178;
								v76[v78[2]] = v59[v78[2 + 1]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[6 - 3]];
								v70 = v70 + (50 - (28 + 21));
								v78 = v66[v70];
								v76[v78[4 - 2]] = v76[v78[2 + 1]] + v78[691 - (630 + 57)];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[2 + 1]][v78[15 - 11]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v3178 = v78[2 + 0];
								v3176, v3177 = v69(v76[v3178](v13(v76, v3178 + 1, v78[891 - (21 + 867)])));
								v71 = (v3177 + v3178) - (3 - 2);
								v3175 = 0;
								for v4636 = v3178, v71 do
									v3175 = v3175 + (1768 - (1555 + 212));
									v76[v4636] = v3176[v3175];
								end
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v3178 = v78[3 - 1];
								v76[v3178] = v76[v3178](v13(v76, v3178 + 1 + 0, v71));
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]][v76[v78[2 + 1]]] = v76[v78[11 - 7]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[8 - 5]] + v78[9 - 5];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v78[1 + 2];
							else
								v76[v78[4 - 2]] = v76[v78[1 + 2]][v76[v78[4 + 0]]];
								v70 = v70 + (942 - (903 + 38));
								v78 = v66[v70];
								v76[v78[388 - (74 + 312)]] = v76[v78[3]][v78[1324 - (837 + 483)]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[3]][v78[2 + 2]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[1544 - (1455 + 86)]][v76[v78[4]]];
								v70 = v70 + (825 - (803 + 21));
								v78 = v66[v70];
								v76[v78[2]][v76[v78[3]]] = v76[v78[5 - 1]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2 - 0]] = v78[1 + 2];
							end
						elseif (v79 <= 289) then
							if ((v79 <= (149 + 138)) or (3394 < 932)) then
								local v784 = 0;
								local v785;
								while true do
									if ((v784 == (1 + 3)) or (568 >= 1028)) then
										v78 = v66[v70];
										v76[v78[4 - 2]][v76[v78[3 + 0]]] = v76[v78[10 - 6]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v784 = 904 - (497 + 402);
									end
									if (v784 == (988 - (578 + 410))) then
										v785 = nil;
										v76[v78[6 - 4]] = v59[v78[1546 - (464 + 1079)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v784 = 1697 - (1398 + 298);
									end
									if (v784 == (7 - 2)) then
										v70 = v78[3 + 0];
										break;
									end
									if (v784 == (3 - 0)) then
										v78 = v66[v70];
										v785 = v78[2];
										v76[v785] = v76[v785](v13(v76, v785 + 1 + 0, v78[1293 - (561 + 729)]));
										v70 = v70 + 1 + 0;
										v784 = 4;
									end
									if ((1 - 0) == v784) then
										v76[v78[1161 - (104 + 1055)]] = v76[v78[1676 - (308 + 1365)]];
										v70 = v70 + (548 - (500 + 47));
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]];
										v784 = 2 - 0;
									end
									if (v784 == 2) then
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1952 - (186 + 1764)]] = v59[v78[3]];
										v70 = v70 + 1 + 0;
										v784 = 2 + 1;
									end
								end
							elseif ((v79 > (742 - 454)) or (3148 <= 1307)) then
								v76[v78[2 + 0]] = v76[v78[2 + 1]][v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1176 - (1133 + 41)]] = v76[v78[3]][v76[v78[8 - 4]]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1895 - (1786 + 107)]] = v60[v78[6 - 3]];
								v70 = v70 + (1530 - (344 + 1185));
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[1 + 2]][v78[699 - (72 + 623)]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3 + 0]][v76[v78[13 - 9]]];
								v70 = v70 + (1893 - (1093 + 799));
								v78 = v66[v70];
								v76[v78[1 + 1]] = v60[v78[3]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3 + 0]][v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[7 - 5]] = v76[v78[1058 - (721 + 334)]][v76[v78[4]]];
								v70 = v70 + (1863 - (1322 + 540));
								v78 = v66[v70];
								v76[v78[2]] = v60[v78[3 + 0]];
								v70 = v70 + (1373 - (575 + 797));
								v78 = v66[v70];
								v76[v78[1131 - (274 + 855)]] = v76[v78[6 - 3]][v78[1 + 3]];
							else
								v76[v78[3 - 1]][v76[v78[1 + 2]]] = v78[3 + 1];
							end
						elseif (v79 <= 291) then
							if ((2164 <= 3467) and (v79 == (2099 - (986 + 823)))) then
								v76[v78[2 + 0]] = v76[v78[1016 - (872 + 141)]][v76[v78[1 + 3]]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]][v78[6 - 2]];
								v70 = v70 + (539 - (139 + 399));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3 + 0]][v78[4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]][v76[v78[3 + 0]]] = v76[v78[1706 - (1038 + 664)]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v78[3 + 0];
							else
								v76[v78[1 + 1]] = v76[v78[3 - 0]][v78[5 - 1]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]][v78[2 + 2]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[577 - (388 + 186)]][v76[v78[490 - (421 + 65)]]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3 + 0]][v78[1267 - (604 + 659)]];
								v70 = v70 + (1505 - (1267 + 237));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[184 - (112 + 69)]][v76[v78[4]]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[486 - (319 + 165)]][v76[v78[2 + 1]]] = v76[v78[1357 - (634 + 719)]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]] + v78[4];
								v70 = v70 + (1040 - (248 + 791));
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3 + 0]][v76[v78[1089 - (888 + 197)]]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[3 - 1]] = v76[v78[11 - 8]][v78[4]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v78[3];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v70 = v78[11 - 8];
							end
						elseif ((4398 > 46) and (v79 == (658 - 366))) then
							local v3250;
							local v3251, v3252;
							local v3253;
							v3253 = v78[2];
							v3251, v3252 = v69(v76[v3253](v13(v76, v3253 + 1, v78[4 - 1])));
							v71 = (v3252 + v3253) - 1;
							v3250 = 0;
							for v4657 = v3253, v71 do
								local v4658 = 0;
								while true do
									if ((3603 <= 4635) and (v4658 == (1966 - (1355 + 611)))) then
										v3250 = v3250 + 1 + 0;
										v76[v4657] = v3251[v3250];
										break;
									end
								end
							end
							v70 = v70 + (1002 - (497 + 504));
							v78 = v66[v70];
							v3253 = v78[2 - 0];
							v76[v3253] = v76[v3253](v13(v76, v3253 + 1 + 0, v71));
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v59[v78[3 + 0]];
							v70 = v70 + (3 - 2);
							v78 = v66[v70];
							v76[v78[3 - 1]] = v59[v78[1260 - (1159 + 98)]];
							v70 = v70 + (1444 - (418 + 1025));
							v78 = v66[v70];
							v76[v78[9 - 7]] = v76[v78[6 - 3]];
							v70 = v70 + (1794 - (297 + 1496));
							v78 = v66[v70];
							v76[v78[3 - 1]] = #v76[v78[946 - (547 + 396)]];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[3]] % v76[v78[10 - 6]];
							v70 = v70 + (1744 - (999 + 744));
							v78 = v66[v70];
							v76[v78[2 + 0]] = v78[503 - (324 + 176)] + v76[v78[1514 - (1171 + 339)]];
							v70 = v70 + (948 - (492 + 455));
							v78 = v66[v70];
							v76[v78[2]] = #v76[v78[1479 - (805 + 671)]];
							v70 = v70 + (1314 - (265 + 1048));
							v78 = v66[v70];
							v76[v78[1578 - (252 + 1324)]] = v76[v78[3 + 0]] % v76[v78[4]];
						else
							v76[v78[1572 - (544 + 1026)]] = v76[v78[3 + 0]][v78[7 - 3]];
							v70 = v70 + (663 - (217 + 445));
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[3]][v76[v78[4]]];
							v70 = v70 + (941 - (492 + 448));
							v78 = v66[v70];
							v76[v78[2]][v76[v78[1435 - (1152 + 280)]]] = v76[v78[5 - 1]];
							v70 = v70 + (4 - 3);
							v78 = v66[v70];
							v76[v78[2]] = v78[3 + 0];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v70 = v78[848 - (175 + 670)];
						end
					elseif (v79 <= (31 + 275)) then
						if (v79 <= 299) then
							if (v79 <= (1949 - (1411 + 242))) then
								if (v79 <= (153 + 141)) then
									for v1002 = v78[695 - (678 + 15)], v78[1 + 2] do
										v76[v1002] = nil;
									end
								elseif (v79 > 295) then
									local v3276 = 810 - (593 + 217);
									while true do
										if (v3276 == 0) then
											v76[v78[5 - 3]] = v76[v78[3]][v78[4 + 0]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v3276 = 1;
										end
										if (v3276 == 1) then
											v76[v78[492 - (112 + 378)]] = v59[v78[1550 - (952 + 595)]];
											v70 = v70 + (397 - (23 + 373));
											v78 = v66[v70];
											v3276 = 4 - 2;
										end
										if ((13 - 8) == v3276) then
											v76[v78[2]] = v78[3 + 0];
											break;
										end
										if (((1786 - (1102 + 682)) == v3276) or (4051 >= 4954)) then
											v76[v78[1 + 1]] = v76[v78[1 + 2]][v78[1387 - (118 + 1265)]];
											v70 = v70 + (1100 - (725 + 374));
											v78 = v66[v70];
											v3276 = 3;
										end
										if (((2 + 1) == v3276) or (3633 == 4843)) then
											v76[v78[2 + 0]] = v76[v78[2001 - (1142 + 856)]][v76[v78[3 + 1]]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v3276 = 3 + 1;
										end
										if (v3276 == (3 + 1)) then
											v76[v78[2]][v76[v78[647 - (104 + 540)]]] = v76[v78[4]];
											v70 = v70 + (963 - (496 + 466));
											v78 = v66[v70];
											v3276 = 2 + 3;
										end
									end
								else
									v76[v78[1 + 1]] = v76[v78[4 - 1]][v78[728 - (657 + 67)]];
									v70 = v70 + (4 - 3);
									v78 = v66[v70];
									v76[v78[1748 - (127 + 1619)]] = v76[v78[3]][v78[13 - 9]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v76[v78[4]]];
									v70 = v70 + (1191 - (1069 + 121));
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[3 + 0]][v78[15 - 11]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[1192 - (27 + 1163)]] = v76[v78[5 - 2]][v76[v78[1163 - (371 + 788)]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 + 0]][v76[v78[6 - 3]]] = v76[v78[3 + 1]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[2 + 1]] + v78[11 - 7];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[432 - (139 + 290)]][v76[v78[1339 - (639 + 696)]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[3]][v78[6 - 2]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[506 - (156 + 348)]] = v76[v78[893 - (488 + 402)]][v78[206 - (186 + 16)]];
								end
							elseif ((v79 <= (620 - (119 + 204))) or (779 >= 2948)) then
								local v786 = 0 - 0;
								local v787;
								while true do
									if (v786 == (0 - 0)) then
										v787 = v78[6 - 4];
										v76[v787](v76[v787 + 1 + 0]);
										break;
									end
								end
							elseif (v79 > (819 - 521)) then
								local v3294 = 0;
								while true do
									if ((v3294 == 9) or (4985 < 4087)) then
										v76[v78[2]] = v76[v78[3 + 0]][v78[1763 - (1709 + 50)]];
										break;
									end
									if (v3294 == (1333 - (249 + 1080))) then
										v76[v78[2 + 0]] = v76[v78[454 - (155 + 296)]][v76[v78[3 + 1]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v3294 = 5;
									end
									if (v3294 == (3 - 1)) then
										v76[v78[2]] = v76[v78[4 - 1]][v78[3 + 1]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v3294 = 2 + 1;
									end
									if (v3294 == (2 + 4)) then
										v76[v78[4 - 2]] = v76[v78[3]] + v78[2 + 2];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3294 = 20 - 13;
									end
									if (v3294 == 8) then
										v76[v78[3 - 1]] = v76[v78[701 - (604 + 94)]][v76[v78[1 + 3]]];
										v70 = v70 + (1804 - (500 + 1303));
										v78 = v66[v70];
										v3294 = 1529 - (916 + 604);
									end
									if (v3294 == 5) then
										v76[v78[1 + 1]][v76[v78[2 + 1]]] = v76[v78[15 - 11]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v3294 = 6 + 0;
									end
									if (v3294 == 3) then
										v76[v78[2 + 0]] = v76[v78[1478 - (754 + 721)]][v78[510 - (181 + 325)]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v3294 = 1 + 3;
									end
									if (v3294 == (1417 - (413 + 997))) then
										v76[v78[4 - 2]] = v76[v78[3 - 0]] + v78[4 + 0];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3294 = 8 + 0;
									end
									if (v3294 == (0 + 0)) then
										v76[v78[6 - 4]] = v76[v78[6 - 3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3294 = 1742 - (708 + 1033);
									end
									if (v3294 == (1 + 0)) then
										v76[v78[2]] = v76[v78[3 + 0]][v76[v78[4 - 0]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v3294 = 2;
									end
								end
							else
								v76[v78[4 - 2]] = v76[v78[1 + 2]][v78[1 + 3]];
								v70 = v70 + (1658 - (505 + 1152));
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[2 + 1]][v76[v78[3 + 1]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]] = #v76[v78[3 - 0]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]][v76[v78[3]]] = v76[v78[15 - 11]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1525 - (53 + 1470)]] = v78[1007 - (482 + 522)];
								v70 = v70 + (647 - (496 + 150));
								v78 = v66[v70];
								v70 = v78[3];
							end
						elseif (v79 <= (397 - 95)) then
							if (v79 <= (385 - (32 + 53))) then
								v76[v78[1812 - (956 + 854)]] = v59[v78[1 + 2]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v59[v78[8 - 5]];
								v70 = v70 + (1894 - (1192 + 701));
								v78 = v66[v70];
								v76[v78[1623 - (326 + 1295)]] = v59[v78[1815 - (1595 + 217)]];
								v70 = v70 + (217 - (93 + 123));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1839 - (848 + 988)]][v78[1564 - (546 + 1014)]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[3 - 1]] = #v76[v78[2 + 1]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[77 - (53 + 21)]][v76[v78[295 - (167 + 124)]]];
								v70 = v70 + (181 - (4 + 176));
								v78 = v66[v70];
								v76[v78[4 - 2]] = v76[v78[7 - 4]][v76[v78[12 - 8]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								do
									return v76[v78[2 + 0]];
								end
								v70 = v70 + 1;
								v78 = v66[v70];
								do
									return;
								end
							elseif (v79 == (84 + 217)) then
								v76[v78[2 + 0]] = v76[v78[3]][v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[3 - 1]] = v76[v78[122 - (93 + 26)]][v78[3 + 1]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3 - 0]][v76[v78[3 + 1]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]][v76[v78[1657 - (220 + 1434)]]] = v76[v78[12 - 8]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[6 - 4]] = v76[v78[1605 - (906 + 696)]] + v78[8 - 4];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[681 - (178 + 501)]] = v78[14 - 11];
							elseif (v78[1 + 1] <= v78[1031 - (444 + 583)]) then
								v70 = v70 + (1 - 0);
							else
								v70 = v78[3 + 0];
							end
						elseif ((3382 >= 2636) and (v79 <= (733 - (407 + 22)))) then
							if ((v79 > (605 - 302)) or (732 > 1537)) then
								local v3317;
								local v3318, v3319;
								local v3320;
								v76[v78[1234 - (1139 + 93)]] = v59[v78[2 + 1]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1346 - (237 + 1107)]] = v76[v78[3]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[13 - (4 + 7)]] = v76[v78[11 - 8]] + v78[4];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[515 - (8 + 505)]] = v76[v78[3]] + v78[3 + 1];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[2 + 1]][v78[4 + 0]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v3320 = v78[937 - (662 + 273)];
								v3318, v3319 = v69(v76[v3320](v13(v76, v3320 + 1 + 0, v78[3])));
								v71 = (v3319 + v3320) - (1 + 0);
								v3317 = 0;
								for v4660 = v3320, v71 do
									v3317 = v3317 + (3 - 2);
									v76[v4660] = v3318[v3317];
								end
								v70 = v70 + (245 - (127 + 117));
								v78 = v66[v70];
								v3320 = v78[209 - (105 + 102)];
								v76[v3320] = v76[v3320](v13(v76, v3320 + 1 + 0, v71));
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[1 + 1]][v76[v78[14 - 11]]] = v76[v78[13 - 9]];
								v70 = v70 + (747 - (588 + 158));
								v78 = v66[v70];
								v76[v78[1082 - (126 + 954)]] = v76[v78[9 - 6]] + v78[347 - (52 + 291)];
								v70 = v70 + (279 - (76 + 202));
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[849 - (504 + 342)]] + v78[4];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[3]][v76[v78[3 + 1]]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[483 - (387 + 93)]][v78[8 - 4]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[8 - 5]][v76[v78[4 + 0]]];
								v70 = v70 + (940 - (36 + 903));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[5 - 2]][v78[1 + 3]];
								v70 = v70 + (263 - (220 + 42));
								v78 = v66[v70];
								v76[v78[7 - 5]] = v76[v78[3]][v78[1509 - (300 + 1205)]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[9 - 6]][v76[v78[926 - (728 + 194)]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]][v76[v78[3]]] = v76[v78[4]];
								v70 = v70 + (658 - (445 + 212));
								v78 = v66[v70];
								v76[v78[7 - 5]] = v78[2 + 1];
							else
								v76[v78[2]] = v76[v78[3 + 0]][v76[v78[1361 - (167 + 1190)]]];
								v70 = v70 + (645 - (315 + 329));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3 + 0]][v78[2 + 2]];
								v70 = v70 + (651 - (545 + 105));
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[1 + 2]][v78[4 + 0]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[6 - 3]][v76[v78[1193 - (1044 + 145)]]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[1252 - (122 + 1128)]][v76[v78[1818 - (371 + 1444)]]] = v76[v78[20 - (14 + 2)]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[5 - 2]] + v78[5 - 1];
							end
						elseif (v79 > (159 + 146)) then
							v76[v78[3 - 1]] = #v76[v78[10 - 7]];
						else
							v76[v78[2 + 0]] = v76[v78[7 - 4]][v78[13 - 9]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[9 - 7]] = v76[v78[1 + 2]][v76[v78[4]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[7 - 5]] = v76[v78[5 - 2]][v78[153 - (50 + 99)]];
							v70 = v70 + (440 - (123 + 316));
							v78 = v66[v70];
							v76[v78[3 - 1]] = v76[v78[1585 - (1507 + 75)]] * v76[v78[4]];
							v70 = v70 + (595 - (145 + 449));
							v78 = v66[v70];
							v76[v78[1113 - (241 + 870)]][v76[v78[3]]] = v76[v78[4 + 0]];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v70 = v78[11 - 8];
						end
					elseif (v79 <= (689 - 376)) then
						if (v79 <= (1066 - (627 + 130))) then
							if (v79 <= (452 - (82 + 63))) then
								v76[v78[2]] = v76[v78[3 + 0]][v78[1288 - (386 + 898)]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[9 - 6]][v76[v78[4 + 0]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[972 - (659 + 310)]][v78[3 + 1]];
								v70 = v70 + (604 - (364 + 239));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[2 + 1]][v76[v78[15 - 11]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]][v76[v78[5 - 2]]] = v76[v78[13 - 9]];
								v70 = v70 + (194 - (30 + 163));
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[3]] + v78[559 - (213 + 342)];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[1420 - (843 + 575)]] = v78[3];
								v70 = v70 + (703 - (347 + 355));
								v78 = v66[v70];
								v70 = v78[3];
							elseif ((v79 > 308) or (1483 == 4794)) then
								v76[v78[2]] = v76[v78[3]][v78[4]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[469 - (386 + 81)]] = v76[v78[5 - 2]][v78[8 - 4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]][v76[v78[5 - 2]]] = v76[v78[1661 - (610 + 1047)]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[566 - (304 + 259)]] + v78[10 - 6];
								v70 = v70 + (966 - (306 + 659));
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[1 + 2]] + v78[4];
								v70 = v70 + (1740 - (315 + 1424));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[591 - (27 + 561)]][v76[v78[2 + 2]]];
								v70 = v70 + (1928 - (1904 + 23));
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[1 + 2]][v78[4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2000 - (1852 + 146)]] = v78[7 - 4];
							else
								local v3384 = 0 - 0;
								while true do
									if (v3384 == (4 + 0)) then
										v76[v78[188 - (18 + 168)]] = v76[v78[3]][v76[v78[3 + 1]]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v3384 = 8 - 3;
									end
									if (v3384 == 7) then
										v76[v78[7 - 5]] = v76[v78[3 - 0]][v76[v78[4]]];
										v70 = v70 + (639 - (399 + 239));
										v78 = v66[v70];
										v3384 = 29 - 21;
									end
									if (v3384 == (1416 - (779 + 629))) then
										v76[v78[1 + 1]] = v76[v78[3]][v78[3 + 1]];
										v70 = v70 + (1770 - (855 + 914));
										v78 = v66[v70];
										v3384 = 9;
									end
									if (v3384 == (27 - (15 + 7))) then
										v76[v78[2 + 0]][v76[v78[1705 - (646 + 1056)]]] = v76[v78[1 + 3]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v3384 = 10 - 4;
									end
									if (v3384 == (1869 - (1443 + 423))) then
										v76[v78[1 + 1]] = v76[v78[6 - 3]][v78[4 + 0]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v3384 = 9 - 5;
									end
									if (2 == v3384) then
										v76[v78[1508 - (271 + 1235)]] = v76[v78[3]][v76[v78[2 + 2]]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v3384 = 9 - 6;
									end
									if ((v3384 == (19 - 13)) or (874 >= 4741)) then
										v76[v78[1046 - (463 + 581)]] = v76[v78[1 + 2]] + v78[1179 - (599 + 576)];
										v70 = v70 + (1513 - (316 + 1196));
										v78 = v66[v70];
										v3384 = 1310 - (970 + 333);
									end
									if (v3384 == 1) then
										v76[v78[1 + 1]] = v76[v78[3]][v78[3 + 1]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3384 = 963 - (538 + 423);
									end
									if (v3384 == 9) then
										v76[v78[1 + 1]] = v76[v78[13 - 10]][v78[4]];
										break;
									end
									if (v3384 == (0 - 0)) then
										v76[v78[2]] = v76[v78[1 + 2]][v78[4]];
										v70 = v70 + (1355 - (1061 + 293));
										v78 = v66[v70];
										v3384 = 530 - (153 + 376);
									end
								end
							end
						elseif (v79 <= 311) then
							if (v79 > (127 + 183)) then
								local v3385 = 705 - (173 + 532);
								while true do
									if (v3385 == (1 - 0)) then
										v76[v78[5 - 3]] = v76[v78[7 - 4]][v78[2 + 2]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v3385 = 7 - 5;
									end
									if (v3385 == (2 + 1)) then
										v76[v78[1538 - (561 + 975)]] = v78[3 + 0];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v3385 = 4 + 0;
									end
									if ((2409 <= 3760) and (v3385 == 0)) then
										v76[v78[5 - 3]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v3385 = 3 - 2;
									end
									if (v3385 == 4) then
										v70 = v78[3 + 0];
										break;
									end
									if ((3567 == 3567) and (v3385 == 2)) then
										v76[v78[4 - 2]][v76[v78[126 - (115 + 8)]]] = v76[v78[1560 - (1476 + 80)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3385 = 3 - 0;
									end
								end
							else
								v76[v78[2]] = v76[v78[845 - (648 + 194)]][v78[259 - (111 + 144)]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[4 - 1]][v76[v78[321 - (275 + 42)]]];
								v70 = v70 + (183 - (104 + 78));
								v78 = v66[v70];
								v76[v78[6 - 4]] = v76[v78[7 - 4]][v76[v78[1940 - (813 + 1123)]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]][v76[v78[9 - 6]]] = v76[v78[3 + 1]];
								v70 = v70 + (1794 - (144 + 1649));
								v78 = v66[v70];
								v76[v78[553 - (125 + 426)]] = v78[3];
							end
						elseif ((v79 == (674 - 362)) or (4756 <= 3490)) then
							local v3397;
							local v3398;
							local v3399, v3400;
							local v3401;
							v76[v78[2]] = {};
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[84 - (51 + 31)]] = v76[v78[10 - 7]][v76[v78[4 + 0]]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[291 - (174 + 115)]] = v59[v78[3]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[1700 - (941 + 757)]] = v76[v78[1165 - (696 + 466)]];
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v76[v78[3 - 1]] = v76[v78[3]] + v78[5 - 1];
							v70 = v70 + (1352 - (165 + 1186));
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[14 - 11]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v3401 = v78[2];
							v3399, v3400 = v69(v76[v3401](v13(v76, v3401 + 1, v78[3 + 0])));
							v71 = (v3400 + v3401) - 1;
							v3398 = 0 + 0;
							for v4663 = v3401, v71 do
								local v4664 = 0 + 0;
								while true do
									if (v4664 == (0 + 0)) then
										v3398 = v3398 + 1;
										v76[v4663] = v3399[v3398];
										break;
									end
								end
							end
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v3401 = v78[1039 - (853 + 184)];
							v3399, v3400 = v69(v76[v3401](v13(v76, v3401 + 1 + 0, v71)));
							v71 = (v3400 + v3401) - 1;
							v3398 = 34 - (14 + 20);
							for v4665 = v3401, v71 do
								v3398 = v3398 + 1;
								v76[v4665] = v3399[v3398];
							end
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v3401 = v78[768 - (35 + 731)];
							v3397 = v76[v3401];
							for v4668 = v3401 + 1 + 0, v71 do
								v7(v3397, v76[v4668]);
							end
						else
							local v3417;
							local v3418, v3419;
							local v3420;
							v76[v78[2]] = v76[v78[1 + 2]][v76[v78[1 + 3]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2 + 0]] = v59[v78[3]];
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[5 - 2]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[150 - (26 + 121)]] + v78[115 - (95 + 16)];
							v70 = v70 + (3 - 2);
							v78 = v66[v70];
							v76[v78[2 - 0]] = v76[v78[3]][v78[555 - (423 + 128)]];
							v70 = v70 + (1575 - (1331 + 243));
							v78 = v66[v70];
							v3420 = v78[4 - 2];
							v3418, v3419 = v69(v76[v3420](v13(v76, v3420 + (2 - 1), v78[3])));
							v71 = (v3419 + v3420) - (1635 - (284 + 1350));
							v3417 = 0 + 0;
							for v4669 = v3420, v71 do
								local v4670 = 28 - (10 + 18);
								while true do
									if ((0 - 0) == v4670) then
										v3417 = v3417 + (1308 - (73 + 1234));
										v76[v4669] = v3418[v3417];
										break;
									end
								end
							end
							v70 = v70 + (738 - (503 + 234));
							v78 = v66[v70];
							v3420 = v78[1903 - (425 + 1476)];
							v76[v3420] = v76[v3420](v13(v76, v3420 + 1 + 0, v71));
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v76[v78[1058 - (856 + 200)]][v76[v78[1 + 2]]] = v76[v78[1 + 3]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[1 + 2]] + v78[1615 - (734 + 877)];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[1483 - (514 + 967)]] = v78[5 - 2];
						end
					elseif (v79 <= 316) then
						if ((2253 <= 4325) and (v79 <= (961 - (325 + 322)))) then
							local v812 = 0 - 0;
							while true do
								if (v812 == (1839 - (1668 + 162))) then
									v76[v78[5 - 3]] = v76[v78[235 - (43 + 189)]][v76[v78[7 - 3]]];
									v70 = v70 + (1659 - (694 + 964));
									v78 = v66[v70];
									v76[v78[3 - 1]] = v76[v78[3 - 0]][v78[4]];
									v812 = 17 - 7;
								end
								if ((2660 <= 2901) and (v812 == (5 + 6))) then
									v78 = v66[v70];
									v76[v78[2]][v76[v78[3]]] = v76[v78[341 - (57 + 280)]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v812 = 12;
								end
								if (v812 == (1962 - (414 + 1540))) then
									v78 = v66[v70];
									v76[v78[902 - (561 + 339)]] = v76[v78[1 + 2]] + v78[4 + 0];
									v70 = v70 + (1551 - (1342 + 208));
									v78 = v66[v70];
									v812 = 13 - 4;
								end
								if (v812 == (25 - 18)) then
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v76[v78[3]]] = v76[v78[4]];
									v70 = v70 + 1 + 0;
									v812 = 26 - 18;
								end
								if (v812 == 10) then
									v70 = v70 + (1847 - (1139 + 707));
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[1 + 2]][v78[544 - (335 + 205)]];
									v70 = v70 + 1;
									v812 = 6 + 5;
								end
								if (v812 == (1 - 0)) then
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[3]][v78[10 - 6]];
									v70 = v70 + (1063 - (622 + 440));
									v812 = 3 - 1;
								end
								if ((2807 == 2807) and ((757 - (672 + 80)) == v812)) then
									v78 = v66[v70];
									v76[v78[1128 - (601 + 525)]] = v76[v78[1821 - (1515 + 303)]][v78[1 + 3]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v812 = 16 - 10;
								end
								if (v812 == (10 + 2)) then
									v76[v78[2]] = v76[v78[965 - (144 + 818)]] + v78[31 - (5 + 22)];
									v70 = v70 + (862 - (446 + 415));
									v78 = v66[v70];
									v76[v78[215 - (204 + 9)]] = v76[v78[3]][v76[v78[1262 - (479 + 779)]]];
									v812 = 13;
								end
								if (v812 == (8 - 4)) then
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[117 - (61 + 54)]] = v76[v78[1808 - (1235 + 570)]][v76[v78[4]]];
									v70 = v70 + (969 - (217 + 751));
									v812 = 5 + 0;
								end
								if ((688 <= 1393) and (v812 == (0 + 0))) then
									v76[v78[112 - (94 + 16)]] = v76[v78[10 - 7]][v76[v78[4 + 0]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1547 - (1188 + 357)]] = v76[v78[812 - (580 + 229)]][v78[4]];
									v812 = 1;
								end
								if ((523 - (82 + 428)) == v812) then
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[498 - (259 + 237)]] = v78[11 - 8];
									break;
								end
								if (v812 == (1359 - (215 + 1141))) then
									v76[v78[3 - 1]][v76[v78[673 - (405 + 265)]]] = v76[v78[1987 - (1136 + 847)]];
									v70 = v70 + (1735 - (230 + 1504));
									v78 = v66[v70];
									v76[v78[6 - 4]] = v76[v78[1885 - (913 + 969)]] + v78[6 - 2];
									v812 = 2 + 2;
								end
								if ((1566 >= 1015) and ((1395 - (1277 + 116)) == v812)) then
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1190 - (1178 + 9)]][v76[v78[2 + 2]]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v812 = 1843 - (1018 + 822);
								end
								if (v812 == (15 - 9)) then
									v76[v78[2 + 0]] = v76[v78[1 + 2]][v78[3 + 1]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[384 - (111 + 270)]][v76[v78[1200 - (1082 + 114)]]];
									v812 = 7;
								end
							end
						elseif (v79 == (302 + 13)) then
							local v3436 = 0 - 0;
							while true do
								if (v3436 == 2) then
									v76[v78[497 - (257 + 238)]] = v76[v78[1857 - (831 + 1023)]][v76[v78[125 - (6 + 115)]]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v3436 = 7 - 4;
								end
								if (v3436 == 1) then
									v76[v78[2]] = v76[v78[11 - 8]][v78[3 + 1]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v3436 = 4 - 2;
								end
								if ((2884 >= 700) and (v3436 == (17 - 10))) then
									v76[v78[2 + 0]] = v76[v78[1203 - (608 + 592)]][v78[8 - 4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v3436 = 8;
								end
								if (v3436 == (1946 - (24 + 1917))) then
									v76[v78[4 - 2]] = v76[v78[1528 - (521 + 1004)]] + v78[4];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v3436 = 5 + 1;
								end
								if ((732 < 2772) and (v3436 == 0)) then
									v76[v78[1 + 1]] = v76[v78[297 - (87 + 207)]][v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v3436 = 3 - 2;
								end
								if ((1599 - (625 + 970)) == v3436) then
									v76[v78[2 + 0]] = v76[v78[352 - (122 + 227)]] + v78[2 + 2];
									v70 = v70 + (1116 - (706 + 409));
									v78 = v66[v70];
									v3436 = 3 + 2;
								end
								if ((v3436 == (7 - 4)) or (1410 >= 4768)) then
									v76[v78[1 + 1]][v76[v78[6 - 3]]] = v76[v78[450 - (433 + 13)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v3436 = 985 - (824 + 157);
								end
								if (v3436 == (369 - (120 + 240))) then
									v76[v78[1 + 1]][v76[v78[3]]] = v76[v78[4]];
									break;
								end
								if (v3436 == (4 + 2)) then
									v76[v78[1 + 1]] = v76[v78[1035 - (291 + 741)]][v76[v78[2 + 2]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v3436 = 2 + 5;
								end
								if (v3436 == (2 + 6)) then
									v76[v78[1494 - (810 + 682)]] = v76[v78[496 - (16 + 477)]][v78[4 - 0]];
									v70 = v70 + (1367 - (658 + 708));
									v78 = v66[v70];
									v3436 = 4 + 5;
								end
							end
						else
							v59[v78[4 - 1]] = v76[v78[2]];
						end
					elseif (v79 <= (278 + 40)) then
						if ((v79 == (964 - (483 + 164))) or (1621 <= 1494)) then
							local v3439;
							local v3440, v3441;
							local v3442;
							v76[v78[2]] = v76[v78[7 - 4]][v76[v78[7 - 3]]];
							v70 = v70 + (549 - (151 + 397));
							v78 = v66[v70];
							v76[v78[5 - 3]] = v59[v78[1226 - (1005 + 218)]];
							v70 = v70 + (656 - (294 + 361));
							v78 = v66[v70];
							v76[v78[1062 - (150 + 910)]] = v76[v78[1 + 2]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[1 + 1]] = v76[v78[12 - 9]] + v78[4];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[9 - 6]][v78[1 + 3]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v3442 = v78[1802 - (756 + 1044)];
							v3440, v3441 = v69(v76[v3442](v13(v76, v3442 + 1, v78[833 - (738 + 92)])));
							v71 = (v3441 + v3442) - (2 - 1);
							v3439 = 1412 - (569 + 843);
							for v4720 = v3442, v71 do
								local v4721 = 0;
								while true do
									if ((4496 >= 3965) and (v4721 == 0)) then
										v3439 = v3439 + (1429 - (262 + 1166));
										v76[v4720] = v3440[v3439];
										break;
									end
								end
							end
							v70 = v70 + (652 - (410 + 241));
							v78 = v66[v70];
							v3442 = v78[1186 - (388 + 796)];
							v76[v3442] = v76[v3442](v13(v76, v3442 + (1009 - (534 + 474)), v71));
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[1 + 1]][v76[v78[1102 - (642 + 457)]]] = v76[v78[4]];
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v76[v78[1478 - (384 + 1092)]] = v76[v78[3]] + v78[1733 - (1190 + 539)];
							v70 = v70 + (754 - (91 + 662));
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[11 - 8]][v76[v78[1051 - (116 + 931)]]];
						else
							v76[v78[2 + 0]] = v76[v78[1 + 2]][v78[1 + 3]];
							v70 = v70 + (3 - 2);
							v78 = v66[v70];
							v76[v78[5 - 3]] = v76[v78[180 - (18 + 159)]][v76[v78[11 - 7]]];
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v76[v78[4 - 2]][v76[v78[3 - 0]]] = v76[v78[9 - 5]];
							v70 = v70 + (320 - (111 + 208));
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[3]] + v78[596 - (364 + 228)];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[6 - 3]][v76[v78[6 - 2]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[3 + 0]][v78[2 + 2]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 - 0]] = v76[v78[3 + 0]][v78[4]];
							v70 = v70 + (378 - (121 + 256));
							v78 = v66[v70];
							v76[v78[8 - 6]][v76[v78[7 - 4]]] = v76[v78[1 + 3]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[1761 - (549 + 1209)]] + v78[5 - 1];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[1384 - (643 + 738)]][v76[v78[3 + 1]]];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[4 - 2]] = v76[v78[1 + 2]][v78[7 - 3]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 - 0]] = v76[v78[1110 - (1038 + 69)]][v78[340 - (157 + 179)]];
							v70 = v70 + (1131 - (204 + 926));
							v78 = v66[v70];
							v76[v78[1959 - (184 + 1773)]][v76[v78[722 - (111 + 608)]]] = v76[v78[3 + 1]];
							v70 = v70 + (3 - 2);
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[2 + 1]] + v78[1 + 3];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[13 - 10]][v76[v78[8 - 4]]];
							v70 = v70 + (3 - 2);
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[1671 - (1328 + 340)]][v78[4]];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[2 + 0]] = v78[6 - 3];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v70 = v78[1017 - (782 + 232)];
						end
					elseif (v79 == (131 + 188)) then
						v76[v78[1305 - (397 + 906)]] = v76[v78[603 - (360 + 240)]][v78[4 - 0]];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[24 - (13 + 9)]] = v59[v78[4 - 1]];
						v70 = v70 + (2 - 1);
						v78 = v66[v70];
						v76[v78[1576 - (272 + 1302)]] = v76[v78[3]][v78[16 - 12]];
						v70 = v70 + (2 - 1);
						v78 = v66[v70];
						v76[v78[5 - 3]] = v76[v78[1 + 2]][v76[v78[7 - 3]]];
						v70 = v70 + 1;
						v78 = v66[v70];
						v76[v78[23 - (8 + 13)]][v76[v78[3 + 0]]] = v76[v78[12 - 8]];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[91 - (28 + 60)]] + v78[4];
						v70 = v70 + 1;
						v78 = v66[v70];
						v76[v78[2 + 0]] = v76[v78[3]][v76[v78[1 + 3]]];
						v70 = v70 + (954 - (133 + 820));
						v78 = v66[v70];
						v76[v78[1 + 1]] = v78[100 - (9 + 88)];
					else
						local v3500 = 250 - (98 + 152);
						while true do
							if ((730 == 730) and (v3500 == (2 + 0))) then
								v78 = v66[v70];
								v76[v78[5 - 3]] = v78[13 - 10];
								v70 = v70 + 1;
								v78 = v66[v70];
								v3500 = 5 - 2;
							end
							if (v3500 == (0 + 0)) then
								v76[v78[2 - 0]] = v76[v78[291 - (44 + 244)]][v78[1393 - (207 + 1182)]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[919 - (904 + 12)]][v78[7 - 3]];
								v3500 = 1 + 0;
							end
							if (v3500 == (3 - 2)) then
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[255 - (241 + 12)]][v76[v78[3 + 0]]] = v76[v78[4]];
								v70 = v70 + (1 - 0);
								v3500 = 1256 - (1187 + 67);
							end
							if (3 == v3500) then
								v70 = v78[3];
								break;
							end
						end
					end
				elseif ((v79 <= (645 - (56 + 216))) or (2958 > 3789)) then
					if ((1777 >= 1108) and (v79 <= (617 - 271))) then
						if (v79 <= (1812 - (1194 + 285))) then
							if (v79 <= (2026 - (401 + 1299))) then
								if (v79 <= (1878 - (1522 + 33))) then
									if (v79 <= (819 - 498)) then
										v76[v78[2 - 0]] = v76[v78[3]][v76[v78[1826 - (1108 + 714)]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[676 - (357 + 317)]] = v76[v78[3]][v78[3 + 1]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[3]][v78[471 - (73 + 394)]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[3]][v76[v78[4]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[253 - (247 + 4)]][v76[v78[631 - (435 + 193)]]] = v76[v78[477 - (428 + 45)]];
										v70 = v70 + (1221 - (158 + 1062));
										v78 = v66[v70];
										v76[v78[1379 - (858 + 519)]] = v78[5 - 2];
									elseif ((4671 >= 793) and (v79 == (1779 - (711 + 746)))) then
										v76[v78[1 + 1]] = v76[v78[3]] % v76[v78[1 + 3]];
									else
										v76[v78[2]] = v76[v78[680 - (229 + 448)]][v78[745 - (357 + 384)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[1583 - (984 + 596)]][v78[7 - 3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[923 - (465 + 456)]] = v76[v78[3]][v76[v78[4 + 0]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[3]][v76[v78[4]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[7 - 5]][v76[v78[5 - 2]]] = v76[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v78[1 + 2];
									end
								elseif ((v79 <= (540 - (172 + 44))) or (4319 < 2844)) then
									local v825 = 0 + 0;
									while true do
										if (v825 == 3) then
											v76[v78[2]] = v76[v78[3 + 0]][v76[v78[383 - (170 + 209)]]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[4 - 2]] = v76[v78[2 + 1]][v78[960 - (244 + 712)]];
											v70 = v70 + 1 + 0;
											v825 = 4;
										end
										if ((v825 == (5 + 0)) or (1200 == 1837)) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[5 - 3]] = v76[v78[3]] + v78[11 - 7];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v825 = 4 + 2;
										end
										if (v825 == (3 - 2)) then
											v78 = v66[v70];
											v76[v78[1248 - (769 + 477)]] = v76[v78[3 - 0]][v78[4 + 0]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[4 - 2]] = v76[v78[5 - 2]][v76[v78[3 + 1]]];
											v825 = 1 + 1;
										end
										if ((v825 == (15 - 8)) or (2020 == 4148)) then
											v78 = v66[v70];
											v76[v78[3 - 1]] = v59[v78[10 - 7]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[10 - 7]][v78[7 - 3]];
											v825 = 646 - (526 + 112);
										end
										if (v825 == 10) then
											v78 = v66[v70];
											v76[v78[3 - 1]] = v76[v78[4 - 1]][v76[v78[662 - (318 + 340)]]];
											v70 = v70 + (624 - (274 + 349));
											v78 = v66[v70];
											v76[v78[3 - 1]] = v78[4 - 1];
											break;
										end
										if ((v825 == (20 - 12)) or (1431 >= 3854)) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[2 - 0]] = v76[v78[1455 - (1429 + 23)]][v76[v78[15 - 11]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v825 = 8 + 1;
										end
										if ((v825 == (8 - 4)) or (2110 > 4672)) then
											v78 = v66[v70];
											v76[v78[1 + 1]][v76[v78[4 - 1]]] = v76[v78[1510 - (1140 + 366)]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[1 + 2]] + v78[4];
											v825 = 14 - 9;
										end
										if (v825 == (0 + 0)) then
											v76[v78[2]] = v76[v78[1 + 2]] + v78[4];
											v70 = v70 + (386 - (271 + 114));
											v78 = v66[v70];
											v76[v78[9 - 7]] = v76[v78[862 - (240 + 619)]][v76[v78[4 + 0]]];
											v70 = v70 + 1;
											v825 = 1 + 0;
										end
										if (v825 == (15 - 6)) then
											v76[v78[859 - (509 + 348)]][v76[v78[8 - 5]]] = v76[v78[1 + 3]];
											v70 = v70 + (1379 - (1014 + 364));
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[7 - 4]] + v78[4];
											v70 = v70 + (1 - 0);
											v825 = 28 - 18;
										end
										if ((3308 > 821) and (v825 == (12 - 6))) then
											v76[v78[2 + 0]] = v76[v78[2 + 1]][v76[v78[4 + 0]]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[1727 - (1565 + 159)]][v78[4 + 0]];
											v70 = v70 + 1;
											v825 = 15 - 8;
										end
										if (v825 == (1 + 1)) then
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[2 - 0]] = v76[v78[1866 - (1445 + 418)]][v78[12 - 8]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v825 = 3 + 0;
										end
									end
								elseif (v79 > (1738 - (26 + 1387))) then
									local v3517 = 0 + 0;
									while true do
										if ((1 + 2) == v3517) then
											v76[v78[2 + 0]] = v78[3];
											break;
										end
										if ((v3517 == (803 - (355 + 448))) or (387 > 2271)) then
											v76[v78[263 - (246 + 15)]] = v76[v78[1 + 2]][v78[2 + 2]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[1 + 1]] = v76[v78[1 + 2]][v76[v78[1 + 3]]];
											v3517 = 1;
										end
										if (v3517 == (1121 - (391 + 728))) then
											v78 = v66[v70];
											v76[v78[1097 - (594 + 501)]] = v76[v78[3 + 0]][v76[v78[1141 - (730 + 407)]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v3517 = 2 + 1;
										end
										if (v3517 == (1 - 0)) then
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[3 - 1]] = v76[v78[3]] + v78[3 + 1];
											v70 = v70 + 1;
											v3517 = 1903 - (438 + 1463);
										end
									end
								else
									local v3518 = 0 + 0;
									local v3519;
									while true do
										if ((39 <= 4815) and (v3518 == (0 + 0))) then
											v3519 = nil;
											v76[v78[1619 - (900 + 717)]] = v76[v78[3]];
											v70 = v70 + (1137 - (820 + 316));
											v78 = v66[v70];
											v3518 = 2 - 1;
										end
										if ((2782 >= 360) and (v3518 == (1802 - (719 + 1079)))) then
											v3519 = v78[2];
											v76[v3519] = v76[v3519](v13(v76, v3519 + (2 - 1), v78[3 - 0]));
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v3518 = 1 + 4;
										end
										if (v3518 == (4 - 1)) then
											v78 = v66[v70];
											v76[v78[205 - (148 + 55)]] = #v76[v78[1456 - (914 + 539)]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v3518 = 3 + 1;
										end
										if ((2231 == 2231) and ((566 - (253 + 307)) == v3518)) then
											v70 = v70 + 1;
											v78 = v66[v70];
											if (v76[v78[2]] == v76[v78[1070 - (926 + 140)]]) then
												v70 = v70 + (1059 - (331 + 727));
											else
												v70 = v78[3];
											end
											break;
										end
										if (v3518 == (1387 - (1014 + 368))) then
											v76[v78[2]] = v78[1580 - (1035 + 542)];
											v70 = v70 + (79 - (44 + 34));
											v78 = v66[v70];
											v76[v78[3 - 1]] = #v76[v78[1 + 2]];
											v3518 = 1 + 5;
										end
										if (v3518 == (3 - 2)) then
											v76[v78[3 - 1]] = v78[2 + 1];
											v70 = v70 + (669 - (355 + 313));
											v78 = v66[v70];
											v76[v78[2]] = #v76[v78[2 + 1]];
											v3518 = 4 - 2;
										end
										if (v3518 == 2) then
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v76[v78[2 + 0]] = v78[3];
											v70 = v70 + 1;
											v3518 = 1868 - (762 + 1103);
										end
									end
								end
							elseif (v79 <= (120 + 209)) then
								if (v79 <= (73 + 254)) then
									local v826 = 0;
									while true do
										if ((1878 == 1878) and (v826 == (1 + 1))) then
											v76[v78[1569 - (1491 + 76)]] = v76[v78[2 + 1]][v76[v78[1 + 3]]];
											v70 = v70 + (763 - (94 + 668));
											v78 = v66[v70];
											v76[v78[1411 - (36 + 1373)]] = v76[v78[3]][v78[1105 - (58 + 1043)]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v826 = 13 - 10;
										end
										if ((v826 == (10 - 3)) or (4440 < 1968)) then
											v76[v78[4 - 2]] = v78[8 - 5];
											break;
										end
										if (v826 == (0 - 0)) then
											v76[v78[2]] = v76[v78[3]][v78[232 - (35 + 193)]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[14 - 11]][v76[v78[656 - (242 + 410)]]];
											v70 = v70 + (1496 - (1285 + 210));
											v78 = v66[v70];
											v826 = 1740 - (1179 + 560);
										end
										if (v826 == (2 + 4)) then
											v76[v78[6 - 4]][v76[v78[5 - 2]]] = v76[v78[4]];
											v70 = v70 + (1217 - (262 + 954));
											v78 = v66[v70];
											v76[v78[7 - 5]] = v76[v78[7 - 4]] + v78[4 + 0];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v826 = 5 + 2;
										end
										if (v826 == (2 + 2)) then
											v76[v78[1 + 1]] = v76[v78[3]] + v78[1846 - (1696 + 146)];
											v70 = v70 + (1907 - (1835 + 71));
											v78 = v66[v70];
											v76[v78[636 - (58 + 576)]] = v76[v78[3]][v76[v78[3 + 1]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v826 = 11 - 6;
										end
										if ((v826 == (3 + 0)) or (1120 == 1817)) then
											v76[v78[82 - (27 + 53)]] = v76[v78[1732 - (22 + 1707)]][v78[5 - 1]];
											v70 = v70 + (891 - (627 + 263));
											v78 = v66[v70];
											v76[v78[7 - 5]][v76[v78[3 - 0]]] = v76[v78[10 - 6]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v826 = 5 - 1;
										end
										if (v826 == 1) then
											v76[v78[2]][v76[v78[1189 - (255 + 931)]]] = v76[v78[4]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v76[v78[1390 - (507 + 881)]] = v76[v78[3 - 0]] + v78[7 - 3];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v826 = 1605 - (475 + 1128);
										end
										if (v826 == (10 - 5)) then
											v76[v78[2]] = v76[v78[4 - 1]][v78[13 - 9]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[360 - (110 + 247)]][v78[1250 - (1109 + 137)]];
											v70 = v70 + (4 - 3);
											v78 = v66[v70];
											v826 = 4 + 2;
										end
									end
								elseif (v79 == (287 + 41)) then
									if ((4566 > 3534) and (v76[v78[5 - 3]] ~= v76[v78[4]])) then
										v70 = v70 + 1 + 0;
									else
										v70 = v78[3 + 0];
									end
								else
									local v3520 = 0 + 0;
									local v3521;
									local v3522;
									local v3523;
									local v3524;
									while true do
										if (((20 - 13) == v3520) or (366 == 4818)) then
											v78 = v66[v70];
											v70 = v78[3];
											break;
										end
										if ((2 + 0) == v3520) then
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[3 + 0]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v3520 = 11 - 8;
										end
										if (v3520 == (1 + 0)) then
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v76[v78[7 - 5]] = v59[v78[3]];
											v70 = v70 + (206 - (192 + 13));
											v3520 = 759 - (585 + 172);
										end
										if (v3520 == 6) then
											v78 = v66[v70];
											v3524 = v78[4 - 2];
											v76[v3524](v13(v76, v3524 + (797 - (76 + 720)), v71));
											v70 = v70 + (2 - 1);
											v3520 = 139 - (45 + 87);
										end
										if (v3520 == (0 - 0)) then
											v3521 = nil;
											v3522, v3523 = nil;
											v3524 = nil;
											v76[v78[3 - 1]] = v76[v78[3 + 0]][v76[v78[13 - 9]]];
											v3520 = 1 + 0;
										end
										if ((v3520 == (3 + 1)) or (4276 == 874)) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v3524 = v78[1285 - (61 + 1222)];
											v3522, v3523 = v69(v76[v3524](v13(v76, v3524 + (1504 - (628 + 875)), v78[3 + 0])));
											v3520 = 9 - 4;
										end
										if (v3520 == 5) then
											v71 = (v3523 + v3524) - (2 - 1);
											v3521 = 1922 - (590 + 1332);
											for v7554 = v3524, v71 do
												local v7555 = 0 - 0;
												while true do
													if ((0 - 0) == v7555) then
														v3521 = v3521 + (2 - 1);
														v76[v7554] = v3522[v3521];
														break;
													end
												end
											end
											v70 = v70 + (1627 - (173 + 1453));
											v3520 = 854 - (237 + 611);
										end
										if (v3520 == (2 + 1)) then
											v76[v78[2]] = v76[v78[2 + 1]] + v78[4];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[7 - 5]] = v76[v78[2 + 1]][v78[8 - 4]];
											v3520 = 10 - 6;
										end
									end
								end
							elseif (v79 <= (706 - (129 + 246))) then
								if ((v79 > 330) or (4713 <= 4495)) then
									local v3525 = 0 - 0;
									while true do
										if (v3525 == (1095 - (83 + 1009))) then
											v76[v78[875 - (506 + 367)]] = v76[v78[3]][v78[19 - 15]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v3525 = 4;
										end
										if (v3525 == (362 - (72 + 286))) then
											v76[v78[2 + 0]] = v76[v78[137 - (107 + 27)]] / v76[v78[1 + 3]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v3525 = 5;
										end
										if ((v3525 == (9 - 7)) or (3667 <= 680)) then
											v76[v78[2 + 0]] = v76[v78[5 - 2]][v76[v78[4]]];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v3525 = 398 - (304 + 91);
										end
										if (v3525 == 0) then
											v76[v78[2 + 0]] = v76[v78[11 - 8]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v3525 = 1 + 0;
										end
										if ((2484 < 3932) and (v3525 == (7 - 2))) then
											v76[v78[1562 - (648 + 912)]][v76[v78[8 - 5]]] = v76[v78[11 - 7]];
											v70 = v70 + (446 - (206 + 239));
											v78 = v66[v70];
											v3525 = 1426 - (956 + 464);
										end
										if ((v3525 == 6) or (885 >= 4044)) then
											v76[v78[270 - (159 + 109)]] = v78[3 + 0];
											break;
										end
										if (v3525 == (680 - (239 + 440))) then
											v76[v78[2]] = v76[v78[8 - 5]][v78[2 + 2]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v3525 = 2;
										end
									end
								else
									local v3526 = 1728 - (1664 + 64);
									while true do
										if ((4275 < 4616) and (v3526 == (2 + 0))) then
											v76[v78[2 + 0]] = v76[v78[6 - 3]][v76[v78[4]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v3526 = 1 + 2;
										end
										if (v3526 == (1519 - (1421 + 93))) then
											v76[v78[7 - 5]] = v78[3];
											break;
										end
										if (v3526 == 0) then
											v76[v78[1150 - (1049 + 99)]] = v59[v78[3 + 0]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v3526 = 1;
										end
										if (v3526 == (1 + 3)) then
											v76[v78[1250 - (871 + 377)]] = v76[v78[2 + 1]] + v78[1781 - (1238 + 539)];
											v70 = v70 + (573 - (206 + 366));
											v78 = v66[v70];
											v3526 = 531 - (489 + 37);
										end
										if ((v3526 == (6 - 3)) or (1095 < 1070)) then
											v76[v78[1 + 1]][v76[v78[4 - 1]]] = v76[v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v3526 = 2 + 2;
										end
										if (v3526 == 1) then
											v76[v78[3 - 1]] = v76[v78[11 - 8]][v78[1 + 3]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v3526 = 3 - 1;
										end
									end
								end
							elseif (v79 == (26 + 306)) then
								v76[v78[1289 - (254 + 1033)]] = v78[3] ~= (0 + 0);
							else
								v76[v78[1764 - (1099 + 663)]] = v76[v78[810 - (504 + 303)]][v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[14 - 11]][v76[v78[8 - 4]]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[241 - (155 + 84)]] = v76[v78[10 - 7]][v78[13 - 9]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1427 - (557 + 868)]] = v76[v78[3]][v76[v78[611 - (33 + 574)]]];
								v70 = v70 + (1566 - (839 + 726));
								v78 = v66[v70];
								v76[v78[3 - 1]][v76[v78[3]]] = v76[v78[13 - 9]];
								v70 = v70 + (332 - (124 + 207));
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[11 - 8]] + v78[4];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[6 - 4]] = v76[v78[5 - 2]] + v78[1 + 3];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[3 + 0]][v76[v78[10 - 6]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[3 + 0]][v78[11 - 7]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1 + 2]][v78[5 - 1]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[6 - 3]][v76[v78[4]]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1012 - (15 + 995)]] = v76[v78[3]][v78[4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[3 - 1]] = v76[v78[3 + 0]][v76[v78[1 + 3]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[40 - (34 + 3)]][v76[v78[12 - 8]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1 + 1]][v76[v78[10 - 7]]] = v76[v78[625 - (477 + 144)]];
								v70 = v70 + (971 - (797 + 173));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1264 - (161 + 1100)]] + v78[1340 - (1150 + 186)];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[32 - (12 + 17)]][v76[v78[5 - 1]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[283 - (68 + 213)]] = v78[3];
							end
						elseif ((3444 > 2935) and (v79 <= (853 - 514))) then
							if ((741 <= 1300) and (v79 <= (111 + 225))) then
								if (v79 <= (4 + 330)) then
									local v827;
									local v828;
									local v827, v829;
									local v830;
									v76[v78[2]] = v76[v78[4 - 1]][v76[v78[4 + 0]]];
									v70 = v70 + (1383 - (349 + 1033));
									v78 = v66[v70];
									v76[v78[356 - (68 + 286)]] = v76[v78[1 + 2]] + v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[3 - 1]] = v76[v78[3]][v76[v78[8 - 4]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v830 = v78[2];
									v827, v829 = v69(v76[v830](v76[v830 + 1 + 0]));
									v71 = (v829 + v830) - (3 - 2);
									v828 = 0 - 0;
									for v1004 = v830, v71 do
										v828 = v828 + (1 - 0);
										v76[v1004] = v827[v828];
									end
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v830 = v78[2 + 0];
									v827 = {v76[v830](v13(v76, v830 + (3 - 2), v71))};
									v828 = 0 - 0;
									for v1007 = v830, v78[2 + 2] do
										v828 = v828 + 1 + 0;
										v76[v1007] = v827[v828];
									end
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[5 - 3]] = v76[v78[1636 - (670 + 963)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1101 - (1034 + 65)]] = v76[v78[52 - (5 + 44)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[47 - (25 + 20)]] = v76[v78[3]] + v76[v78[4]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[1977 - (1535 + 440)]] = v76[v78[3]] - v78[5 - 1];
									v70 = v70 + (620 - (477 + 142));
									v78 = v66[v70];
									v76[v78[2]] = v78[1347 - (1324 + 20)];
								elseif (v79 > (263 + 72)) then
									local v3557;
									local v3558;
									local v3559;
									local v3560;
									local v3561;
									local v3562;
									local v3563;
									local v3564;
									local v3565;
									v3565 = v78[2];
									v3564 = {v76[v3565]()};
									v3563 = v78[4];
									v3562 = 0 + 0;
									for v4799 = v3565, v3563 do
										v3562 = v3562 + 1;
										v76[v4799] = v3564[v3562];
									end
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v59[v78[1621 - (818 + 800)]] = v76[v78[231 - (163 + 66)]];
									v70 = v70 + (4 - 3);
									v78 = v66[v70];
									v76[v78[89 - (40 + 47)]] = v76[v78[638 - (146 + 489)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1390 - (499 + 888)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v3565 = v78[2];
									v3561 = {};
									for v4802 = 1, #v75 do
										v3560 = v75[v4802];
										for v5053 = 0 - 0, #v3560 do
											v3559 = v3560[v5053];
											v3558 = v3559[1 - 0];
											v3557 = v3559[7 - 5];
											if ((v3558 == v76) and (v3557 >= v3565)) then
												local v7556 = 0 - 0;
												while true do
													if (v7556 == (744 - (522 + 222))) then
														v3561[v3557] = v3558[v3557];
														v3559[1 + 0] = v3561;
														break;
													end
												end
											end
										end
									end
								else
									v76[v78[1487 - (72 + 1413)]] = v76[v78[1206 - (216 + 987)]][v76[v78[4]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[9 - 7]] = v76[v78[1414 - (1300 + 111)]][v78[1085 - (1055 + 26)]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[645 - (475 + 168)]] = v76[v78[1370 - (302 + 1065)]][v76[v78[4]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[3 + 0]][v78[1322 - (917 + 401)]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1272 - (631 + 639)]] = v76[v78[1703 - (654 + 1046)]][v76[v78[3 + 1]]];
									v70 = v70 + (1600 - (1007 + 592));
									v78 = v66[v70];
									v76[v78[9 - 7]] = v76[v78[3]][v78[7 - 3]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[8 - 6]][v76[v78[3]]] = v76[v78[11 - 7]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[324 - (26 + 296)]] = v76[v78[3 + 0]] + v78[14 - 10];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[819 - (418 + 399)]] = v76[v78[7 - 4]][v76[v78[1 + 3]]];
								end
							elseif (v79 <= (1044 - (314 + 393))) then
								local v846 = v78[2];
								local v847 = {v76[v846]()};
								local v848 = v78[174 - (82 + 88)];
								local v849 = 0 + 0;
								for v1010 = v846, v848 do
									local v1011 = 147 - (95 + 52);
									while true do
										if (v1011 == (0 + 0)) then
											v849 = v849 + 1 + 0;
											v76[v1010] = v847[v849];
											break;
										end
									end
								end
							elseif (v79 == (984 - 646)) then
								local v3592 = 833 - (8 + 825);
								while true do
									if (v3592 == (0 + 0)) then
										v76[v78[1642 - (471 + 1169)]][v76[v78[3 + 0]]] = v76[v78[2 + 2]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[9 - 7]] = v76[v78[3]] + v78[11 - 7];
										v3592 = 1 + 0;
									end
									if ((v3592 == (1 + 1)) or (2544 <= 116)) then
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[1 + 2]][v76[v78[447 - (365 + 78)]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3592 = 226 - (200 + 23);
									end
									if (v3592 == (1 + 0)) then
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3 + 0]] + v78[383 - (373 + 6)];
										v70 = v70 + 1;
										v3592 = 7 - 5;
									end
									if (v3592 == (4 - 1)) then
										v76[v78[924 - (519 + 403)]] = v76[v78[1524 - (1435 + 86)]][v78[181 - (97 + 80)]];
										break;
									end
								end
							else
								local v3593;
								local v3594;
								local v3593, v3595;
								local v3596;
								v76[v78[3 - 1]] = v76[v78[3]];
								v70 = v70 + (703 - (366 + 336));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[608 - (4 + 601)]][v76[v78[4 + 0]]];
								v70 = v70 + (669 - (128 + 540));
								v78 = v66[v70];
								v76[v78[571 - (341 + 228)]] = v59[v78[1791 - (231 + 1557)]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[8 - 6]] = v76[v78[3]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1353 - (1329 + 22)]] = v76[v78[706 - (27 + 676)]] + v78[15 - 11];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1694 - (219 + 1472)]][v78[1 + 3]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v3596 = v78[390 - (162 + 226)];
								v3593, v3595 = v69(v76[v3596](v13(v76, v3596 + 1, v78[3])));
								v71 = (v3595 + v3596) - 1;
								v3594 = 0;
								for v4804 = v3596, v71 do
									local v4805 = 0;
									while true do
										if ((2234 > 612) and (v4805 == (0 - 0))) then
											v3594 = v3594 + 1 + 0;
											v76[v4804] = v3593[v3594];
											break;
										end
									end
								end
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v3596 = v78[892 - (224 + 666)];
								v3593, v3595 = v69(v76[v3596](v13(v76, v3596 + (1681 - (345 + 1335)), v71)));
								v71 = (v3595 + v3596) - 1;
								v3594 = 0;
								for v4806 = v3596, v71 do
									v3594 = v3594 + 1 + 0;
									v76[v4806] = v3593[v3594];
								end
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v3596 = v78[7 - 5];
								v3593 = {v76[v3596](v13(v76, v3596 + (366 - (18 + 347)), v71))};
								v3594 = 972 - (556 + 416);
								for v4809 = v3596, v78[4] do
									v3594 = v3594 + (1700 - (797 + 902));
									v76[v4809] = v3593[v3594];
								end
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[12 - 9]];
							end
						elseif ((v79 <= (1199 - 857)) or (3239 >= 3620)) then
							if (v79 <= (1412 - (632 + 440))) then
								local v850 = 0 - 0;
								while true do
									if ((v850 == (1215 - (705 + 504))) or (3170 >= 4319)) then
										v76[v78[2 - 0]] = v76[v78[6 - 3]] + v78[1921 - (1300 + 617)];
										v70 = v70 + 1;
										v78 = v66[v70];
										v850 = 31 - 24;
									end
									if ((v850 == (1924 - (36 + 1886))) or (4391 == 1769)) then
										v76[v78[7 - 5]] = v76[v78[619 - (305 + 311)]][v78[3 + 1]];
										v70 = v70 + (1456 - (1093 + 362));
										v78 = v66[v70];
										v850 = 1101 - (734 + 364);
									end
									if (v850 == (1008 - (374 + 634))) then
										v76[v78[1 + 1]] = v76[v78[1120 - (331 + 786)]][v78[1100 - (759 + 337)]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v850 = 1;
									end
									if (((565 - (255 + 309)) == v850) or (2324 <= 856)) then
										v76[v78[495 - (484 + 9)]] = v76[v78[3 + 0]][v76[v78[4]]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v850 = 2;
									end
									if ((6 + 2) == v850) then
										v76[v78[2]] = v78[5 - 2];
										break;
									end
									if (v850 == 3) then
										v76[v78[1452 - (341 + 1109)]] = v76[v78[3]][v76[v78[2 + 2]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v850 = 4;
									end
									if (v850 == (666 - (483 + 176))) then
										v76[v78[1 + 1]] = v76[v78[3 + 0]] + v78[1284 - (47 + 1233)];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v850 = 622 - (421 + 193);
									end
									if (v850 == (19 - 14)) then
										v76[v78[2 - 0]] = v76[v78[3 + 0]] + v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v850 = 6;
									end
									if (v850 == (17 - 13)) then
										v76[v78[1 + 1]][v76[v78[3 + 0]]] = v76[v78[4 + 0]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v850 = 12 - 7;
									end
								end
							elseif (v79 == (2185 - (463 + 1381))) then
								v76[v78[2]] = v76[v78[3]][v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3]][v78[4 + 0]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[3 - 1]][v76[v78[1164 - (696 + 465)]]] = v76[v78[564 - (14 + 546)]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v78[1443 - (413 + 1027)];
								v70 = v70 + (1817 - (1382 + 434));
								v78 = v66[v70];
								v70 = v78[8 - 5];
							else
								local v3621;
								local v3622, v3623;
								local v3624;
								v76[v78[1526 - (86 + 1438)]] = v59[v78[724 - (692 + 29)]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[1 + 2]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3 + 0]] + v78[13 - 9];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[61 - (11 + 47)]] + v78[4];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]] + v78[7 - 3];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[451 - (287 + 162)]] = v76[v78[2 + 1]][v78[1633 - (10 + 1619)]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v3624 = v78[2];
								v3622, v3623 = v69(v76[v3624](v13(v76, v3624 + 1 + 0, v78[3 + 0])));
								v71 = (v3623 + v3624) - (1271 - (403 + 867));
								v3621 = 352 - (310 + 42);
								for v4835 = v3624, v71 do
									local v4836 = 0;
									while true do
										if (v4836 == (0 + 0)) then
											v3621 = v3621 + 1;
											v76[v4835] = v3622[v3621];
											break;
										end
									end
								end
								v70 = v70 + 1;
								v78 = v66[v70];
								v3624 = v78[2];
								v76[v3624] = v76[v3624](v13(v76, v3624 + 1 + 0, v71));
								v70 = v70 + (1446 - (1170 + 275));
								v78 = v66[v70];
								v76[v78[2 + 0]][v76[v78[3]]] = v76[v78[13 - 9]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[685 - (424 + 259)]] = v76[v78[11 - 8]] + v78[1068 - (289 + 775)];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[4 - 2]] = v78[3];
								v70 = v70 + 1;
								v78 = v66[v70];
								v70 = v78[6 - 3];
							end
						elseif ((296 < 4908) and (v79 <= (1350 - 1006))) then
							if ((v79 > (799 - 456)) or (1079 <= 88)) then
								local v3642;
								local v3643, v3644;
								local v3645;
								v76[v78[7 - 5]] = v76[v78[13 - 10]] + v78[1894 - (946 + 944)];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v3645 = v78[8 - 6];
								v3643, v3644 = v69(v76[v3645](v13(v76, v3645 + 1, v78[2 + 1])));
								v71 = (v3644 + v3645) - (1 - 0);
								v3642 = 0;
								for v4837 = v3645, v71 do
									local v4838 = 1443 - (949 + 494);
									while true do
										if (v4838 == (1230 - (505 + 725))) then
											v3642 = v3642 + (2 - 1);
											v76[v4837] = v3643[v3642];
											break;
										end
									end
								end
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v3645 = v78[3 - 1];
								v3643, v3644 = v69(v76[v3645](v13(v76, v3645 + (3 - 2), v71)));
								v71 = (v3644 + v3645) - (1952 - (1928 + 23));
								v3642 = 0 + 0;
								for v4839 = v3645, v71 do
									v3642 = v3642 + (4 - 3);
									v76[v4839] = v3643[v3642];
								end
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v3645 = v78[3 - 1];
								v76[v3645] = v76[v3645](v13(v76, v3645 + (2 - 1), v71));
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[238 - (40 + 196)]] = v76[v78[1020 - (845 + 172)]] % v78[1285 - (423 + 858)];
								v70 = v70 + (1703 - (1520 + 182));
								v78 = v66[v70];
								v3645 = v78[1468 - (196 + 1270)];
								v3643, v3644 = v69(v76[v3645](v76[v3645 + 1]));
								v71 = (v3644 + v3645) - (1807 - (763 + 1043));
								v3642 = 0;
								for v4842 = v3645, v71 do
									v3642 = v3642 + 1;
									v76[v4842] = v3643[v3642];
								end
								v70 = v70 + (4 - 3);
								v78 = v66[v70];
								v3645 = v78[2];
								v76[v3645](v13(v76, v3645 + (1276 - (1144 + 131)), v71));
							else
								local v3654;
								v76[v78[2 - 0]] = v76[v78[532 - (458 + 71)]][v76[v78[11 - 7]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[3 - 1]] = v76[v78[3 + 0]][v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1775 - (775 + 998)]] = v76[v78[3]][v76[v78[148 - (78 + 66)]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[3]] + v78[1048 - (437 + 607)];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[33 - (30 + 1)]] = v76[v78[814 - (786 + 25)]] + v78[4];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[3]] + v78[3 + 1];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3]][v76[v78[4]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v3654 = v78[66 - (9 + 55)];
								v76[v3654](v76[v3654 + (766 - (256 + 509))]);
								v70 = v70 + (1961 - (1497 + 463));
								v78 = v66[v70];
								v76[v78[958 - (567 + 389)]] = v76[v78[63 - (14 + 46)]] + v78[6 - 2];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[4 - 1]][v76[v78[820 - (301 + 515)]]];
								v70 = v70 + (538 - (45 + 492));
								v78 = v66[v70];
								v76[v78[1 + 1]] = v78[6 - 3];
							end
						elseif ((v79 == (216 + 129)) or (2432 <= 2382)) then
							local v3671;
							v76[v78[2 + 0]] = v76[v78[3]][v76[v78[4]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[5 - 2]] + v78[4];
							v70 = v70 + (644 - (228 + 415));
							v78 = v66[v70];
							v76[v78[1 + 1]] = v76[v78[1 + 2]][v76[v78[9 - 5]]];
							v70 = v70 + (255 - (147 + 107));
							v78 = v66[v70];
							v3671 = v78[2];
							v76[v3671](v76[v3671 + 1 + 0]);
							v70 = v70 + 1;
							v78 = v66[v70];
							v70 = v78[3];
						else
							v76[v78[1034 - (925 + 107)]] = v76[v78[475 - (375 + 97)]][v78[14 - 10]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[8 - 5]][v76[v78[1578 - (298 + 1276)]]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[1782 - (1225 + 555)]] = v76[v78[1 + 2]][v78[4]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 - 0]] = v76[v78[292 - (75 + 214)]][v78[9 - 5]];
							v70 = v70 + (452 - (366 + 85));
							v78 = v66[v70];
							v76[v78[855 - (380 + 473)]] = v76[v78[2 + 1]][v76[v78[4]]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 - 0]][v76[v78[1572 - (934 + 635)]]] = v76[v78[684 - (266 + 414)]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[1 + 2]] + v78[549 - (62 + 483)];
							v70 = v70 + (1635 - (904 + 730));
							v78 = v66[v70];
							v76[v78[3 - 1]] = v76[v78[1 + 2]][v76[v78[1230 - (371 + 855)]]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[4 - 2]] = v78[1215 - (749 + 463)];
						end
					elseif ((2953 <= 3971) and (v79 <= (634 - 275))) then
						if (v79 <= (351 + 1)) then
							if (v79 <= (611 - 262)) then
								if (v79 <= 347) then
									local v851 = 0 - 0;
									while true do
										if (v851 == (3 - 0)) then
											v76[v78[6 - 4]][v76[v78[3]]] = v76[v78[3 + 1]];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v851 = 2 + 2;
										end
										if ((5 - 3) == v851) then
											v76[v78[2]] = v76[v78[1 + 2]][v76[v78[13 - 9]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v851 = 8 - 5;
										end
										if (v851 == (1 + 3)) then
											v76[v78[3 - 1]] = v78[47 - (5 + 39)];
											break;
										end
										if ((v851 == (1276 - (20 + 1256))) or (2791 < 1786)) then
											v76[v78[1 + 1]] = v76[v78[659 - (616 + 40)]][v78[11 - 7]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v851 = 1;
										end
										if ((1 - 0) == v851) then
											v76[v78[5 - 3]] = v76[v78[657 - (82 + 572)]][v78[4]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v851 = 4 - 2;
										end
									end
								elseif ((2856 > 1057) and (v79 > 348)) then
									local v3698 = 0;
									while true do
										if ((3324 >= 2546) and ((711 - (349 + 361)) == v3698)) then
											v76[v78[704 - (552 + 150)]] = v76[v78[805 - (521 + 281)]][v78[122 - (15 + 103)]];
											v70 = v70 + (1410 - (974 + 435));
											v78 = v66[v70];
											v3698 = 2 - 0;
										end
										if ((4386 > 217) and (v3698 == (0 - 0))) then
											v76[v78[2]] = v76[v78[3 + 0]][v76[v78[2 + 2]]];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v3698 = 1103 - (925 + 177);
										end
										if (v3698 == (14 - 9)) then
											v76[v78[21 - (12 + 7)]] = v76[v78[3 + 0]][v76[v78[10 - 6]]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v3698 = 3 + 3;
										end
										if ((4 - 2) == v3698) then
											v76[v78[2]] = v76[v78[11 - 8]][v76[v78[4]]];
											v70 = v70 + (1 - 0);
											v78 = v66[v70];
											v3698 = 2 + 1;
										end
										if (v3698 == (369 - (198 + 168))) then
											v76[v78[2]] = v76[v78[3 + 0]][v78[4]];
											v70 = v70 + (2 - 1);
											v78 = v66[v70];
											v3698 = 4;
										end
										if (v3698 == (24 - 17)) then
											v76[v78[2 - 0]] = v78[8 - 5];
											break;
										end
										if ((4850 >= 3208) and (v3698 == 4)) then
											v76[v78[3 - 1]] = v76[v78[63 - (4 + 56)]][v78[9 - 5]];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v3698 = 5 + 0;
										end
										if ((v3698 == (3 + 3)) or (4504 <= 4090)) then
											v76[v78[2 - 0]][v76[v78[1901 - (1270 + 628)]]] = v76[v78[4]];
											v70 = v70 + (1323 - (570 + 752));
											v78 = v66[v70];
											v3698 = 1468 - (958 + 503);
										end
									end
								else
									local v3699;
									v76[v78[3 - 1]] = v59[v78[3 + 0]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[6 - 4]] = v59[v78[3]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v78[1 + 2];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[5 - 3]] = v59[v78[6 - 3]];
									v70 = v70 + (930 - (799 + 130));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3 + 0]][v78[2 + 2]];
									v70 = v70 + (4 - 3);
									v78 = v66[v70];
									v76[v78[1 + 1]] = #v76[v78[7 - 4]];
									v70 = v70 + (1437 - (772 + 664));
									v78 = v66[v70];
									v3699 = v78[1 + 1];
									do
										return v76[v3699](v13(v76, v3699 + 1 + 0, v78[1076 - (46 + 1027)]));
									end
									v70 = v70 + (1354 - (467 + 886));
									v78 = v66[v70];
									v3699 = v78[2 - 0];
									do
										return v13(v76, v3699, v71);
									end
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									do
										return;
									end
								end
							elseif ((943 == 943) and (v79 <= 350)) then
								local v852 = 683 - (582 + 101);
								local v853;
								while true do
									if (v852 == (747 - (574 + 171))) then
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[369 - (66 + 301)]] = v59[v78[3]];
										v70 = v70 + (482 - (423 + 58));
										v852 = 2 + 1;
									end
									if ((v852 == (1080 - (141 + 939))) or (2296 <= 967)) then
										v853 = nil;
										v76[v78[683 - (532 + 149)]] = v59[v78[2 + 1]];
										v70 = v70 + (919 - (592 + 326));
										v78 = v66[v70];
										v852 = 3 - 2;
									end
									if (v852 == 3) then
										v78 = v66[v70];
										v853 = v78[9 - 7];
										do
											return v76[v853](v13(v76, v853 + 1, v78[1 + 2]));
										end
										v70 = v70 + (826 - (467 + 358));
										v852 = 4;
									end
									if (v852 == (17 - 13)) then
										v78 = v66[v70];
										v853 = v78[2 - 0];
										do
											return v13(v76, v853, v71);
										end
										v70 = v70 + 1 + 0;
										v852 = 16 - 11;
									end
									if ((v852 == (2 - 1)) or (4825 <= 3983)) then
										v76[v78[1828 - (233 + 1593)]] = v59[v78[5 - 2]];
										v70 = v70 + (763 - (28 + 734));
										v78 = v66[v70];
										v76[v78[2 - 0]] = v59[v78[3]];
										v852 = 1133 - (337 + 794);
									end
									if (v852 == (4 + 1)) then
										v78 = v66[v70];
										do
											return;
										end
										break;
									end
								end
							elseif (v79 > (168 + 183)) then
								local v3713 = 0;
								while true do
									if (v3713 == (4 + 2)) then
										v76[v78[2 + 0]] = v78[3];
										break;
									end
									if (v3713 == (3 - 2)) then
										v76[v78[704 - (342 + 360)]] = v76[v78[3 + 0]][v76[v78[1003 - (440 + 559)]]];
										v70 = v70 + (579 - (150 + 428));
										v78 = v66[v70];
										v3713 = 1 + 1;
									end
									if (v3713 == 0) then
										v76[v78[159 - (15 + 142)]] = v76[v78[1 + 2]][v78[7 - 3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3713 = 1 + 0;
									end
									if (v3713 == (1678 - (757 + 919))) then
										v76[v78[2]] = v76[v78[2 + 1]][v78[18 - 14]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3713 = 3 + 0;
									end
									if (v3713 == (10 - 6)) then
										v76[v78[3 - 1]][v76[v78[54 - (8 + 43)]]] = v76[v78[10 - 6]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v3713 = 301 - (236 + 60);
									end
									if (v3713 == (1 + 2)) then
										v76[v78[2 + 0]] = v76[v78[1 + 2]][v76[v78[11 - 7]]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v3713 = 4;
									end
									if (5 == v3713) then
										v76[v78[1 + 1]] = v76[v78[9 - 6]] + v78[4 + 0];
										v70 = v70 + (269 - (35 + 233));
										v78 = v66[v70];
										v3713 = 1903 - (547 + 1350);
									end
								end
							else
								local v3714 = 0;
								while true do
									if ((1116 < 1404) and (v3714 == (0 - 0))) then
										v76[v78[2]] = v76[v78[12 - 9]][v78[606 - (593 + 9)]];
										v70 = v70 + (1396 - (298 + 1097));
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[3]][v76[v78[19 - 15]]];
										v3714 = 1;
									end
									if (v3714 == (7 - 4)) then
										v70 = v78[837 - (479 + 355)];
										break;
									end
									if ((v3714 == (397 - (175 + 221))) or (3608 >= 3649)) then
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[1 + 1]][v76[v78[3]]] = v76[v78[4]];
										v70 = v70 + (2 - 1);
										v3714 = 2;
									end
									if (v3714 == (1 + 1)) then
										v78 = v66[v70];
										v76[v78[1 + 1]] = v78[8 - 5];
										v70 = v70 + (1326 - (471 + 854));
										v78 = v66[v70];
										v3714 = 810 - (55 + 752);
									end
								end
							end
						elseif (v79 <= (740 - (97 + 288))) then
							if ((v79 <= (1788 - (317 + 1118))) or (694 >= 3458)) then
								local v854 = 0;
								while true do
									if ((4129 > 3437) and ((1891 - (198 + 1691)) == v854)) then
										v78 = v66[v70];
										v76[v78[2 + 0]] = v78[603 - (263 + 337)];
										v70 = v70 + 1;
										v78 = v66[v70];
										v854 = 3;
									end
									if ((1563 < 3061) and (v854 == 1)) then
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[1012 - (577 + 433)]][v76[v78[2 + 1]]] = v76[v78[990 - (185 + 801)]];
										v70 = v70 + (515 - (270 + 244));
										v854 = 3 - 1;
									end
									if ((v854 == 0) or (3571 < 1680)) then
										v76[v78[2 + 0]] = v76[v78[3 + 0]][v78[4]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[7 - 4]][v78[6 - 2]];
										v854 = 1264 - (653 + 610);
									end
									if ((2946 > 552) and (v854 == (1783 - (1358 + 422)))) then
										v70 = v78[3];
										break;
									end
								end
							elseif ((2358 == 2358) and (v79 > (1505 - (123 + 1028)))) then
								v76[v78[2]] = v76[v78[3]][v78[5 - 1]];
								v70 = v70 + (618 - (469 + 148));
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[7 - 4]][v78[4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[13 - 10]][v76[v78[18 - 14]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3]][v78[8 - 4]];
								v70 = v70 + (1431 - (187 + 1243));
								v78 = v66[v70];
								v76[v78[1906 - (1011 + 893)]] = v76[v78[3]][v76[v78[4]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1 + 2]][v76[v78[1485 - (1349 + 132)]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1418 - (921 + 495)]][v76[v78[759 - (112 + 644)]]] = v76[v78[8 - 4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[281 - (140 + 138)]] + v78[4 + 0];
								v70 = v70 + (265 - (74 + 190));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1355 - (233 + 1119)]] + v78[4];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[4 - 1]][v76[v78[3 + 1]]];
							elseif ((v76[v78[2]] > v76[v78[6 - 2]]) or (4292 < 4191)) then
								v70 = v70 + (506 - (248 + 257));
							else
								v70 = v70 + v78[4 - 1];
							end
						elseif ((v79 <= (1848 - (1472 + 19))) or (2046 < 697)) then
							if (v79 == (336 + 20)) then
								local v3730;
								v76[v78[1 + 1]] = v78[275 - (120 + 152)];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v3730 = v78[2];
								v76[v3730] = v76[v3730](v13(v76, v3730 + 1, v78[7 - 4]));
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1218 - (401 + 815)]][v78[2 + 1]] = v76[v78[10 - 6]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[3]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v78[3];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[4 - 2]] = v78[3];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v3730 = v78[2 + 0];
								v76[v3730] = v76[v3730](v13(v76, v3730 + (761 - (51 + 709)), v78[112 - (33 + 76)]));
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[2 + 0]][v78[5 - 2]] = v76[v78[4]];
								v70 = v70 + (551 - (154 + 396));
								v78 = v66[v70];
								v76[v78[4 - 2]] = v76[v78[3 + 0]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v78[1515 - (24 + 1488)];
							else
								v76[v78[6 - 4]] = v76[v78[430 - (246 + 181)]][v76[v78[4 + 0]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[3 + 0]][v78[1863 - (413 + 1446)]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1 + 2]][v78[1980 - (29 + 1947)]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[3 - 1]][v76[v78[3]]] = v76[v78[4]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2 + 0]] = v78[2 + 1];
							end
						elseif ((v79 == (930 - 572)) or (1524 > 4840)) then
							local v3758;
							local v3759, v3760;
							local v3761;
							v76[v78[1 + 1]] = v59[v78[7 - 4]];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[4 - 2]] = v76[v78[405 - (74 + 328)]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[656 - (144 + 509)]] + v78[4 + 0];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[2 + 1]][v78[4]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v3761 = v78[2];
							v3759, v3760 = v69(v76[v3761](v13(v76, v3761 + 1, v78[1366 - (319 + 1044)])));
							v71 = (v3760 + v3761) - (3 - 2);
							v3758 = 0;
							for v4887 = v3761, v71 do
								v3758 = v3758 + 1;
								v76[v4887] = v3759[v3758];
							end
							v70 = v70 + 1;
							v78 = v66[v70];
							v3761 = v78[632 - (14 + 616)];
							v76[v3761] = v76[v3761](v13(v76, v3761 + (579 - (303 + 275)), v71));
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2]][v76[v78[3]]] = v76[v78[1854 - (1659 + 191)]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[1 + 1]] = v76[v78[571 - (205 + 363)]] + v78[8 - 4];
							v70 = v70 + (575 - (147 + 427));
							v78 = v66[v70];
							v76[v78[2 - 0]] = v76[v78[3]][v76[v78[15 - 11]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v78[4 - 1];
							v70 = v70 + 1;
							v78 = v66[v70];
							v70 = v78[5 - 2];
						else
							local v3779 = 1228 - (1108 + 120);
							local v3780;
							local v3781;
							local v3782;
							local v3783;
							while true do
								if ((v3779 == (13 - 9)) or (156 >= 4594)) then
									v70 = v70 + (652 - (303 + 348));
									v78 = v66[v70];
									v76[v78[313 - (242 + 69)]] = v76[v78[1 + 2]] + v78[217 - (172 + 41)];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[140 - (40 + 98)]] = v76[v78[8 - 5]][v78[801 - (161 + 636)]];
									v70 = v70 + (4 - 3);
									v3779 = 7 - 2;
								end
								if ((3 + 0) == v3779) then
									v76[v78[1 + 1]] = v59[v78[3 + 0]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[631 - (123 + 506)]] = v76[v78[6 - 3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1904 - (296 + 1606)]] = v76[v78[3 + 0]] + v78[8 - 4];
									v3779 = 4 + 0;
								end
								if (v3779 == 6) then
									v78 = v66[v70];
									v3783 = v78[2 + 0];
									v76[v3783] = v76[v3783](v13(v76, v3783 + (1620 - (863 + 756)), v71));
									v70 = v70 + (1425 - (39 + 1385));
									v78 = v66[v70];
									v76[v78[761 - (52 + 707)]][v76[v78[2 + 1]]] = v76[v78[449 - (358 + 87)]];
									v70 = v70 + 1;
									v3779 = 3 + 4;
								end
								if ((27 - 19) == v3779) then
									v76[v78[1336 - (27 + 1307)]] = v76[v78[3]][v76[v78[7 - 3]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[8 - 5]][v76[v78[267 - (152 + 111)]]];
									v3779 = 7 + 2;
								end
								if (v3779 == (19 - 8)) then
									v76[v78[2 + 0]] = v76[v78[10 - 7]] + v78[11 - 7];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[283 - (32 + 249)]] = v78[1057 - (793 + 261)];
									break;
								end
								if ((v3779 == (20 - 13)) or (3243 >= 4589)) then
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3 + 0]] + v78[8 - 4];
									v70 = v70 + (228 - (109 + 118));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1 + 2]] + v78[599 - (115 + 480)];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v3779 = 5 + 3;
								end
								if (v3779 == (9 + 0)) then
									v70 = v70 + (1414 - (547 + 866));
									v78 = v66[v70];
									v76[v78[264 - (259 + 3)]] = v76[v78[2 + 1]][v78[8 - 4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1421 - (891 + 528)]] = v76[v78[3]][v78[6 - 2]];
									v70 = v70 + 1 + 0;
									v3779 = 41 - 31;
								end
								if (v3779 == 10) then
									v78 = v66[v70];
									v76[v78[7 - 5]] = v76[v78[5 - 2]][v76[v78[15 - 11]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1 + 1]][v76[v78[3]]] = v76[v78[1 + 3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v3779 = 24 - 13;
								end
								if (v3779 == (1952 - (1144 + 807))) then
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[3 + 0]] + v78[6 - 2];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1114 - (930 + 182)]] = v76[v78[1837 - (1429 + 405)]][v76[v78[781 - (641 + 136)]]];
									v70 = v70 + 1;
									v3779 = 2;
								end
								if (2 == v3779) then
									v78 = v66[v70];
									v76[v78[5 - 3]] = v76[v78[2 + 1]][v78[13 - 9]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[715 - (87 + 626)]] = v76[v78[4 - 1]][v76[v78[4]]];
									v70 = v70 + (1286 - (1261 + 24));
									v78 = v66[v70];
									v3779 = 3 + 0;
								end
								if ((3277 >= 2271) and (v3779 == (17 - 12))) then
									v78 = v66[v70];
									v3783 = v78[2 + 0];
									v3781, v3782 = v69(v76[v3783](v13(v76, v3783 + 1 + 0, v78[1 + 2])));
									v71 = (v3782 + v3783) - (3 - 2);
									v3780 = 0;
									for v7563 = v3783, v71 do
										v3780 = v3780 + (4 - 3);
										v76[v7563] = v3781[v3780];
									end
									v70 = v70 + (858 - (822 + 35));
									v3779 = 6;
								end
								if ((v3779 == 0) or (2623 >= 4081)) then
									v3780 = nil;
									v3781, v3782 = nil;
									v3783 = nil;
									v76[v78[1787 - (360 + 1425)]] = v76[v78[7 - 4]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[5 - 3]][v76[v78[3 + 0]]] = v76[v78[4]];
									v3779 = 297 - (283 + 13);
								end
							end
						end
					elseif (v79 <= (749 - 383)) then
						if (v79 <= (240 + 122)) then
							if (v79 <= (120 + 240)) then
								local v855;
								local v856;
								local v857;
								v76[v78[2 - 0]] = v59[v78[3]];
								v70 = v70 + (1031 - (810 + 220));
								v78 = v66[v70];
								v76[v78[2]] = v59[v78[5 - 2]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[213 - (195 + 16)]] = v59[v78[6 - 3]];
								v70 = v70 + (4 - 3);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1 + 2]] + v78[4];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v857 = v78[1 + 1];
								v856 = {v76[v857](v13(v76, v857 + (586 - (92 + 493)), v78[2 + 1]))};
								v855 = 0 + 0;
								for v1012 = v857, v78[1162 - (75 + 1083)] do
									v855 = v855 + 1;
									v76[v1012] = v856[v855];
								end
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[3 - 1]] = v76[v78[14 - 11]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[2 + 1]];
								v70 = v70 + (4 - 3);
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[1378 - (159 + 1216)]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[3 + 0]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[1617 - (418 + 1197)]] = v59[v78[967 - (632 + 332)]];
							elseif (v79 > (1959 - (964 + 634))) then
								local v3784 = 0 - 0;
								local v3785;
								local v3786;
								local v3787;
								while true do
									if (v3784 == (1 + 0)) then
										v3787 = 0 + 0;
										for v7566 = v3785, v78[4 + 0] do
											v3787 = v3787 + (1 - 0);
											v76[v7566] = v3786[v3787];
										end
										break;
									end
									if (v3784 == (0 - 0)) then
										v3785 = v78[4 - 2];
										v3786 = {v76[v3785](v13(v76, v3785 + 1 + 0, v71))};
										v3784 = 1 + 0;
									end
								end
							else
								local v3788 = 0 + 0;
								local v3789;
								local v3790;
								local v3791;
								local v3792;
								while true do
									if (v3788 == (38 - (9 + 28))) then
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v59[v78[3]];
										v70 = v70 + 1;
										v3788 = 5 - 3;
									end
									if ((v3788 == 10) or (3653 == 908)) then
										v78 = v66[v70];
										v76[v78[2]] = v78[1955 - (922 + 1030)];
										v70 = v70 + (384 - (345 + 38));
										v78 = v66[v70];
										v3788 = 11;
									end
									if ((4833 == 4833) and ((2 + 2) == v3788)) then
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[6 - 4]] = v76[v78[563 - (546 + 14)]][v78[4]];
										v70 = v70 + (1068 - (7 + 1060));
										v3788 = 5 + 0;
									end
									if ((2346 < 2502) and (v3788 == (34 - 25))) then
										v70 = v70 + (401 - (256 + 144));
										v78 = v66[v70];
										v76[v78[124 - (7 + 115)]] = v76[v78[3]][v76[v78[538 - (21 + 513)]]];
										v70 = v70 + 1;
										v3788 = 9 + 1;
									end
									if (v3788 == 8) then
										v76[v78[2]][v76[v78[1280 - (59 + 1218)]]] = v76[v78[7 - 3]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[5 - 3]] = v76[v78[189 - (155 + 31)]] + v78[5 - 1];
										v3788 = 2 + 7;
									end
									if ((965 == 965) and (v3788 == (0 + 0))) then
										v3789 = nil;
										v3790, v3791 = nil;
										v3792 = nil;
										v76[v78[2]] = v76[v78[1994 - (1417 + 574)]][v76[v78[4]]];
										v3788 = 1;
									end
									if ((578 < 1550) and (v3788 == (158 - (112 + 40)))) then
										v3789 = 0 - 0;
										for v7569 = v3792, v71 do
											v3789 = v3789 + 1 + 0;
											v76[v7569] = v3790[v3789];
										end
										v70 = v70 + (685 - (326 + 358));
										v78 = v66[v70];
										v3788 = 839 - (4 + 828);
									end
									if ((4974 > 2653) and (v3788 == (5 - 3))) then
										v78 = v66[v70];
										v76[v78[1719 - (85 + 1632)]] = v76[v78[3 + 0]];
										v70 = v70 + (1140 - (1096 + 43));
										v78 = v66[v70];
										v3788 = 3;
									end
									if ((2548 <= 4380) and ((429 - (176 + 242)) == v3788)) then
										v70 = v78[915 - (313 + 599)];
										break;
									end
									if (v3788 == (646 - (402 + 237))) then
										v3792 = v78[2];
										v76[v3792] = v76[v3792](v13(v76, v3792 + 1 + 0, v71));
										v70 = v70 + (1057 - (551 + 505));
										v78 = v66[v70];
										v3788 = 8;
									end
									if (v3788 == (9 - 6)) then
										v76[v78[2]] = v76[v78[7 - 4]] + v78[437 - (268 + 165)];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[2 + 1]] + v78[4];
										v3788 = 9 - 5;
									end
									if (v3788 == (1777 - (238 + 1534))) then
										v78 = v66[v70];
										v3792 = v78[3 - 1];
										v3790, v3791 = v69(v76[v3792](v13(v76, v3792 + 1, v78[921 - (302 + 616)])));
										v71 = (v3791 + v3792) - 1;
										v3788 = 6;
									end
								end
							end
						elseif (v79 <= (302 + 62)) then
							if ((v79 == (2191 - (1054 + 774))) or (1791 >= 4397)) then
								v76[v78[2 + 0]] = v76[v78[1328 - (240 + 1085)]][v78[4]];
								v70 = v70 + (1228 - (1220 + 7));
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[1972 - (1819 + 150)]][v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[3 + 0]][v76[v78[2 + 2]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]][v76[v78[1 + 2]]] = v76[v78[4 + 0]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1366 - (229 + 1135)]] = v76[v78[6 - 3]] + v78[9 - 5];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v78[1 + 2];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v70 = v78[785 - (289 + 493)];
							else
								local v3804 = 0 + 0;
								local v3805;
								local v3806;
								local v3807;
								local v3808;
								while true do
									if ((3979 > 3828) and (v3804 == (13 - 9))) then
										v3806, v3807 = v69(v76[v3808](v13(v76, v3808 + 1 + 0, v78[6 - 3])));
										v71 = (v3807 + v3808) - (1 + 0);
										v3805 = 0 + 0;
										for v7572 = v3808, v71 do
											v3805 = v3805 + (1289 - (1170 + 118));
											v76[v7572] = v3806[v3805];
										end
										v3804 = 1814 - (817 + 992);
									end
									if ((2096 >= 658) and (v3804 == (13 - 7))) then
										v70 = v70 + (4 - 3);
										v78 = v66[v70];
										v76[v78[1174 - (852 + 320)]][v76[v78[3]]] = v76[v78[3 + 1]];
										v70 = v70 + 1;
										v3804 = 808 - (731 + 70);
									end
									if ((v3804 == (15 - 5)) or (1058 >= 2045)) then
										v78 = v66[v70];
										v76[v78[600 - (17 + 581)]] = v76[v78[1326 - (470 + 853)]][v78[68 - (30 + 34)]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3804 = 22 - 11;
									end
									if ((228 - (180 + 40)) == v3804) then
										v76[v78[5 - 3]] = v76[v78[3]][v76[v78[182 - (11 + 167)]]];
										v70 = v70 + (1640 - (127 + 1512));
										v78 = v66[v70];
										v76[v78[3 - 1]] = v76[v78[10 - 7]][v78[4]];
										v3804 = 9;
									end
									if ((3927 > 3141) and ((6 + 8) == v3804)) then
										v70 = v78[6 - 3];
										break;
									end
									if ((3438 >= 385) and (v3804 == 5)) then
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v3808 = v78[1 + 1];
										v76[v3808] = v76[v3808](v13(v76, v3808 + (2 - 1), v71));
										v3804 = 894 - (304 + 584);
									end
									if (v3804 == 9) then
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[4 - 1]][v76[v78[4]]];
										v70 = v70 + 1 + 0;
										v3804 = 10;
									end
									if ((v3804 == (33 - 26)) or (899 >= 1489)) then
										v78 = v66[v70];
										v76[v78[1663 - (997 + 664)]] = v76[v78[2 + 1]] + v78[2 + 2];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v3804 = 8;
									end
									if (v3804 == (986 - (231 + 753))) then
										v78 = v66[v70];
										v76[v78[2 - 0]] = v76[v78[1581 - (615 + 963)]] + v78[1 + 3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3804 = 3 + 0;
									end
									if ((4 - 1) == v3804) then
										v76[v78[1806 - (863 + 941)]] = v76[v78[841 - (461 + 377)]][v78[4 + 0]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v3808 = v78[1274 - (455 + 817)];
										v3804 = 4;
									end
									if ((4440 >= 1131) and ((9 + 4) == v3804)) then
										v78 = v66[v70];
										v76[v78[834 - (123 + 709)]] = v78[1 + 2];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3804 = 1708 - (618 + 1076);
									end
									if (1 == v3804) then
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v76[v78[8 - 6]] = v76[v78[3 + 0]];
										v70 = v70 + (945 - (657 + 287));
										v3804 = 7 - 5;
									end
									if (v3804 == (1862 - (1256 + 595))) then
										v76[v78[2]] = v76[v78[3 + 0]][v78[78 - (59 + 15)]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[2 + 1]][v76[v78[4]]];
										v3804 = 764 - (406 + 346);
									end
									if ((3368 < 4492) and (v3804 == 0)) then
										v3805 = nil;
										v3806, v3807 = nil;
										v3808 = nil;
										v76[v78[4 - 2]] = v59[v78[11 - 8]];
										v3804 = 1 + 0;
									end
									if (v3804 == (203 - (127 + 64))) then
										v70 = v70 + (946 - (70 + 875));
										v78 = v66[v70];
										v76[v78[3 - 1]][v76[v78[7 - 4]]] = v76[v78[3 + 1]];
										v70 = v70 + 1 + 0;
										v3804 = 1602 - (1039 + 550);
									end
								end
							end
						elseif ((v79 == 365) or (1753 > 2175)) then
							if ((v76[v78[204 - (35 + 167)]] <= v78[1217 - (103 + 1110)]) or (513 <= 391)) then
								v70 = v70 + 1;
							else
								v70 = v78[1117 - (540 + 574)];
							end
						else
							v76[v78[6 - 4]] = v76[v78[1397 - (1283 + 111)]][v76[v78[4]]];
							v70 = v70 + (353 - (204 + 148));
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[4 - 1]][v78[4 + 0]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[552 - (58 + 492)]] = v76[v78[12 - 9]][v78[8 - 4]];
							v70 = v70 + (4 - 3);
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[3]][v76[v78[1 + 3]]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2]][v76[v78[3]]] = v76[v78[787 - (531 + 252)]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v70 = v78[3 + 0];
						end
					elseif ((v79 <= (1077 - 708)) or (2751 == 1094)) then
						if (v79 <= (2153 - (928 + 858))) then
							local v874 = 0 - 0;
							local v875;
							local v876;
							local v877;
							local v878;
							while true do
								if ((4950 >= 928) and (v874 == (777 - (108 + 664)))) then
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[3 - 1]] = v76[v78[3 + 0]][v78[839 - (732 + 103)]];
									v70 = v70 + 1;
									v874 = 634 - (351 + 277);
								end
								if (v874 == (684 - (538 + 142))) then
									v76[v78[8 - 6]] = v76[v78[1830 - (189 + 1638)]] + v78[4];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[1225 - (348 + 875)]] = v76[v78[1219 - (1202 + 14)]] + v78[639 - (619 + 16)];
									v874 = 684 - (445 + 234);
								end
								if (v874 == 7) then
									v876 = 0 - 0;
									for v5060 = v878, v71 do
										local v5061 = 0;
										while true do
											if (v5061 == (501 - (295 + 206))) then
												v876 = v876 + 1 + 0;
												v76[v5060] = v875[v876];
												break;
											end
										end
									end
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v874 = 8 + 0;
								end
								if (v874 == (7 + 1)) then
									v878 = v78[2 + 0];
									v875, v877 = v69(v76[v878](v13(v76, v878 + 1 + 0, v71)));
									v71 = (v877 + v878) - (148 - (84 + 63));
									v876 = 0;
									v874 = 1381 - (913 + 459);
								end
								if (v874 == (791 - (700 + 82))) then
									for v5062 = v878, v71 do
										v876 = v876 + 1 + 0;
										v76[v5062] = v875[v876];
									end
									v70 = v70 + 1;
									v78 = v66[v70];
									v878 = v78[2];
									v874 = 10 + 0;
								end
								if (v874 == 1) then
									v76[v78[445 - (362 + 81)]] = v76[v78[3]];
									v70 = v70 + (180 - (133 + 46));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[5 - 2]][v76[v78[4]]];
									v874 = 1527 - (1219 + 306);
								end
								if ((v874 == 6) or (3551 <= 3486)) then
									v78 = v66[v70];
									v878 = v78[1959 - (1012 + 945)];
									v875, v877 = v69(v76[v878](v13(v76, v878 + (758 - (481 + 276)), v78[6 - 3])));
									v71 = (v877 + v878) - (2 - 1);
									v874 = 130 - (49 + 74);
								end
								if ((2797 == 2797) and (v874 == 2)) then
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v59[v78[7 - 4]];
									v70 = v70 + (3 - 2);
									v874 = 7 - 4;
								end
								if (v874 == (7 + 3)) then
									v875 = {v76[v878](v13(v76, v878 + 1, v71))};
									v876 = 0;
									for v5065 = v878, v78[16 - 12] do
										local v5066 = 0 - 0;
										while true do
											if ((0 == v5066) or (1774 > 4331)) then
												v876 = v876 + 1;
												v76[v5065] = v875[v876];
												break;
											end
										end
									end
									break;
								end
								if (v874 == (0 - 0)) then
									v875 = nil;
									v876 = nil;
									v875, v877 = nil;
									v878 = nil;
									v874 = 1 + 0;
								end
								if ((3741 < 4998) and (v874 == 3)) then
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[3 + 0]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v874 = 10 - 6;
								end
							end
						elseif (v79 > 368) then
							local v3821 = 0 + 0;
							local v3822;
							while true do
								if ((1 + 4) == v3821) then
									v76[v78[4 - 2]] = v78[3 - 0];
									break;
								end
								if ((v3821 == (1730 - (17 + 1711))) or (2958 >= 4802)) then
									v76[v3822] = v76[v3822](v13(v76, v3822 + (2 - 1), v78[3]));
									v70 = v70 + (114 - (14 + 99));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[2 + 1]];
									v3821 = 5 - 2;
								end
								if (v3821 == 4) then
									v78 = v66[v70];
									v59[v78[313 - (287 + 23)]] = v76[v78[4 - 2]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v3821 = 5;
								end
								if ((1849 <= 4895) and (v3821 == 1)) then
									v76[v78[436 - (54 + 380)]] = v59[v78[7 - 4]];
									v70 = v70 + (1637 - (486 + 1150));
									v78 = v66[v70];
									v3822 = v78[818 - (356 + 460)];
									v3821 = 2;
								end
								if (v3821 == (0 + 0)) then
									v3822 = nil;
									v76[v78[2 - 0]] = v76[v78[6 - 3]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v3821 = 1454 - (1281 + 172);
								end
								if ((v3821 == (588 - (158 + 427))) or (3573 == 419)) then
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									for v7575 = v78[7 - 5], v78[3 + 0] do
										v76[v7575] = nil;
									end
									v70 = v70 + (877 - (103 + 773));
									v3821 = 4 + 0;
								end
							end
						else
							local v3823 = 1494 - (739 + 755);
							local v3824;
							local v3825;
							local v3826;
							local v3827;
							while true do
								if ((1523 <= 2269) and (v3823 == 2)) then
									v70 = v70 + (344 - (39 + 304));
									v78 = v66[v70];
									v76[v78[507 - (129 + 376)]] = v59[v78[1543 - (282 + 1258)]];
									v70 = v70 + (1288 - (204 + 1083));
									v78 = v66[v70];
									v3823 = 709 - (471 + 235);
								end
								if (v3823 == (0 - 0)) then
									v3824 = nil;
									v3825, v3826 = nil;
									v3827 = nil;
									v76[v78[2]] = v76[v78[3]][v76[v78[1091 - (38 + 1049)]]];
									v70 = v70 + (1626 - (1437 + 188));
									v3823 = 1;
								end
								if ((v3823 == (2 + 3)) or (67 >= 3548)) then
									v3825, v3826 = v69(v76[v3827](v13(v76, v3827 + 1 + 0, v78[3 + 0])));
									v71 = (v3826 + v3827) - (1 + 0);
									v3824 = 0;
									for v7577 = v3827, v71 do
										local v7578 = 0 - 0;
										while true do
											if ((v7578 == 0) or (3617 <= 947)) then
												v3824 = v3824 + (44 - (11 + 32));
												v76[v7577] = v3825[v3824];
												break;
											end
										end
									end
									v70 = v70 + (256 - (81 + 174));
									v3823 = 6;
								end
								if (v3823 == (15 - 9)) then
									v78 = v66[v70];
									v3827 = v78[8 - 6];
									v76[v3827](v13(v76, v3827 + (765 - (513 + 251)), v71));
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v3823 = 7;
								end
								if (v3823 == (2 + 5)) then
									v76[v78[1 + 1]] = v76[v78[1127 - (1075 + 49)]] + v78[770 - (373 + 393)];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[890 - (875 + 13)]] = v78[3];
									break;
								end
								if (v3823 == (1 + 0)) then
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[2 + 1]][v78[16 - 12]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[9 - 6]][v76[v78[4 + 0]]];
									v3823 = 9 - 7;
								end
								if ((v3823 == 4) or (995 >= 2982)) then
									v78 = v66[v70];
									v76[v78[335 - (273 + 60)]] = v76[v78[3]][v78[15 - 11]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v3827 = v78[7 - 5];
									v3823 = 7 - 2;
								end
								if ((314 < 934) and (v3823 == 3)) then
									v76[v78[557 - (361 + 194)]] = v76[v78[3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[12 - 9]] + v78[3 + 1];
									v70 = v70 + (3 - 2);
									v3823 = 2 + 2;
								end
							end
						end
					elseif (v79 <= (1329 - 958)) then
						if ((v79 == (1217 - (257 + 590))) or (3080 >= 4417)) then
							local v3828 = 0 - 0;
							local v3829;
							local v3830;
							local v3831;
							local v3832;
							while true do
								if (v3828 == (1958 - (856 + 1099))) then
									v76[v78[1928 - (1556 + 370)]] = v76[v78[9 - 6]][v78[7 - 3]];
									v70 = v70 + (173 - (24 + 148));
									v78 = v66[v70];
									v76[v78[1 + 1]][v76[v78[3]]] = v76[v78[4 + 0]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v3828 = 4 + 0;
								end
								if ((19 - 12) == v3828) then
									v76[v78[6 - 4]] = v76[v78[3 - 0]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[5 - 3]] = v76[v78[1 + 2]] + v78[4];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v3828 = 3 + 5;
								end
								if (v3828 == (22 - 17)) then
									v76[v78[1 + 1]] = v76[v78[2 + 1]][v76[v78[9 - 5]]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[11 - 8]][v78[9 - 5]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v3828 = 7 - 1;
								end
								if ((v3828 == (8 + 1)) or (1472 >= 3716)) then
									v3829 = 0 - 0;
									for v7579 = v3832, v71 do
										v3829 = v3829 + 1 + 0;
										v76[v7579] = v3830[v3829];
									end
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v3832 = v78[2 + 0];
									v76[v3832] = v76[v3832](v13(v76, v3832 + 1 + 0, v71));
									v3828 = 1729 - (976 + 743);
								end
								if ((1895 < 3682) and (v3828 == (3 - 1))) then
									v76[v78[1516 - (1273 + 241)]] = v76[v78[7 - 4]][v76[v78[11 - 7]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[268 - (135 + 130)]][v78[4]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v3828 = 3;
								end
								if (v3828 == 8) then
									v76[v78[2 + 0]] = v76[v78[3 + 0]][v78[11 - 7]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v3832 = v78[1 + 1];
									v3830, v3831 = v69(v76[v3832](v13(v76, v3832 + (1742 - (1289 + 452)), v78[1 + 2])));
									v71 = (v3831 + v3832) - (330 - (90 + 239));
									v3828 = 938 - (117 + 812);
								end
								if (v3828 == 4) then
									v76[v78[1001 - (146 + 853)]] = v76[v78[1968 - (986 + 979)]] + v78[662 - (555 + 103)];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[739 - (329 + 408)]] = v76[v78[3]] + v78[4];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v3828 = 5;
								end
								if (v3828 == (1710 - (838 + 872))) then
									v3829 = nil;
									v3830, v3831 = nil;
									v3832 = nil;
									v76[v78[2]] = v76[v78[2 + 1]][v78[527 - (400 + 123)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v3828 = 1957 - (547 + 1409);
								end
								if ((2956 == 2956) and (v3828 == 1)) then
									v76[v78[2]][v76[v78[3]]] = v76[v78[84 - (73 + 7)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[9 - 6]] + v78[5 - 1];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v3828 = 1 + 1;
								end
								if (v3828 == 10) then
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v76[v78[3]]] = v76[v78[3 + 1]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[1991 - (98 + 1891)]] = v76[v78[42 - (16 + 23)]] + v78[1736 - (1184 + 548)];
									v3828 = 1541 - (270 + 1260);
								end
								if (v3828 == (7 + 4)) then
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[737 - (60 + 675)]] = v78[1 + 2];
									break;
								end
								if ((2889 == 2889) and (v3828 == (1208 - (984 + 218)))) then
									v76[v78[384 - (45 + 337)]] = v76[v78[331 - (74 + 254)]][v76[v78[1 + 3]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1351 - (1190 + 159)]] = v59[v78[3 + 0]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v3828 = 1 + 6;
								end
							end
						else
							v76[v78[2 + 0]] = v76[v78[7 - 4]][v78[2 + 2]];
							v70 = v70 + (1419 - (192 + 1226));
							v78 = v66[v70];
							v76[v78[738 - (511 + 225)]][v76[v78[3 + 0]]] = v76[v78[1399 - (1200 + 195)]];
							v70 = v70 + (1579 - (329 + 1249));
							v78 = v66[v70];
							v76[v78[779 - (631 + 146)]] = v76[v78[11 - 8]] + v78[2 + 2];
							v70 = v70 + (1034 - (510 + 523));
							v78 = v66[v70];
							v76[v78[1 + 1]] = v76[v78[13 - 10]] + v78[2 + 2];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[1473 - (996 + 475)]] = v78[2 + 1];
						end
					elseif (v79 == (586 - 214)) then
						local v3842 = 0 + 0;
						local v3843;
						local v3844;
						local v3845;
						local v3846;
						while true do
							if ((v3842 == (1 + 0)) or (1510 < 1316)) then
								v70 = v70 + (1943 - (1132 + 810));
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[11 - 8]][v78[4]];
								v70 = v70 + 1 + 0;
								v3842 = 1963 - (941 + 1020);
							end
							if (v3842 == 2) then
								v78 = v66[v70];
								v3846 = v78[2];
								v3844, v3845 = v69(v76[v3846](v13(v76, v3846 + (528 - (313 + 214)), v78[547 - (363 + 181)])));
								v71 = (v3845 + v3846) - (1 + 0);
								v3842 = 3;
							end
							if ((1 + 4) == v3842) then
								v76[v78[1451 - (91 + 1358)]][v76[v78[1 + 2]]] = v76[v78[8 - 4]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[8 - 5]] + v78[7 - 3];
								break;
							end
							if (v3842 == (11 - 7)) then
								v3846 = v78[1 + 1];
								v76[v3846] = v76[v3846](v13(v76, v3846 + 1 + 0, v71));
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v3842 = 20 - 15;
							end
							if (v3842 == 3) then
								v3843 = 0 + 0;
								for v7582 = v3846, v71 do
									local v7583 = 0 - 0;
									while true do
										if ((v7583 == (868 - (311 + 557))) or (631 > 3337)) then
											v3843 = v3843 + (164 - (117 + 46));
											v76[v7582] = v3844[v3843];
											break;
										end
									end
								end
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v3842 = 508 - (268 + 236);
							end
							if (v3842 == (0 + 0)) then
								v3843 = nil;
								v3844, v3845 = nil;
								v3846 = nil;
								v76[v78[2]] = v76[v78[3]] + v78[184 - (92 + 88)];
								v3842 = 1 - 0;
							end
						end
					else
						local v3847;
						local v3848, v3849;
						local v3850;
						v76[v78[1086 - (745 + 339)]] = v59[v78[2 + 1]];
						v70 = v70 + 1;
						v78 = v66[v70];
						v76[v78[2 + 0]] = v76[v78[4 - 1]];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[5 - 3]] = v76[v78[741 - (582 + 156)]] + v78[1774 - (268 + 1502)];
						v70 = v70 + (1447 - (219 + 1227));
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[1 + 2]][v78[11 - 7]];
						v70 = v70 + (2 - 1);
						v78 = v66[v70];
						v3850 = v78[6 - 4];
						v3848, v3849 = v69(v76[v3850](v13(v76, v3850 + (1 - 0), v78[1979 - (1855 + 121)])));
						v71 = (v3849 + v3850) - 1;
						v3847 = 0;
						for v4913 = v3850, v71 do
							v3847 = v3847 + 1;
							v76[v4913] = v3848[v3847];
						end
						v70 = v70 + (4 - 3);
						v78 = v66[v70];
						v3850 = v78[4 - 2];
						v76[v3850] = v76[v3850](v13(v76, v3850 + (787 - (452 + 334)), v71));
						v70 = v70 + (1 - 0);
						v78 = v66[v70];
						v76[v78[1395 - (698 + 695)]][v76[v78[6 - 3]]] = v76[v78[4]];
						v70 = v70 + (2 - 1);
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[4 - 1]] + v78[8 - 4];
						v70 = v70 + (1 - 0);
						v78 = v66[v70];
						v76[v78[6 - 4]] = v76[v78[3]] + v78[4 + 0];
						v70 = v70 + (1730 - (529 + 1200));
						v78 = v66[v70];
						v76[v78[1 + 1]] = v78[281 - (199 + 79)];
					end
				elseif (v79 <= 400) then
					if (v79 <= (306 + 80)) then
						if ((v79 <= (1245 - 866)) or (1707 < 650)) then
							if ((v79 <= (960 - (120 + 464))) or (3921 <= 3558)) then
								if (v79 <= (753 - 379)) then
									local v879 = 0 + 0;
									while true do
										if (v879 == (757 - (33 + 721))) then
											v76[v78[1365 - (1061 + 302)]] = v76[v78[3]] + v78[1733 - (719 + 1010)];
											v70 = v70 + (3 - 2);
											v78 = v66[v70];
											v76[v78[941 - (446 + 493)]] = v78[1 + 2];
											break;
										end
										if ((2351 == 2351) and (v879 == 2)) then
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[1147 - (602 + 542)]] + v78[4];
											v70 = v70 + 1 + 0;
											v78 = v66[v70];
											v879 = 7 - 4;
										end
										if ((1390 == 1390) and ((362 - (276 + 85)) == v879)) then
											v70 = v70 + (1381 - (816 + 564));
											v78 = v66[v70];
											v76[v78[4 - 2]][v76[v78[917 - (854 + 60)]]] = v76[v78[4]];
											v70 = v70 + (696 - (227 + 468));
											v879 = 1 + 1;
										end
										if (v879 == (529 - (54 + 475))) then
											v76[v78[2 - 0]] = v76[v78[35 - (21 + 11)]][v78[4 + 0]];
											v70 = v70 + (1596 - (1351 + 244));
											v78 = v66[v70];
											v76[v78[2 + 0]] = v76[v78[11 - 8]][v76[v78[428 - (407 + 17)]]];
											v879 = 1;
										end
									end
								elseif (v79 > (46 + 329)) then
									local v3867 = 0;
									local v3868;
									while true do
										if (v3867 == (0 + 0)) then
											v3868 = v78[2];
											v76[v3868] = v76[v3868](v13(v76, v3868 + (950 - (174 + 775)), v71));
											break;
										end
									end
								else
									v76[v78[1762 - (601 + 1159)]] = v76[v78[1151 - (388 + 760)]][v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1952 - (900 + 1050)]] = v76[v78[3]][v76[v78[4 + 0]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 + 0]][v76[v78[2 + 1]]] = v76[v78[13 - 9]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[284 - (80 + 202)]] = v76[v78[3 + 0]] + v78[11 - 7];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2 - 0]] = v76[v78[3]][v76[v78[15 - 11]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v78[667 - (308 + 356)];
								end
							elseif (v79 <= (352 + 25)) then
								local v880 = 0 - 0;
								while true do
									if (v880 == (6 + 0)) then
										v76[v78[2 - 0]] = v76[v78[1057 - (1021 + 33)]] + v78[1055 - (46 + 1005)];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v880 = 15 - 8;
									end
									if (v880 == (3 + 0)) then
										v76[v78[2]] = v76[v78[3 - 0]][v76[v78[1 + 3]]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v880 = 4;
									end
									if (v880 == (22 - 14)) then
										v70 = v78[3];
										break;
									end
									if (v880 == (6 - 2)) then
										v76[v78[4 - 2]][v76[v78[2 + 1]]] = v76[v78[6 - 2]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v880 = 1061 - (131 + 925);
									end
									if ((1289 - (347 + 941)) == v880) then
										v76[v78[1623 - (893 + 728)]] = v76[v78[2 + 1]][v78[2 + 2]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v880 = 2 - 0;
									end
									if (v880 == (10 - 5)) then
										v76[v78[1 + 1]] = v76[v78[11 - 8]] + v78[4 + 0];
										v70 = v70 + (909 - (599 + 309));
										v78 = v66[v70];
										v880 = 1918 - (1598 + 314);
									end
									if ((0 + 0) == v880) then
										v76[v78[2]] = v76[v78[8 - 5]][v76[v78[1618 - (274 + 1340)]]];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v880 = 1 + 0;
									end
									if (v880 == (1421 - (557 + 857))) then
										v76[v78[2]] = v78[8 - 5];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v880 = 1120 - (581 + 531);
									end
									if ((694 == 694) and (v880 == 2)) then
										v76[v78[6 - 4]] = v76[v78[3]][v78[1339 - (1314 + 21)]];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v880 = 3;
									end
								end
							elseif (v79 > 378) then
								v76[v78[1 + 1]] = v76[v78[1192 - (487 + 702)]][v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[3 - 1]] = v76[v78[8 - 5]][v76[v78[4]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[541 - (86 + 452)]][v78[3 + 1]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[4 - 2]] = v76[v78[1075 - (123 + 949)]][v76[v78[917 - (836 + 77)]]];
								v70 = v70 + (651 - (354 + 296));
								v78 = v66[v70];
								v76[v78[94 - (5 + 87)]][v76[v78[3 + 0]]] = v76[v78[2 + 2]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v78[3];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v70 = v78[5 - 2];
							else
								local v3894 = 0 + 0;
								local v3895;
								local v3896;
								local v3897;
								local v3898;
								while true do
									if ((v3894 == (686 - (267 + 415))) or (2832 < 994)) then
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v3898 = v78[2 + 0];
										v3896, v3897 = v69(v76[v3898](v13(v76, v3898 + 1 + 0, v78[6 - 3])));
										v3894 = 5;
									end
									if (v3894 == 3) then
										v76[v78[2 + 0]] = v76[v78[1 + 2]] + v78[4];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v76[v78[1894 - (1799 + 93)]] = v76[v78[3]][v78[4]];
										v3894 = 2 + 2;
									end
									if (v3894 == (0 + 0)) then
										v3895 = nil;
										v3896, v3897 = nil;
										v3898 = nil;
										v76[v78[1 + 1]] = v59[v78[22 - (6 + 13)]];
										v3894 = 1060 - (383 + 676);
									end
									if (v3894 == (347 - (119 + 221))) then
										v78 = v66[v70];
										v76[v78[1 + 1]][v76[v78[484 - (345 + 136)]]] = v76[v78[6 - 2]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v3894 = 15 - 7;
									end
									if (v3894 == 8) then
										v76[v78[5 - 3]] = v76[v78[479 - (345 + 131)]] + v78[1305 - (916 + 385)];
										v70 = v70 + (293 - (6 + 286));
										v78 = v66[v70];
										v76[v78[4 - 2]] = v76[v78[3]] + v78[4];
										break;
									end
									if ((2206 == 2206) and (v3894 == (1 + 0))) then
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]] = v76[v78[3]];
										v70 = v70 + (292 - (151 + 140));
										v3894 = 2 - 0;
									end
									if (v3894 == 2) then
										v78 = v66[v70];
										v76[v78[956 - (32 + 922)]] = v76[v78[845 - (322 + 520)]] + v78[4 + 0];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v3894 = 3;
									end
									if (v3894 == 6) then
										v78 = v66[v70];
										v3898 = v78[1 + 1];
										v76[v3898] = v76[v3898](v13(v76, v3898 + 1 + 0, v71));
										v70 = v70 + 1;
										v3894 = 228 - (187 + 34);
									end
									if (v3894 == (5 + 0)) then
										v71 = (v3897 + v3898) - (1 - 0);
										v3895 = 0 + 0;
										for v7584 = v3898, v71 do
											local v7585 = 296 - (194 + 102);
											while true do
												if (v7585 == (552 - (49 + 503))) then
													v3895 = v3895 + 1;
													v76[v7584] = v3896[v3895];
													break;
												end
											end
										end
										v70 = v70 + (2 - 1);
										v3894 = 1355 - (12 + 1337);
									end
								end
							end
						elseif ((4054 < 4312) and (v79 <= (884 - 502))) then
							if (v79 <= (357 + 23)) then
								v76[v78[1067 - (38 + 1027)]] = v76[v78[3]] + v78[9 - 5];
							elseif (v79 > (502 - (11 + 110))) then
								local v3899 = 815 - (199 + 616);
								local v3900;
								while true do
									if (v3899 == (1 + 1)) then
										v78 = v66[v70];
										v76[v78[481 - (396 + 83)]] = v76[v78[3]][v78[8 - 4]];
										v70 = v70 + 1;
										v3899 = 3;
									end
									if ((2647 <= 4760) and (v3899 == (1 + 0))) then
										v78 = v66[v70];
										v76[v78[1787 - (774 + 1011)]] = v59[v78[7 - 4]];
										v70 = v70 + (1 - 0);
										v3899 = 2;
									end
									if (v3899 == (397 - (94 + 295))) then
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v76[v78[1 + 1]] = v78[3];
										v3899 = 18 - 9;
									end
									if ((v3899 == (6 - 3)) or (4361 == 3136)) then
										v78 = v66[v70];
										v76[v78[1 + 1]] = #v76[v78[3 + 0]];
										v70 = v70 + (1 - 0);
										v3899 = 10 - 6;
									end
									if (v3899 == (5 + 4)) then
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2 + 0]] = #v76[v78[5 - 2]];
										break;
									end
									if ((332 == 332) and (v3899 == (10 - (6 + 4)))) then
										v3900 = nil;
										v76[v78[5 - 3]] = v76[v78[856 - (629 + 224)]];
										v70 = v70 + (2 - 1);
										v3899 = 1523 - (466 + 1056);
									end
									if ((770 - (485 + 280)) == v3899) then
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[94 - (51 + 40)]][v78[797 - (610 + 183)]];
										v70 = v70 + 1 + 0;
										v3899 = 6 + 0;
									end
									if ((1466 <= 4098) and (v3899 == (1 + 5))) then
										v78 = v66[v70];
										v76[v78[2]] = #v76[v78[7 - 4]];
										v70 = v70 + (773 - (572 + 200));
										v3899 = 1982 - (1598 + 377);
									end
									if ((2682 > 576) and (v3899 == 7)) then
										v78 = v66[v70];
										v3900 = v78[2];
										v76[v3900] = v76[v3900](v13(v76, v3900 + (1 - 0), v78[3]));
										v3899 = 8;
									end
									if (v3899 == 4) then
										v78 = v66[v70];
										v76[v78[2 + 0]] = v59[v78[1 + 2]];
										v70 = v70 + (1279 - (881 + 397));
										v3899 = 5;
									end
								end
							else
								v76[v78[4 - 2]][v76[v78[3]]] = v76[v78[4]];
							end
						elseif (v79 <= (1597 - (892 + 321))) then
							if (v79 > (1010 - (441 + 186))) then
								do
									return v76[v78[2 + 0]]();
								end
							else
								local v3903 = 1421 - (606 + 815);
								local v3904;
								local v3905;
								local v3906;
								while true do
									if ((14 - 11) == v3903) then
										v76[v78[2 + 0]] = v78[3 + 0];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3906 = v78[1174 - (1055 + 117)];
										v3903 = 692 - (266 + 422);
									end
									if (v3903 == 2) then
										v78 = v66[v70];
										v76[v78[7 - 5]] = v76[v78[1894 - (1098 + 793)]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3903 = 1 + 2;
									end
									if ((421 == 421) and (v3903 == (1560 - (12 + 1547)))) then
										v70 = v70 + (1359 - (149 + 1209));
										v78 = v66[v70];
										v76[v78[1 + 1]] = v76[v78[1017 - (6 + 1008)]] + v78[1350 - (603 + 743)];
										v70 = v70 + (241 - (152 + 88));
										v3903 = 319 - (207 + 110);
									end
									if ((437 < 535) and ((0 - 0) == v3903)) then
										v3904 = nil;
										v3905 = nil;
										v3906 = nil;
										v76[v78[4 - 2]] = v76[v78[1836 - (1401 + 432)]][v76[v78[6 - 2]]];
										v3903 = 1038 - (838 + 199);
									end
									if (v3903 == (10 - 6)) then
										v3905 = v76[v3906];
										v3904 = v76[v3906 + (3 - 1)];
										if (v3904 > (430 - (320 + 110))) then
											if (v3905 > v76[v3906 + (2 - 1)]) then
												v70 = v78[5 - 2];
											else
												v76[v3906 + 3] = v3905;
											end
										elseif ((v3905 < v76[v3906 + 1 + 0]) or (1258 > 3924)) then
											v70 = v78[140 - (123 + 14)];
										else
											v76[v3906 + 3 + 0] = v3905;
										end
										break;
									end
								end
							end
						elseif ((v79 == (1073 - 688)) or (3334 >= 4206)) then
							local v3907 = 102 - (62 + 40);
							while true do
								if (v3907 == 9) then
									v76[v78[4 - 2]][v76[v78[1100 - (823 + 274)]]] = v76[v78[4]];
									v70 = v70 + (965 - (134 + 830));
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									break;
								end
								if ((13 - 8) == v3907) then
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1584 - (1430 + 151)]][v78[1362 - (104 + 1254)]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v3907 = 6;
								end
								if ((426 - (161 + 263)) == v3907) then
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[3 - 1]] = v76[v78[3]][v76[v78[1400 - (317 + 1079)]]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v3907 = 3;
								end
								if ((v3907 == (16 - 10)) or (336 > 4799)) then
									v76[v78[317 - (76 + 239)]] = v76[v78[376 - (349 + 24)]][v78[6 - 2]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[1 + 2]][v76[v78[1638 - (1428 + 206)]]];
									v70 = v70 + (1506 - (1207 + 298));
									v3907 = 7;
								end
								if (v3907 == (349 - (224 + 124))) then
									v78 = v66[v70];
									v76[v78[34 - (7 + 25)]] = v76[v78[7 - 4]][v76[v78[1056 - (886 + 166)]]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[321 - (142 + 176)]][v78[4 + 0]];
									v3907 = 940 - (584 + 354);
								end
								if ((v3907 == 4) or (2984 <= 751)) then
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[491 - (384 + 104)]] + v78[11 - 7];
									v70 = v70 + (36 - (13 + 22));
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[2 + 1]][v76[v78[8 - 4]]];
									v3907 = 13 - 8;
								end
								if (v3907 == 8) then
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[3]][v76[v78[2 + 2]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v3907 = 9;
								end
								if (v3907 == (4 + 3)) then
									v78 = v66[v70];
									v76[v78[5 - 3]] = v76[v78[3]][v78[256 - (106 + 146)]];
									v70 = v70 + (1 - 0);
									v78 = v66[v70];
									v76[v78[3 - 1]] = v76[v78[3 + 0]][v76[v78[4]]];
									v3907 = 29 - 21;
								end
								if (v3907 == (1021 - (75 + 943))) then
									v76[v78[2]][v76[v78[1066 - (972 + 91)]]] = v76[v78[4]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[3]] + v78[1350 - (918 + 428)];
									v70 = v70 + (1598 - (1099 + 498));
									v3907 = 1689 - (997 + 688);
								end
								if (v3907 == 0) then
									v76[v78[1424 - (1406 + 16)]] = v76[v78[2 + 1]][v78[4]];
									v70 = v70 + (920 - (715 + 204));
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[2 + 1]][v78[667 - (275 + 388)]];
									v70 = v70 + 1;
									v3907 = 1 - 0;
								end
							end
						else
							local v3908;
							local v3909, v3910;
							local v3911;
							v76[v78[2 + 0]] = v76[v78[2 + 1]][v78[3 + 1]];
							v70 = v70 + (3 - 2);
							v78 = v66[v70];
							v3911 = v78[1 + 1];
							v3909, v3910 = v69(v76[v3911](v13(v76, v3911 + (3 - 2), v78[2 + 1])));
							v71 = (v3910 + v3911) - 1;
							v3908 = 0 + 0;
							for v4953 = v3911, v71 do
								local v4954 = 0 + 0;
								while true do
									if ((v4954 == (565 - (5 + 560))) or (1430 > 4894)) then
										v3908 = v3908 + (407 - (77 + 329));
										v76[v4953] = v3909[v3908];
										break;
									end
								end
							end
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v3911 = v78[1 + 1];
							v76[v3911](v13(v76, v3911 + 1, v71));
							v70 = v70 + (1952 - (397 + 1554));
							v78 = v66[v70];
							v76[v78[1259 - (219 + 1038)]] = v76[v78[3 + 0]] + v78[4];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[1 + 1]] = v78[6 - 3];
						end
					elseif ((v79 <= 393) or (4455 < 2933)) then
						if (v79 <= (842 - 453)) then
							if (v79 <= (739 - 352)) then
								local v882;
								v76[v78[1 + 1]] = v76[v78[755 - (404 + 348)]];
								v70 = v70 + (149 - (99 + 49));
								v78 = v66[v70];
								v76[v78[2]] = v78[3 + 0];
								v70 = v70 + (1970 - (1223 + 746));
								v78 = v66[v70];
								v76[v78[2 - 0]] = v78[3 + 0];
								v70 = v70 + (1362 - (1247 + 114));
								v78 = v66[v70];
								v882 = v78[6 - 4];
								v76[v882] = v76[v882](v13(v76, v882 + 1, v78[3]));
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[6 - 3]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2]] = v59[v78[3]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1941 - (291 + 1648)]] = v76[v78[8 - 5]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[4 - 2]] = v78[3 + 0];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v882 = v78[2];
								v76[v882] = v76[v882](v13(v76, v882 + 1 + 0, v78[1701 - (1584 + 114)]));
								v70 = v70 + 1;
								v78 = v66[v70];
								if (v76[v78[6 - 4]] == v78[1769 - (957 + 808)]) then
									v70 = v70 + (3 - 2);
								else
									v70 = v78[12 - 9];
								end
							elseif ((v79 == (1459 - (435 + 636))) or (2328 <= 13)) then
								v76[v78[1 + 1]] = v76[v78[788 - (342 + 443)]][v76[v78[5 - 1]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[3 + 0]][v78[536 - (321 + 211)]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[5 - 2]][v78[12 - 8]];
								v70 = v70 + (1243 - (506 + 736));
								v78 = v66[v70];
								v76[v78[2]][v76[v78[1344 - (428 + 913)]]] = v76[v78[1855 - (834 + 1017)]];
								v70 = v70 + (1572 - (1493 + 78));
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[2 + 1]] + v78[4 + 0];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[3 - 0]][v76[v78[4]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[189 - (177 + 9)]][v78[4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[1255 - (236 + 1017)]] = v76[v78[2 + 1]][v76[v78[1983 - (1237 + 742)]]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[3 + 0]][v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[2 + 1]][v78[11 - 7]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[1566 - (566 + 998)]][v76[v78[2 + 1]]] = v76[v78[1632 - (11 + 1617)]];
								v70 = v70 + (1866 - (1156 + 709));
								v78 = v66[v70];
								v76[v78[4 - 2]] = v78[9 - 6];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v70 = v78[2 + 1];
							else
								local v3940;
								local v3941, v3942;
								local v3943;
								v76[v78[2]] = v76[v78[7 - 4]][v76[v78[5 - 1]]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[691 - (131 + 558)]] = v59[v78[3]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[9 - 6]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]] + v78[4];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[1 + 2]] + v78[4];
								v70 = v70 + (1646 - (1417 + 228));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[9 - 6]][v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v3943 = v78[4 - 2];
								v3941, v3942 = v69(v76[v3943](v13(v76, v3943 + (395 - (134 + 260)), v78[3])));
								v71 = (v3942 + v3943) - (2 - 1);
								v3940 = 0 + 0;
								for v4955 = v3943, v71 do
									v3940 = v3940 + 1 + 0;
									v76[v4955] = v3941[v3940];
								end
								v70 = v70 + 1;
								v78 = v66[v70];
								v3943 = v78[2];
								v76[v3943](v13(v76, v3943 + (1 - 0), v71));
								v70 = v70 + (135 - (49 + 85));
								v78 = v66[v70];
								v76[v78[1 + 1]] = v78[1 + 2];
							end
						elseif (v79 <= (909 - 518)) then
							if (v79 == (81 + 309)) then
								v76[v78[2 + 0]] = v76[v78[1380 - (922 + 455)]][v78[7 - 3]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[64 - (31 + 30)]][v76[v78[4 + 0]]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2 + 0]][v76[v78[3]]] = v76[v78[3 + 1]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[25 - (5 + 17)]] + v78[8 - 4];
								v70 = v70 + (71 - (65 + 5));
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3 + 0]][v76[v78[4]]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[1 + 1]] = v76[v78[1 + 2]][v78[845 - (685 + 156)]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[6 - 4]] = v76[v78[3 + 0]][v78[4]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[734 - (620 + 112)]][v76[v78[7 - 4]]] = v76[v78[4]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]] + v78[253 - (89 + 160)];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[1610 - (975 + 632)]][v76[v78[6 - 2]]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[4 - 1]][v78[4]];
								v70 = v70 + (511 - (358 + 152));
								v78 = v66[v70];
								v76[v78[3 - 1]] = v76[v78[1114 - (727 + 384)]][v78[15 - 11]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[5 - 3]][v76[v78[3]]] = v76[v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1227 - (804 + 421)]] = v76[v78[14 - 11]] + v78[12 - 8];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]] + v78[4];
								v70 = v70 + (1074 - (1029 + 44));
								v78 = v66[v70];
								v76[v78[2 + 0]] = v78[3 + 0];
							else
								local v3978 = 0;
								while true do
									if ((2356 > 1576) and (v3978 == (2 + 0))) then
										v76[v78[2]] = v76[v78[520 - (139 + 378)]][v78[4]];
										v70 = v70 + (253 - (181 + 71));
										v78 = v66[v70];
										v3978 = 2 + 1;
									end
									if (v3978 == 5) then
										v76[v78[6 - 4]] = v76[v78[5 - 2]] + v78[5 - 1];
										v70 = v70 + (300 - (243 + 56));
										v78 = v66[v70];
										v3978 = 149 - (56 + 87);
									end
									if (v3978 == (8 - 4)) then
										v76[v78[1 + 1]][v76[v78[850 - (523 + 324)]]] = v76[v78[4 + 0]];
										v70 = v70 + (3 - 2);
										v78 = v66[v70];
										v3978 = 5 + 0;
									end
									if (v3978 == 1) then
										v76[v78[4 - 2]] = v76[v78[6 - 3]][v76[v78[4 + 0]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3978 = 2 + 0;
									end
									if (v3978 == (897 - (9 + 881))) then
										v76[v78[1487 - (1429 + 56)]] = v76[v78[3]] + v78[6 - 2];
										v70 = v70 + (1 - 0);
										v78 = v66[v70];
										v3978 = 342 - (295 + 39);
									end
									if (v3978 == (366 - (223 + 135))) then
										v76[v78[3 - 1]] = v76[v78[3]][v76[v78[7 - 3]]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v3978 = 9;
									end
									if (v3978 == (1945 - (1472 + 467))) then
										v76[v78[1 + 1]] = v76[v78[2 + 1]] + v78[126 - (103 + 19)];
										v70 = v70 + (1834 - (1172 + 661));
										v78 = v66[v70];
										v3978 = 2 + 5;
									end
									if (v3978 == (2 + 7)) then
										v76[v78[3 - 1]] = v76[v78[1075 - (373 + 699)]][v78[1553 - (331 + 1218)]];
										break;
									end
									if (v3978 == 0) then
										v76[v78[2 - 0]] = v76[v78[3]] + v78[5 - 1];
										v70 = v70 + 1 + 0;
										v78 = v66[v70];
										v3978 = 1;
									end
									if (v3978 == (1 + 2)) then
										v76[v78[926 - (169 + 755)]] = v76[v78[3]][v78[101 - (23 + 74)]];
										v70 = v70 + (1963 - (935 + 1027));
										v78 = v66[v70];
										v3978 = 4;
									end
								end
							end
						elseif (v79 == (130 + 262)) then
							v76[v78[2 + 0]] = {};
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2]] = v60[v78[1872 - (287 + 1582)]];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[6 - 3]][v78[4]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[1 + 1]] = v60[v78[3]];
							v70 = v70 + (544 - (198 + 345));
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[8 - 5]][v78[4]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[1 + 1]] = v60[v78[3]];
							v70 = v70 + (986 - (135 + 850));
							v78 = v66[v70];
							v76[v78[6 - 4]] = v76[v78[8 - 5]][v78[862 - (150 + 708)]];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[2]] = v60[v78[9 - 6]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							if ((77 == 77) and not v76[v78[2]]) then
								v70 = v70 + 1 + 0;
							else
								v70 = v78[37 - (28 + 6)];
							end
						else
							local v3990;
							local v3991;
							local v3992;
							v76[v78[2]] = {};
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[529 - (380 + 147)]] = v59[v78[3]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v3992 = v78[7 - 5];
							v76[v3992] = v76[v3992]();
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[909 - (875 + 32)]] = v59[v78[3]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v3992 = v78[9 - 7];
							v76[v3992] = v76[v3992]();
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							for v4958 = v78[2], v78[882 - (611 + 268)] do
								v76[v4958] = nil;
							end
							v70 = v70 + (3 - 2);
							v78 = v66[v70];
							v3992 = v78[2];
							v3991 = v76[v3992];
							v3990 = v78[3];
							for v4960 = 1 + 0, v3990 do
								v3991[v4960] = v76[v3992 + v4960];
							end
						end
					elseif ((v79 <= (970 - (196 + 378))) or (2788 <= 1781)) then
						if (v79 <= (1437 - 1043)) then
							v76[v78[7 - 5]] = v78[564 - (549 + 12)] ^ v76[v78[8 - 4]];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[2 - 0]] = v76[v78[3 + 0]] / v76[v78[3 + 1]];
							v70 = v70 + (1860 - (1370 + 489));
							v78 = v66[v70];
							v76[v78[1 + 1]] = v76[v78[11 - 8]] - v78[4 + 0];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[1 + 1]] = v76[v78[1 + 2]] - v78[4];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[1269 - (1059 + 207)]] - v76[v78[2 + 2]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[3]] + v78[3 + 1];
							v70 = v70 + (1484 - (392 + 1091));
							v78 = v66[v70];
							v76[v78[1 + 1]] = v78[5 - 2] ^ v76[v78[14 - 10]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[7 - 5]] = v76[v78[4 - 1]] % v76[v78[6 - 2]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[6 - 4]] = v76[v78[6 - 3]] % v78[1418 - (791 + 623)];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[1893 - (1704 + 186)]] - v76[v78[3 + 1]];
						elseif ((v79 == (1021 - (406 + 220))) or (4633 <= 2379)) then
							local v4003;
							v76[v78[7 - 5]][v78[1798 - (779 + 1016)]] = v76[v78[3 + 1]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[1 + 1]] = v76[v78[8 - 5]];
							v70 = v70 + (391 - (79 + 311));
							v78 = v66[v70];
							v76[v78[116 - (90 + 24)]] = v78[8 - 5];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[1 + 1]] = v78[1187 - (298 + 886)];
							v70 = v70 + 1;
							v78 = v66[v70];
							v4003 = v78[1 + 1];
							v76[v4003] = v76[v4003](v13(v76, v4003 + 1 + 0, v78[3]));
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[3 - 1]][v78[5 - 2]] = v76[v78[4]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[3 + 0]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 - 0]] = v78[3];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[1 + 1]] = v78[1480 - (956 + 521)];
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v4003 = v78[2 - 0];
							v76[v4003] = v76[v4003](v13(v76, v4003 + 1, v78[6 - 3]));
						else
							local v4022 = 0 - 0;
							local v4023;
							local v4024;
							local v4025;
							local v4026;
							while true do
								if ((4495 == 4495) and (v4022 == (8 - 3))) then
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v4026 = v78[4 - 2];
									v4023, v4025 = v69(v76[v4026](v13(v76, v4026 + 1 + 0, v78[3])));
									v4022 = 2 + 4;
								end
								if (v4022 == 12) then
									v76[v78[2 + 0]] = v78[3];
									break;
								end
								if (v4022 == (5 + 2)) then
									v78 = v66[v70];
									v4026 = v78[5 - 3];
									v4023, v4025 = v69(v76[v4026](v13(v76, v4026 + 1 + 0, v71)));
									v71 = (v4025 + v4026) - 1;
									v4022 = 2 + 6;
								end
								if (v4022 == (1334 - (1010 + 316))) then
									v4024 = 0 + 0;
									for v7588 = v4026, v71 do
										v4024 = v4024 + 1;
										v76[v7588] = v4023[v4024];
									end
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v4022 = 2 + 7;
								end
								if (v4022 == 4) then
									v76[v78[2]] = v76[v78[2 + 1]] + v78[2 + 2];
									v70 = v70 + (1220 - (1130 + 89));
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[1764 - (1437 + 324)]];
									v4022 = 5;
								end
								if (v4022 == (2 + 0)) then
									v70 = v70 + (939 - (87 + 851));
									v78 = v66[v70];
									v76[v78[2 + 0]] = v59[v78[3]];
									v70 = v70 + (3 - 2);
									v4022 = 3;
								end
								if ((3740 >= 2576) and (v4022 == (9 + 1))) then
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[5 - 3]] = v76[v78[3]];
									v70 = v70 + (963 - (105 + 857));
									v4022 = 11;
								end
								if ((11 == v4022) or (714 > 4110)) then
									v78 = v66[v70];
									v76[v78[927 - (859 + 66)]] = v76[v78[3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v4022 = 17 - 5;
								end
								if (v4022 == (2 - 1)) then
									v76[v78[2 - 0]] = v76[v78[1 + 2]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[1 + 1]] = v76[v78[3]][v76[v78[11 - 7]]];
									v4022 = 7 - 5;
								end
								if ((1015 <= 3702) and (v4022 == 9)) then
									v4026 = v78[2];
									v4023 = {v76[v4026](v13(v76, v4026 + 1, v71))};
									v4024 = 0 - 0;
									for v7591 = v4026, v78[4] do
										local v7592 = 0 + 0;
										while true do
											if (v7592 == 0) then
												v4024 = v4024 + (1 - 0);
												v76[v7591] = v4023[v4024];
												break;
											end
										end
									end
									v4022 = 20 - 10;
								end
								if ((v4022 == (1 + 2)) or (517 >= 2147)) then
									v78 = v66[v70];
									v76[v78[667 - (203 + 462)]] = v76[v78[3 - 0]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v4022 = 271 - (250 + 17);
								end
								if (v4022 == 6) then
									v71 = (v4025 + v4026) - (4 - 3);
									v4024 = 0 - 0;
									for v7593 = v4026, v71 do
										local v7594 = 0 + 0;
										while true do
											if (v7594 == 0) then
												v4024 = v4024 + (1 - 0);
												v76[v7593] = v4023[v4024];
												break;
											end
										end
									end
									v70 = v70 + 1 + 0;
									v4022 = 1277 - (506 + 764);
								end
								if (v4022 == (0 + 0)) then
									v4023 = nil;
									v4024 = nil;
									v4023, v4025 = nil;
									v4026 = nil;
									v4022 = 1 + 0;
								end
							end
						end
					elseif (v79 <= (97 + 301)) then
						if (v79 == (161 + 236)) then
							local v4027 = 0 - 0;
							local v4028;
							while true do
								if (v4027 == (258 - (144 + 113))) then
									v4028 = v78[260 - (159 + 99)];
									v76[v4028] = v76[v4028]();
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v4027 = 697 - (601 + 94);
								end
								if (2 == v4027) then
									v76[v78[2 - 0]][v76[v78[4 - 1]]] = v76[v78[2 + 2]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[1 + 1]] = v78[3];
									v4027 = 598 - (110 + 485);
								end
								if (v4027 == (1139 - (316 + 823))) then
									v4028 = nil;
									v76[v78[1 + 1]] = v76[v78[1583 - (122 + 1458)]][v76[v78[4]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v4027 = 1 - 0;
								end
								if ((792 <= 3701) and (v4027 == (819 - (666 + 150)))) then
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v70 = v78[2 + 1];
									break;
								end
							end
						else
							v76[v78[2 + 0]] = v59[v78[6 - 3]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[455 - (424 + 28)]][v78[606 - (407 + 195)]];
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v76[v78[6 - 4]] = v76[v78[2 + 1]][v76[v78[1 + 3]]];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[3 - 1]][v76[v78[3 + 0]]] = v76[v78[5 - 1]];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[2 + 0]] = v78[9 - 6];
							v70 = v70 + 1;
							v78 = v66[v70];
							v70 = v78[7 - 4];
						end
					elseif (v79 > (278 + 121)) then
						local v4039;
						local v4040, v4041;
						local v4042;
						v76[v78[6 - 4]] = v76[v78[11 - 8]][v78[4]];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[3 + 0]][v76[v78[1196 - (274 + 918)]]];
						v70 = v70 + 1;
						v78 = v66[v70];
						v76[v78[1 + 1]] = v59[v78[3]];
						v70 = v70 + 1;
						v78 = v66[v70];
						v76[v78[9 - 7]] = v76[v78[3 + 0]];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[1816 - (1030 + 783)]] + v78[4];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[3 - 0]] + v78[1 + 3];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[706 - (167 + 536)]][v78[2 + 2]];
						v70 = v70 + (2 - 1);
						v78 = v66[v70];
						v4042 = v78[2];
						v4040, v4041 = v69(v76[v4042](v13(v76, v4042 + 1, v78[3 + 0])));
						v71 = (v4041 + v4042) - (1 + 0);
						v4039 = 1455 - (1304 + 151);
						for v4963 = v4042, v71 do
							local v4964 = 0;
							while true do
								if ((2068 >= 245) and (v4964 == (0 + 0))) then
									v4039 = v4039 + 1 + 0;
									v76[v4963] = v4040[v4039];
									break;
								end
							end
						end
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v4042 = v78[6 - 4];
						v76[v4042] = v76[v4042](v13(v76, v4042 + 1 + 0, v71));
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[2]][v76[v78[511 - (471 + 37)]]] = v76[v78[1030 - (557 + 469)]];
					else
						v76[v78[2]] = v59[v78[2 + 1]];
						v70 = v70 + (2 - 1);
						v78 = v66[v70];
						v76[v78[3 - 1]] = v76[v78[1380 - (513 + 864)]][v78[10 - 6]];
						v70 = v70 + (2 - 1);
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[5 - 2]][v76[v78[403 - (187 + 212)]]];
						v70 = v70 + 1;
						v78 = v66[v70];
						v76[v78[80 - (35 + 43)]][v76[v78[3]]] = v76[v78[1118 - (209 + 905)]];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v70 = v78[739 - (555 + 181)];
					end
				elseif (v79 <= (601 - 188)) then
					if (v79 <= (1391 - (953 + 32))) then
						if ((1665 == 1665) and (v79 <= 403)) then
							if (v79 <= 401) then
								v76[v78[7 - 5]] = v76[v78[3 - 0]][v78[6 - 2]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[505 - (412 + 91)]][v76[v78[3]]] = v76[v78[4]];
								v70 = v70 + (273 - (53 + 219));
								v78 = v66[v70];
								v76[v78[1651 - (145 + 1504)]] = v76[v78[3]] + v78[231 - (101 + 126)];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[2 + 1]][v76[v78[4 + 0]]];
								v70 = v70 + (627 - (153 + 473));
								v78 = v66[v70];
								v76[v78[2 + 0]] = v76[v78[3 + 0]][v78[4 + 0]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[3]][v78[973 - (752 + 217)]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[5 - 3]] = v76[v78[1 + 2]][v76[v78[9 - 5]]];
								v70 = v70 + (3 - 2);
								v78 = v66[v70];
								v76[v78[1 + 1]] = #v76[v78[3]];
								v70 = v70 + (1344 - (103 + 1240));
								v78 = v66[v70];
								v76[v78[2]][v76[v78[3 + 0]]] = v76[v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2]] = v78[1 + 2];
							elseif (v79 == (1613 - (16 + 1195))) then
								local v4067;
								v76[v78[8 - 6]] = v59[v78[3]];
								v70 = v70 + (1 - 0);
								v78 = v66[v70];
								v76[v78[1614 - (1541 + 71)]] = v59[v78[2 + 1]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[9 - 7]] = v59[v78[12 - 9]];
								v70 = v70 + (1645 - (1359 + 285));
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[3]][v78[4]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[1889 - (1178 + 709)]] = #v76[v78[3]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2 - 0]] = v78[3];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v4067 = v78[1432 - (1052 + 378)];
								do
									return v76[v4067](v13(v76, v4067 + (1691 - (1170 + 520)), v78[720 - (689 + 28)]));
								end
								v70 = v70 + (1634 - (534 + 1099));
								v78 = v66[v70];
								v4067 = v78[1846 - (686 + 1158)];
								do
									return v13(v76, v4067, v71);
								end
								v70 = v70 + 1;
								v78 = v66[v70];
								do
									return;
								end
							else
								local v4081 = 0 - 0;
								while true do
									if (v4081 == 1) then
										v76[v78[2]] = v76[v78[3 + 0]][v76[v78[4]]];
										v70 = v70 + (843 - (93 + 749));
										v78 = v66[v70];
										v4081 = 1 + 1;
									end
									if ((98 - (81 + 15)) == v4081) then
										v76[v78[4 - 2]][v76[v78[3]]] = v76[v78[5 - 1]];
										v70 = v70 + (2 - 1);
										v78 = v66[v70];
										v4081 = 6 - 3;
									end
									if (v4081 == (3 + 1)) then
										v76[v78[2 - 0]] = v76[v78[12 - 9]][v76[v78[4]]];
										break;
									end
									if ((v4081 == (6 - 3)) or (4630 == 1335)) then
										v76[v78[1370 - (1363 + 5)]] = v76[v78[3 + 0]] + v78[4];
										v70 = v70 + (384 - (233 + 150));
										v78 = v66[v70];
										v4081 = 4;
									end
									if ((2141 >= 831) and (v4081 == (0 + 0))) then
										v76[v78[9 - 7]] = v76[v78[12 - 9]][v78[12 - 8]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v4081 = 1190 - (762 + 427);
									end
								end
							end
						elseif (v79 <= 404) then
							v76[v78[3 - 1]] = v76[v78[1270 - (273 + 994)]][v78[4 + 0]];
							v70 = v70 + (1690 - (1434 + 255));
							v78 = v66[v70];
							v76[v78[2]] = v60[v78[971 - (361 + 607)]];
							v70 = v70 + (36 - (30 + 5));
							v78 = v66[v70];
							v76[v78[1 + 1]] = v76[v78[1 + 2]][v78[4]];
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[3]][v76[v78[647 - (602 + 41)]]];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[3 - 1]] = v76[v78[642 - (483 + 156)]][v78[3 + 1]];
							v70 = v70 + (1847 - (1633 + 213));
							v78 = v66[v70];
							v76[v78[4 - 2]] = v60[v78[3]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[608 - (115 + 490)]][v78[1106 - (706 + 396)]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[5 - 3]] = v76[v78[3]][v76[v78[900 - (301 + 595)]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[8 - 6]] = v76[v78[14 - 11]][v78[1627 - (610 + 1013)]];
							v70 = v70 + (4 - 3);
							v78 = v66[v70];
							v76[v78[4 - 2]] = v60[v78[11 - 8]];
						elseif (v79 == (308 + 97)) then
							local v4082 = 0 - 0;
							local v4083;
							local v4084;
							while true do
								if (v4082 == (0 - 0)) then
									v4083 = v78[1405 - (150 + 1253)];
									v4084 = v76[v4083];
									v4082 = 1120 - (74 + 1045);
								end
								if (v4082 == (1 + 0)) then
									for v7597 = v4083 + 1, v71 do
										v7(v4084, v76[v7597]);
									end
									break;
								end
							end
						else
							v76[v78[527 - (435 + 90)]] = v76[v78[1402 - (259 + 1140)]] / v78[1117 - (670 + 443)];
						end
					elseif (v79 <= (830 - 421)) then
						if (v79 <= (1877 - 1470)) then
							local v938 = 0 + 0;
							while true do
								if ((v938 == (69 - (38 + 27))) or (1368 < 774)) then
									v70 = v70 + 1;
									v78 = v66[v70];
									v70 = v78[3];
									break;
								end
								if ((0 + 0) == v938) then
									v76[v78[2]] = v76[v78[1 + 2]][v76[v78[1 + 3]]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v76[v78[837 - (341 + 494)]] = v76[v78[3]][v78[1 + 3]];
									v938 = 1 + 0;
								end
								if (v938 == (1 + 1)) then
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1618 - (1276 + 339)]][v76[v78[1 + 3]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v938 = 8 - 5;
								end
								if (v938 == (7 - 4)) then
									v76[v78[2]][v76[v78[10 - 7]]] = v76[v78[4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[7 - 5]] = v78[1 + 2];
									v938 = 4;
								end
								if (v938 == 1) then
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2 + 0]] = v76[v78[1087 - (76 + 1008)]][v78[4]];
									v70 = v70 + 1 + 0;
									v938 = 2 - 0;
								end
							end
						elseif ((1763 >= 1330) and (v79 == (288 + 120))) then
							local v4086;
							local v4087, v4088;
							local v4089;
							v76[v78[1843 - (1431 + 410)]] = v76[v78[3]][v78[1 + 3]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[4 - 2]] = v76[v78[10 - 7]][v76[v78[82 - (46 + 32)]]];
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v76[v78[2]] = v59[v78[1 + 2]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[168 - (92 + 74)]] = v76[v78[3 - 0]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[1 + 2]] + v78[937 - (237 + 696)];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[3 + 0]][v78[15 - 11]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v4089 = v78[2];
							v4087, v4088 = v69(v76[v4089](v13(v76, v4089 + (1 - 0), v78[3 + 0])));
							v71 = (v4088 + v4089) - 1;
							v4086 = 0 - 0;
							for v4983 = v4089, v71 do
								v4086 = v4086 + (4 - 3);
								v76[v4983] = v4087[v4086];
							end
							v70 = v70 + 1;
							v78 = v66[v70];
							v4089 = v78[2];
							v76[v4089](v13(v76, v4089 + 1 + 0, v71));
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[1882 - (1225 + 655)]] = v76[v78[953 - (184 + 766)]] + v78[1813 - (199 + 1610)];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[3]] + v78[1 + 3];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[2 - 0]] = v76[v78[4 - 1]][v76[v78[5 - 1]]];
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v76[v78[2 - 0]] = v78[3 + 0];
						else
							v76[v78[3 - 1]] = v76[v78[1560 - (1278 + 279)]][v78[4]];
							v70 = v70 + (409 - (148 + 260));
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[2 + 1]][v78[2 + 2]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[1 + 1]] = v76[v78[3]][v76[v78[4 - 0]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2 + 0]][v76[v78[6 - 3]]] = v76[v78[8 - 4]];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[952 - (606 + 344)]] = v76[v78[3 + 0]] + v78[10 - 6];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v76[v78[1 + 2]] + v78[812 - (715 + 93)];
							v70 = v70 + (789 - (744 + 44));
							v78 = v66[v70];
							v76[v78[1193 - (665 + 526)]] = v76[v78[3]][v76[v78[4]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v78[3];
						end
					elseif (v79 <= (1412 - (253 + 748))) then
						if ((1738 == 1738) and (v79 > 410)) then
							v76[v78[2 + 0]] = v76[v78[3]];
							v70 = v70 + (1028 - (914 + 113));
							v78 = v66[v70];
							v76[v78[2]] = v59[v78[1760 - (1188 + 569)]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[1374 - (822 + 550)]] = {};
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v76[v78[2 - 0]] = {};
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2]] = v59[v78[3]];
							v70 = v70 + (857 - (273 + 583));
							v78 = v66[v70];
							v76[v78[1 + 1]] = v76[v78[1 + 2]][v78[4 + 0]];
						else
							local v4129;
							local v4130, v4131;
							local v4132;
							v76[v78[475 - (368 + 105)]] = v76[v78[3 + 0]][v78[4]];
							v70 = v70 + (381 - (332 + 48));
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[4 - 1]][v76[v78[2 + 2]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[1250 - (967 + 281)]] = v59[v78[6 - 3]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[8 - 6]] = v76[v78[5 - 2]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[1018 - (103 + 913)]] = v76[v78[13 - 10]] + v78[6 - 2];
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v76[v78[1 + 1]] = v76[v78[787 - (23 + 761)]][v78[8 - 4]];
							v70 = v70 + (1772 - (179 + 1592));
							v78 = v66[v70];
							v4132 = v78[2];
							v4130, v4131 = v69(v76[v4132](v13(v76, v4132 + 1 + 0, v78[1 + 2])));
							v71 = (v4131 + v4132) - 1;
							v4129 = 0 - 0;
							for v4986 = v4132, v71 do
								local v4987 = 0 - 0;
								while true do
									if (v4987 == (0 + 0)) then
										v4129 = v4129 + 1;
										v76[v4986] = v4130[v4129];
										break;
									end
								end
							end
							v70 = v70 + (157 - (48 + 108));
							v78 = v66[v70];
							v4132 = v78[2 + 0];
							v76[v4132] = v76[v4132](v13(v76, v4132 + 1, v71));
							v70 = v70 + (1991 - (1371 + 619));
							v78 = v66[v70];
							v76[v78[157 - (143 + 12)]][v76[v78[691 - (92 + 596)]]] = v76[v78[4]];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[5 - 3]] = v76[v78[3]] + v78[580 - (274 + 302)];
							v70 = v70 + (2 - 1);
							v78 = v66[v70];
							v76[v78[2 + 0]] = v78[3];
							v70 = v70 + (1469 - (1060 + 408));
							v78 = v66[v70];
							v70 = v78[4 - 1];
						end
					elseif ((v79 > 412) or (2646 <= 602)) then
						local v4153 = 0;
						local v4154;
						local v4155;
						local v4156;
						local v4157;
						while true do
							if (v4153 == (1704 - (180 + 1521))) then
								v76[v78[7 - 5]] = v76[v78[3]];
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v4157 = v78[2];
								v4155, v4156 = v69(v76[v4157](v13(v76, v4157 + (1359 - (521 + 837)), v78[1132 - (889 + 240)])));
								v4153 = 4;
							end
							if (v4153 == (149 - (4 + 141))) then
								v71 = (v4156 + v4157) - (1 - 0);
								v4154 = 1662 - (1588 + 74);
								for v7600 = v4157, v71 do
									v4154 = v4154 + 1 + 0;
									v76[v7600] = v4155[v4154];
								end
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v4153 = 11 - 6;
							end
							if ((1985 - (1612 + 367)) == v4153) then
								v70 = v70 + 1;
								v78 = v66[v70];
								v4157 = v78[1427 - (538 + 887)];
								v76[v4157] = v76[v4157](v13(v76, v4157 + (2 - 1), v71));
								v70 = v70 + 1;
								v4153 = 1532 - (1121 + 404);
							end
							if (v4153 == (353 - (325 + 23))) then
								v4157 = v78[3 - 1];
								v4155, v4156 = v69(v76[v4157](v13(v76, v4157 + (1 - 0), v71)));
								v71 = (v4156 + v4157) - (2 - 1);
								v4154 = 0;
								for v7603 = v4157, v71 do
									local v7604 = 286 - (145 + 141);
									while true do
										if (0 == v7604) then
											v4154 = v4154 + (634 - (52 + 581));
											v76[v7603] = v4155[v4154];
											break;
										end
									end
								end
								v4153 = 6;
							end
							if (v4153 == (1157 - (1118 + 32))) then
								v78 = v66[v70];
								v76[v78[2 - 0]][v76[v78[1188 - (647 + 538)]]] = v76[v78[8 - 4]];
								break;
							end
							if ((v4153 == (1373 - (695 + 676))) or (4690 < 3426)) then
								v70 = v70 + (2 - 1);
								v78 = v66[v70];
								v76[v78[6 - 4]] = v76[v78[3 + 0]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v4153 = 1 + 2;
							end
							if (v4153 == (0 - 0)) then
								v4154 = nil;
								v4155, v4156 = nil;
								v4157 = nil;
								v76[v78[1 + 1]] = v59[v78[3]];
								v70 = v70 + 1 + 0;
								v4153 = 1 - 0;
							end
							if (1 == v4153) then
								v78 = v66[v70];
								v76[v78[1 + 1]] = v59[v78[3]];
								v70 = v70 + 1 + 0;
								v78 = v66[v70];
								v76[v78[2 - 0]] = v76[v78[2 + 1]];
								v4153 = 1 + 1;
							end
						end
					else
						local v4158 = 0;
						local v4159;
						local v4160;
						local v4161;
						local v4162;
						while true do
							if (v4158 == 1) then
								v71 = (v4161 + v4159) - (1296 - (542 + 753));
								v4162 = 0 + 0;
								v4158 = 1971 - (1008 + 961);
							end
							if (v4158 == (0 - 0)) then
								v4159 = v78[5 - 3];
								v4160, v4161 = v69(v76[v4159](v76[v4159 + 1]));
								v4158 = 1 + 0;
							end
							if (v4158 == (2 + 0)) then
								for v7605 = v4159, v71 do
									v4162 = v4162 + 1 + 0;
									v76[v7605] = v4160[v4162];
								end
								break;
							end
						end
					end
				elseif (v79 <= (1226 - 806)) then
					if (v79 <= (674 - 258)) then
						if (v79 <= (311 + 103)) then
							v76[v78[2]] = v76[v78[3]][v78[3 + 1]];
							v70 = v70 + (34 - (18 + 15));
							v78 = v66[v70];
							v76[v78[5 - 3]] = v76[v78[2 + 1]][v76[v78[1882 - (1811 + 67)]]];
							v70 = v70 + 1 + 0;
							v78 = v66[v70];
							v76[v78[2 + 0]] = v76[v78[3]][v78[4]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[1 + 1]] = v76[v78[449 - (218 + 228)]][v76[v78[1571 - (471 + 1096)]]];
							v70 = v70 + (1262 - (640 + 621));
							v78 = v66[v70];
							v76[v78[2 - 0]] = v76[v78[3 + 0]] + v76[v78[3 + 1]];
							v70 = v70 + 1;
							v78 = v66[v70];
							v76[v78[2 + 0]][v76[v78[2 + 1]]] = v76[v78[14 - 10]];
							v70 = v70 + (1 - 0);
							v78 = v66[v70];
							v70 = v78[3];
						elseif (v79 > (1354 - 939)) then
							local v4163 = 0 - 0;
							while true do
								if (v4163 == (469 - (92 + 373))) then
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[13 - 10]][v78[1 + 3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[970 - (868 + 100)]] = v76[v78[3]][v78[18 - 14]];
									v4163 = 789 - (133 + 651);
								end
								if (v4163 == (2 + 1)) then
									v76[v78[2 + 0]] = v76[v78[1329 - (329 + 997)]] + v78[5 - 1];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v76[v78[572 - (471 + 97)]]];
									v70 = v70 + (2 - 1);
									v4163 = 14 - 10;
								end
								if ((0 + 0) == v4163) then
									v76[v78[2]] = v76[v78[1 + 2]][v78[3 + 1]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[5 - 3]] = v59[v78[3]];
									v70 = v70 + (32 - (24 + 7));
									v4163 = 1138 - (204 + 933);
								end
								if (v4163 == (323 - (164 + 157))) then
									v70 = v70 + (1717 - (1169 + 547));
									v78 = v66[v70];
									v76[v78[2 - 0]][v76[v78[912 - (619 + 290)]]] = v76[v78[7 - 3]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v4163 = 3;
								end
								if (v4163 == 7) then
									v78 = v66[v70];
									v76[v78[2 + 0]][v76[v78[3 + 0]]] = v76[v78[8 - 4]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v4163 = 8;
								end
								if (v4163 == (189 - (107 + 76))) then
									v76[v78[2]] = v76[v78[7 - 4]][v78[890 - (865 + 21)]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[6 - 3]][v76[v78[4 + 0]]];
									v70 = v70 + 1 + 0;
									v4163 = 7 + 0;
								end
								if (v4163 == (2 + 3)) then
									v70 = v70 + (83 - (74 + 8));
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v76[v78[11 - 7]]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v4163 = 3 + 3;
								end
								if (v4163 == (7 + 1)) then
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v70 = v78[9 - 6];
									break;
								end
								if ((314 < 4786) and (v4163 == 1)) then
									v78 = v66[v70];
									v76[v78[4 - 2]] = v76[v78[2 + 1]][v78[9 - 5]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[1277 - (552 + 722)]][v76[v78[2 + 2]]];
									v4163 = 1086 - (884 + 200);
								end
							end
						else
							local v4164 = v78[3 + 0];
							local v4165 = v76[v4164];
							for v4988 = v4164 + 1 + 0, v78[14 - 10] do
								v4165 = v4165 .. v76[v4988];
							end
							v76[v78[2]] = v4165;
						end
					elseif (v79 <= (1553 - (629 + 506))) then
						if (v79 == (100 + 317)) then
							local v4167 = 0 + 0;
							while true do
								if ((v4167 == (1 + 3)) or (4642 < 856)) then
									v76[v78[2 + 0]] = v78[7 - 4];
									break;
								end
								if (v4167 == 2) then
									v76[v78[2]] = v76[v78[1 + 2]][v76[v78[423 - (348 + 71)]]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v4167 = 1839 - (242 + 1594);
								end
								if (v4167 == (8 - 5)) then
									v76[v78[80 - (60 + 18)]][v76[v78[2 + 1]]] = v76[v78[4]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v4167 = 30 - (20 + 6);
								end
								if (v4167 == (1228 - (1060 + 167))) then
									v76[v78[2]] = v76[v78[3 + 0]][v78[1 + 3]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v4167 = 1000 - (46 + 952);
								end
								if ((2647 > 702) and (v4167 == (0 - 0))) then
									v76[v78[3 - 1]][v76[v78[1 + 2]]] = v76[v78[1291 - (690 + 597)]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v4167 = 1 + 0;
								end
							end
						else
							local v4168 = 0 + 0;
							while true do
								if ((12 - 6) == v4168) then
									v70 = v78[3 + 0];
									break;
								end
								if ((v4168 == (0 + 0)) or (2736 > 3606)) then
									v76[v78[524 - (402 + 120)]] = v76[v78[3]][v78[1970 - (1058 + 908)]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v4168 = 2 - 1;
								end
								if (v4168 == (1 - 0)) then
									v76[v78[1959 - (1344 + 613)]] = v76[v78[717 - (576 + 138)]][v76[v78[4]]];
									v70 = v70 + 1 + 0;
									v78 = v66[v70];
									v4168 = 2 - 0;
								end
								if ((2941 > 2308) and (v4168 == (237 - (104 + 128)))) then
									v76[v78[1 + 1]][v76[v78[5 - 2]]] = v76[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v4168 = 1630 - (1424 + 200);
								end
								if (v4168 == (399 - (334 + 61))) then
									v76[v78[9 - 7]] = v76[v78[1829 - (1668 + 158)]] * v76[v78[860 - (148 + 708)]];
									v70 = v70 + (1808 - (1739 + 68));
									v78 = v66[v70];
									v4168 = 5;
								end
								if (v4168 == (2 + 0)) then
									v76[v78[2 - 0]] = v76[v78[3]][v78[1497 - (501 + 992)]];
									v70 = v70 + (3 - 2);
									v78 = v66[v70];
									v4168 = 3;
								end
								if ((3548 <= 4623) and (v4168 == (4 - 1))) then
									v76[v78[9 - 7]] = v76[v78[3]][v76[v78[4]]];
									v70 = v70 + (2 - 1);
									v78 = v66[v70];
									v4168 = 276 - (85 + 187);
								end
							end
						end
					elseif (v79 == (458 - (15 + 24))) then
						local v4169 = v78[2 + 0];
						local v4170 = v76[v4169 + (3 - 1)];
						local v4171 = v76[v4169] + v4170;
						v76[v4169] = v4171;
						if (v4170 > 0) then
							if ((1633 <= 4271) and (v4171 <= v76[v4169 + 1])) then
								v70 = v78[3];
								v76[v4169 + 2 + 1] = v4171;
							end
						elseif (v4171 >= v76[v4169 + (42 - (7 + 34))]) then
							v70 = v78[1 + 2];
							v76[v4169 + 3] = v4171;
						end
					else
						local v4173;
						v76[v78[2 - 0]] = v76[v78[1 + 2]] + v78[730 - (185 + 541)];
						v70 = v70 + (1 - 0);
						v78 = v66[v70];
						v76[v78[2 + 0]] = v76[v78[1775 - (1547 + 225)]] + v78[7 - 3];
						v70 = v70 + (1 - 0);
						v78 = v66[v70];
						v76[v78[6 - 4]] = v76[v78[3]][v76[v78[1726 - (797 + 925)]]];
						v70 = v70 + 1;
						v78 = v66[v70];
						v4173 = v78[1063 - (93 + 968)];
						v76[v4173](v76[v4173 + 1 + 0]);
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[4 - 2]] = v76[v78[7 - 4]] + v78[519 - (209 + 306)];
						v70 = v70 + (870 - (21 + 848));
						v78 = v66[v70];
						v76[v78[869 - (362 + 505)]] = v78[3 - 0];
					end
				elseif (v79 <= (397 + 26)) then
					if (v79 <= (862 - 441)) then
						local v952;
						local v953, v954;
						local v955;
						v76[v78[26 - (6 + 18)]] = v76[v78[3]][v76[v78[12 - 8]]];
						v70 = v70 + 1;
						v78 = v66[v70];
						v76[v78[1 + 1]] = v59[v78[3]];
						v70 = v70 + (890 - (860 + 29));
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[3 + 0]];
						v70 = v70 + 1;
						v78 = v66[v70];
						v76[v78[1358 - (60 + 1296)]] = v76[v78[16 - (7 + 6)]] + v78[1 + 3];
						v70 = v70 + (1341 - (501 + 839));
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[3 + 0]][v78[648 - (580 + 64)]];
						v70 = v70 + 1;
						v78 = v66[v70];
						v955 = v78[1 + 1];
						v953, v954 = v69(v76[v955](v13(v76, v955 + 1 + 0, v78[7 - 4])));
						v71 = (v954 + v955) - (1 + 0);
						v952 = 0 - 0;
						for v1015 = v955, v71 do
							local v1016 = 0 - 0;
							while true do
								if (v1016 == (1524 - (37 + 1487))) then
									v952 = v952 + 1 + 0;
									v76[v1015] = v953[v952];
									break;
								end
							end
						end
						v70 = v70 + 1;
						v78 = v66[v70];
						v955 = v78[2];
						do
							return v76[v955](v13(v76, v955 + (4 - 3), v71));
						end
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v955 = v78[2 + 0];
						do
							return v13(v76, v955, v71);
						end
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v70 = v78[6 - 3];
					elseif ((v79 == 422) or (1414 >= 2042)) then
						v76[v78[2 + 0]] = v59[v78[1309 - (885 + 421)]];
						v70 = v70 + (2 - 1);
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[3]][v78[1 + 3]];
						v70 = v70 + 1;
						v78 = v66[v70];
						v76[v78[7 - 5]] = v76[v78[11 - 8]][v76[v78[1834 - (252 + 1578)]]];
						v70 = v70 + (4 - 3);
						v78 = v66[v70];
						v76[v78[3 - 1]][v76[v78[11 - 8]]] = v76[v78[6 - 2]];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[2 + 0]] = v76[v78[12 - 9]] + v78[944 - (53 + 887)];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[6 - 3]][v76[v78[798 - (339 + 455)]]];
					elseif ((3125 < 4905) and (v76[v78[1662 - (1458 + 202)]] ~= v78[85 - (63 + 18)])) then
						v70 = v70 + 1 + 0;
					else
						v70 = v78[2 + 1];
					end
				elseif (v79 <= (2356 - (393 + 1538))) then
					if (v79 > (198 + 226)) then
						local v4193;
						local v4194, v4195;
						local v4196;
						v76[v78[1206 - (852 + 352)]] = v59[v78[191 - (137 + 51)]];
						v70 = v70 + (4 - 3);
						v78 = v66[v70];
						v76[v78[1063 - (854 + 207)]] = v76[v78[1311 - (350 + 958)]];
						v70 = v70 + (1 - 0);
						v78 = v66[v70];
						v76[v78[1 + 1]] = v76[v78[3 + 0]] + v78[272 - (15 + 253)];
						v70 = v70 + (1051 - (232 + 818));
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[536 - (129 + 404)]] + v78[3 + 1];
						v70 = v70 + (2 - 1);
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[3]] + v78[8 - 4];
						v70 = v70 + (73 - (20 + 52));
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[5 - 2]][v78[4]];
						v70 = v70 + 1 + 0;
						v78 = v66[v70];
						v4196 = v78[3 - 1];
						v4194, v4195 = v69(v76[v4196](v13(v76, v4196 + (1074 - (163 + 910)), v78[4 - 1])));
						v71 = (v4195 + v4196) - 1;
						v4193 = 0;
						for v4989 = v4196, v71 do
							v4193 = v4193 + (1551 - (1149 + 401));
							v76[v4989] = v4194[v4193];
						end
						v70 = v70 + 1;
						v78 = v66[v70];
						v4196 = v78[846 - (473 + 371)];
						v76[v4196](v13(v76, v4196 + 1 + 0, v71));
						v70 = v70 + (2 - 1);
						v78 = v66[v70];
						v76[v78[2 + 0]] = v76[v78[293 - (252 + 38)]] + v78[4];
						v70 = v70 + (30 - (17 + 12));
						v78 = v66[v70];
						v76[v78[2]] = v76[v78[1302 - (939 + 360)]] + v78[4];
					elseif ((2970 == 2970) and (v78[2] == v76[v78[1 + 3]])) then
						v70 = v70 + 1;
					else
						v70 = v78[3];
					end
				elseif (v79 == (313 + 113)) then
					do
						return v76[v78[2]];
					end
				else
					v76[v78[3 - 1]] = v76[v78[1503 - (13 + 1487)]][v76[v78[2 + 2]]];
					v70 = v70 + (1903 - (778 + 1124));
					v78 = v66[v70];
					v76[v78[2 + 0]] = v76[v78[5 - 2]][v78[2 + 2]];
					v70 = v70 + (1 - 0);
					v78 = v66[v70];
					v76[v78[1 + 1]] = v76[v78[3 - 0]][v78[945 - (53 + 888)]];
					v70 = v70 + (1782 - (651 + 1130));
					v78 = v66[v70];
					v76[v78[2 - 0]][v76[v78[3 + 0]]] = v76[v78[4]];
					v70 = v70 + 1 + 0;
					v78 = v66[v70];
					v76[v78[5 - 3]] = v76[v78[3]] + v78[4];
					v70 = v70 + (1619 - (1058 + 560));
					v78 = v66[v70];
					v76[v78[375 - (264 + 109)]] = v78[2 + 1];
				end
				v70 = v70 + (2 - 1);
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return v15("LOL!", v9(), ...);
return main
